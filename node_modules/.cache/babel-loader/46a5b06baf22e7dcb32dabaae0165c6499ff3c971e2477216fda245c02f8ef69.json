{"ast":null,"code":"var _jsxFileName = \"/Users/aaryaupadhyay/umich-prediction-market/src/createPredictionButton.js\",\n  _s = $RefreshSig$();\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { createPrediction } from \"./solana/createPrediction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePredictionButton = () => {\n  _s();\n  const wallet = useWallet();\n  const handleCreate = async () => {\n    if (!wallet.connected) {\n      alert(\"Connect your wallet first.\");\n      return;\n    }\n    const question = prompt(\"Enter your prediction question:\");\n    if (!question) return;\n    try {\n      await createPrediction(wallet, question);\n      alert(\"‚úÖ Prediction sent to the blockchain!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"‚ùå Error creating prediction\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleCreate,\n    children: \"\\uD83D\\uDCDC Create Prediction\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_s(CreatePredictionButton, \"i+/qxb0flJRE8MgvazOGMkNRtsk=\", false, function () {\n  return [useWallet];\n});\n_c = CreatePredictionButton;\nexport default CreatePredictionButton;\nvar _c;\n$RefreshReg$(_c, \"CreatePredictionButton\");","map":{"version":3,"names":["useWallet","createPrediction","jsxDEV","_jsxDEV","CreatePredictionButton","_s","wallet","handleCreate","connected","alert","question","prompt","err","console","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aaryaupadhyay/umich-prediction-market/src/createPredictionButton.js"],"sourcesContent":["import { useWallet } from \"@solana/wallet-adapter-react\";\nimport { createPrediction } from \"./solana/createPrediction\";\n\nconst CreatePredictionButton = () => {\n  const wallet = useWallet();\n\n  const handleCreate = async () => {\n    if (!wallet.connected) {\n      alert(\"Connect your wallet first.\");\n      return;\n    }\n\n    const question = prompt(\"Enter your prediction question:\");\n    if (!question) return;\n\n    try {\n      await createPrediction(wallet, question);\n      alert(\"‚úÖ Prediction sent to the blockchain!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"‚ùå Error creating prediction\");\n    }\n  };\n\n  return <button onClick={handleCreate}>üìú Create Prediction</button>;\n};\n\nexport default CreatePredictionButton;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,8BAA8B;AACxD,SAASC,gBAAgB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;EAE1B,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACD,MAAM,CAACE,SAAS,EAAE;MACrBC,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IAEA,MAAMC,QAAQ,GAAGC,MAAM,CAAC,iCAAiC,CAAC;IAC1D,IAAI,CAACD,QAAQ,EAAE;IAEf,IAAI;MACF,MAAMT,gBAAgB,CAACK,MAAM,EAAEI,QAAQ,CAAC;MACxCD,KAAK,CAAC,sCAAsC,CAAC;IAC/C,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBH,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBAAON,OAAA;IAAQY,OAAO,EAAER,YAAa;IAAAS,QAAA,EAAC;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACrE,CAAC;AAACf,EAAA,CAtBID,sBAAsB;EAAA,QACXJ,SAAS;AAAA;AAAAqB,EAAA,GADpBjB,sBAAsB;AAwB5B,eAAeA,sBAAsB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}