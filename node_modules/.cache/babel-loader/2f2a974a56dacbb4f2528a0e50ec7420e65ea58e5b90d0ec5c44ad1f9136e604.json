{"ast":null,"code":"import BN from 'bn.js';\nexport { default as BN } from 'bn.js';\nimport { PublicKey, Transaction, TransactionInstruction, SendTransactionError, NONCE_ACCOUNT_LENGTH, SystemProgram } from '@solana/web3.js';\nimport * as web3_js from '@solana/web3.js';\nexport { web3_js as web3 };\nimport { Buffer as Buffer$1 } from 'buffer';\nimport bs58$1 from 'bs58';\nimport camelCase from 'camelcase';\nimport * as borsh from '@coral-xyz/borsh';\nimport { sha256 as sha256$1 } from '@noble/hashes/sha256';\nimport { inflate } from 'pako';\nimport EventEmitter from 'eventemitter3';\n\n/**\n * Splits an array into chunks\n *\n * @param array Array of objects to chunk.\n * @param size The max size of a chunk.\n * @returns A two dimensional array where each T[] length is < the provided size.\n */\nfunction chunks(array, size) {\n  return Array.apply(0, new Array(Math.ceil(array.length / size))).map((_, index) => array.slice(index * size, (index + 1) * size));\n}\n/**\n * Check if a transaction object is a VersionedTransaction or not\n *\n * @param tx\n * @returns bool\n */\nconst isVersionedTransaction = tx => {\n  return \"version\" in tx;\n};\nfunction encode$3(data) {\n  return data.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"0x\");\n}\nfunction decode$3(data) {\n  if (data.indexOf(\"0x\") === 0) {\n    data = data.substr(2);\n  }\n  if (data.length % 2 === 1) {\n    data = \"0\" + data;\n  }\n  let key = data.match(/.{2}/g);\n  if (key === null) {\n    return Buffer$1.from([]);\n  }\n  return Buffer$1.from(key.map(byte => parseInt(byte, 16)));\n}\nvar hex = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  encode: encode$3,\n  decode: decode$3\n});\nfunction decode$2(array) {\n  const decoder = new TextDecoder(\"utf-8\") // Browser https://caniuse.com/textencoder.\n  ; // Node.\n  return decoder.decode(array);\n}\nfunction encode$2(input) {\n  const encoder = new TextEncoder() // Browser.\n  ; // Node.\n  return encoder.encode(input);\n}\nvar utf8 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  decode: decode$2,\n  encode: encode$2\n});\nfunction encode$1(data) {\n  return bs58$1.encode(data);\n}\nfunction decode$1(data) {\n  return bs58$1.decode(data);\n}\nvar bs58 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  encode: encode$1,\n  decode: decode$1\n});\nfunction encode(data) {\n  return data.toString(\"base64\");\n}\nfunction decode(data) {\n  return Buffer$1.from(data, \"base64\");\n}\nvar base64 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  encode: encode,\n  decode: decode\n});\nvar index$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hex: hex,\n  utf8: utf8,\n  bs58: bs58,\n  base64: base64\n});\nfunction isCompositeAccounts(accountItem) {\n  return \"accounts\" in accountItem;\n}\n// Deterministic IDL address as a function of the program id.\nasync function idlAddress(programId) {\n  const base = (await PublicKey.findProgramAddress([], programId))[0];\n  return await PublicKey.createWithSeed(base, seed(), programId);\n}\n// Seed for generating the idlAddress.\nfunction seed() {\n  return \"anchor:idl\";\n}\nconst IDL_ACCOUNT_LAYOUT = borsh.struct([borsh.publicKey(\"authority\"), borsh.vecU8(\"data\")]);\nfunction decodeIdlAccount(data) {\n  return IDL_ACCOUNT_LAYOUT.decode(data);\n}\n/**\n * Convert the given IDL to camelCase.\n *\n * The IDL is generated from Rust which has different conventions compared to\n * JS/TS, e.g. instruction names in Rust are snake_case.\n *\n * The conversion happens automatically for programs, however, if you are using\n * internals such as `BorshInstructionCoder` and you only have the original\n * (not camelCase) IDL, you might need to use this function.\n *\n * @param idl IDL to convert to camelCase\n * @returns camelCase version of the IDL\n */\nfunction convertIdlToCamelCase(idl) {\n  const KEYS_TO_CONVERT = [\"name\", \"path\", \"account\", \"relations\", \"generic\"];\n  // `my_account.field` is getting converted to `myAccountField` but we\n  // need `myAccount.field`.\n  const toCamelCase = s => s.split(\".\").map(camelCase).join(\".\");\n  const recursivelyConvertNamesToCamelCase = obj => {\n    for (const key in obj) {\n      const val = obj[key];\n      if (KEYS_TO_CONVERT.includes(key)) {\n        obj[key] = Array.isArray(val) ? val.map(toCamelCase) : toCamelCase(val);\n      } else if (typeof val === \"object\") {\n        recursivelyConvertNamesToCamelCase(val);\n      }\n    }\n  };\n  const camelCasedIdl = structuredClone(idl);\n  recursivelyConvertNamesToCamelCase(camelCasedIdl);\n  return camelCasedIdl;\n}\n/** Conveniently handle all defined field kinds with proper type support. */\nfunction handleDefinedFields(fields, unitCb, namedCb, tupleCb) {\n  // Unit\n  if (!(fields === null || fields === void 0 ? void 0 : fields.length)) return unitCb();\n  // Named\n  if (fields[0].name) {\n    return namedCb(fields);\n  }\n  // Tuple\n  return tupleCb(fields);\n}\nfunction parseIdlErrors(idl) {\n  const errors = new Map();\n  if (idl.errors) {\n    idl.errors.forEach(e => {\n      var _a;\n      let msg = (_a = e.msg) !== null && _a !== void 0 ? _a : e.name;\n      errors.set(e.code, msg);\n    });\n  }\n  return errors;\n}\nfunction toInstruction(idlIx, ...args) {\n  if (idlIx.args.length != args.length) {\n    throw new Error(\"Invalid argument length\");\n  }\n  const ix = {};\n  let idx = 0;\n  idlIx.args.forEach(ixArg => {\n    ix[ixArg.name] = args[idx];\n    idx += 1;\n  });\n  return ix;\n}\n// Throws error if any account required for the `ix` is not given.\nfunction validateAccounts(ixAccounts, accounts = {}) {\n  ixAccounts.forEach(acc => {\n    if (isCompositeAccounts(acc)) {\n      validateAccounts(acc.accounts, accounts[acc.name]);\n    } else {\n      if (!accounts[acc.name]) {\n        throw new Error(`Account \\`${acc.name}\\` not provided.`);\n      }\n    }\n  });\n}\n// Translates an address to a Pubkey.\nfunction translateAddress(address) {\n  return address instanceof PublicKey ? address : new PublicKey(address);\n}\n\n/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    this.value = void 0;\n    this.key = void 0;\n    this.type = void 0;\n    this.refinement = void 0;\n    this.path = void 0;\n    this.branch = void 0;\n    this.failures = void 0;\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n    this.failures = () => {\n      var _cached;\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n  let valid = true;\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    this.TYPE = void 0;\n    this.type = void 0;\n    this.schema = void 0;\n    this.coercer = void 0;\n    this.validator = void 0;\n    this.refiner = void 0;\n    this.entries = void 0;\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return validate(value, this, options);\n  }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n  });\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n  });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nfunction union$1(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n    coercer(value, ctx) {\n      const firstMatch = Structs.find(s => {\n        const [e] = s.validate(value, {\n          coerce: true\n        });\n        return !e;\n      }) || unknown();\n      return firstMatch.coercer(value, ctx);\n    },\n    validator(value, ctx) {\n      const failures = [];\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n\n/**\n * Sends a transaction to a program with the given accounts and instruction\n * data.\n */\nasync function invoke(programId, accounts, data, provider) {\n  programId = translateAddress(programId);\n  if (!provider) {\n    provider = getProvider();\n  }\n  const tx = new Transaction();\n  tx.add(new TransactionInstruction({\n    programId,\n    keys: accounts !== null && accounts !== void 0 ? accounts : [],\n    data\n  }));\n  if (provider.sendAndConfirm === undefined) {\n    throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n  }\n  return await provider.sendAndConfirm(tx, []);\n}\nconst GET_MULTIPLE_ACCOUNTS_LIMIT = 99;\nasync function getMultipleAccounts(connection, publicKeys, commitment) {\n  const results = await getMultipleAccountsAndContext(connection, publicKeys, commitment);\n  return results.map(result => {\n    return result ? {\n      publicKey: result.publicKey,\n      account: result.account\n    } : null;\n  });\n}\nasync function getMultipleAccountsAndContext(connection, publicKeys, commitment) {\n  if (publicKeys.length <= GET_MULTIPLE_ACCOUNTS_LIMIT) {\n    return await getMultipleAccountsAndContextCore(connection, publicKeys, commitment);\n  } else {\n    const batches = chunks(publicKeys, GET_MULTIPLE_ACCOUNTS_LIMIT);\n    const results = await Promise.all(batches.map(batch => getMultipleAccountsAndContextCore(connection, batch, commitment)));\n    return results.flat();\n  }\n}\nasync function getMultipleAccountsAndContextCore(connection, publicKeys, commitmentOverride) {\n  const commitment = commitmentOverride !== null && commitmentOverride !== void 0 ? commitmentOverride : connection.commitment;\n  const {\n    value: accountInfos,\n    context\n  } = await connection.getMultipleAccountsInfoAndContext(publicKeys, commitment);\n  const accounts = accountInfos.map((account, idx) => {\n    if (account === null) {\n      return null;\n    }\n    return {\n      publicKey: publicKeys[idx],\n      account,\n      context\n    };\n  });\n  return accounts;\n}\n// copy from @solana/web3.js that has a commitment param\nasync function simulateTransaction(connection, transaction, signers, commitment, includeAccounts) {\n  var _a;\n  if (signers && signers.length > 0) {\n    transaction.sign(...signers);\n  }\n  // @ts-expect-error\n  const message = transaction._compile();\n  const signData = message.serialize();\n  // @ts-expect-error\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString(\"base64\");\n  const config = {\n    encoding: \"base64\",\n    commitment: commitment !== null && commitment !== void 0 ? commitment : connection.commitment\n  };\n  if (includeAccounts) {\n    const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n    config[\"accounts\"] = {\n      encoding: \"base64\",\n      addresses\n    };\n  }\n  if (signers && signers.length > 0) {\n    config.sigVerify = true;\n  }\n  const args = [encodedTransaction, config];\n  // @ts-expect-error\n  const unsafeRes = await connection._rpcRequest(\"simulateTransaction\", args);\n  const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n  if (\"error\" in res) {\n    let logs;\n    if (\"data\" in res.error) {\n      logs = (_a = res.error.data) === null || _a === void 0 ? void 0 : _a.logs;\n      if (logs && Array.isArray(logs)) {\n        const traceIndent = \"\\n    \";\n        const logTrace = traceIndent + logs.join(traceIndent);\n        console.error(res.error.message, logTrace);\n      }\n    }\n    throw new SendTransactionError(\"failed to simulate transaction: \" + res.error.message, logs);\n  }\n  return res.result;\n}\n// copy from @solana/web3.js\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if (\"error\" in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n// copy from @solana/web3.js\nconst UnknownRpcResult = createRpcResult(unknown());\n// copy from @solana/web3.js\nfunction createRpcResult(result) {\n  return union$1([type({\n    jsonrpc: literal(\"2.0\"),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal(\"2.0\"),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\n// copy from @solana/web3.js\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n// copy from @solana/web3.js\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union$1([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number())\n}));\nvar rpc = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  invoke: invoke,\n  getMultipleAccounts: getMultipleAccounts,\n  getMultipleAccountsAndContext: getMultipleAccountsAndContext,\n  simulateTransaction: simulateTransaction\n});\n\n/**\n * The network and wallet context used to send transactions paid for and signed\n * by the provider.\n */\nclass AnchorProvider {\n  /**\n   * @param connection The cluster connection where the program is deployed.\n   * @param wallet     The wallet used to pay for and sign all transactions.\n   * @param opts       Transaction confirmation options to use by default.\n   */\n  constructor(connection, wallet, opts = AnchorProvider.defaultOptions()) {\n    this.connection = connection;\n    this.wallet = wallet;\n    this.opts = opts;\n    this.publicKey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n  }\n  static defaultOptions() {\n    return {\n      preflightCommitment: \"processed\",\n      commitment: \"processed\"\n    };\n  }\n  /**\n   * Returns a `Provider` with a wallet read from the local filesystem.\n   *\n   * @param url  The network cluster url.\n   * @param opts The default transaction confirmation options.\n   *\n   * (This api is for Node only.)\n   */\n  static local(url, opts = AnchorProvider.defaultOptions()) {\n    {\n      throw new Error(`Provider local is not available on browser.`);\n    }\n  }\n  /**\n   * Returns a `Provider` read from the `ANCHOR_PROVIDER_URL` environment\n   * variable\n   *\n   * (This api is for Node only.)\n   */\n  static env() {\n    {\n      throw new Error(`Provider env is not available on browser.`);\n    }\n  }\n  /**\n   * Sends the given transaction, paid for and signed by the provider's wallet.\n   *\n   * @param tx      The transaction to send.\n   * @param signers The signers of the transaction.\n   * @param opts    Transaction confirmation options.\n   */\n  async sendAndConfirm(tx, signers, opts) {\n    var _a, _b, _c, _d;\n    if (opts === undefined) {\n      opts = this.opts;\n    }\n    if (isVersionedTransaction(tx)) {\n      if (signers) {\n        tx.sign(signers);\n      }\n    } else {\n      tx.feePayer = (_a = tx.feePayer) !== null && _a !== void 0 ? _a : this.wallet.publicKey;\n      tx.recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n      if (signers) {\n        for (const signer of signers) {\n          tx.partialSign(signer);\n        }\n      }\n    }\n    tx = await this.wallet.signTransaction(tx);\n    const rawTx = tx.serialize();\n    try {\n      return await sendAndConfirmRawTransaction(this.connection, rawTx, opts);\n    } catch (err) {\n      // thrown if the underlying 'confirmTransaction' encounters a failed tx\n      // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n      if (err instanceof ConfirmError) {\n        // choose the shortest available commitment for 'getTransaction'\n        // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n        // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n        // commitment `sendAndConfirmRawTransaction` used\n        const txSig = encode$1(isVersionedTransaction(tx) ? ((_b = tx.signatures) === null || _b === void 0 ? void 0 : _b[0]) || new Uint8Array() : (_c = tx.signature) !== null && _c !== void 0 ? _c : new Uint8Array());\n        const maxVer = isVersionedTransaction(tx) ? 0 : undefined;\n        const failedTx = await this.connection.getTransaction(txSig, {\n          commitment: \"confirmed\",\n          maxSupportedTransactionVersion: maxVer\n        });\n        if (!failedTx) {\n          throw err;\n        } else {\n          const logs = (_d = failedTx.meta) === null || _d === void 0 ? void 0 : _d.logMessages;\n          throw !logs ? err : new SendTransactionError(err.message, logs);\n        }\n      } else {\n        throw err;\n      }\n    }\n  }\n  /**\n   * Similar to `send`, but for an array of transactions and signers.\n   * All transactions need to be of the same type, it doesn't support a mix of `VersionedTransaction`s and `Transaction`s.\n   *\n   * @param txWithSigners Array of transactions and signers.\n   * @param opts          Transaction confirmation options.\n   */\n  async sendAll(txWithSigners, opts) {\n    var _a, _b, _c;\n    if (opts === undefined) {\n      opts = this.opts;\n    }\n    const recentBlockhash = (await this.connection.getLatestBlockhash(opts.preflightCommitment)).blockhash;\n    let txs = txWithSigners.map(r => {\n      var _a, _b;\n      if (isVersionedTransaction(r.tx)) {\n        let tx = r.tx;\n        if (r.signers) {\n          tx.sign(r.signers);\n        }\n        return tx;\n      } else {\n        let tx = r.tx;\n        let signers = (_a = r.signers) !== null && _a !== void 0 ? _a : [];\n        tx.feePayer = (_b = tx.feePayer) !== null && _b !== void 0 ? _b : this.wallet.publicKey;\n        tx.recentBlockhash = recentBlockhash;\n        signers.forEach(kp => {\n          tx.partialSign(kp);\n        });\n        return tx;\n      }\n    });\n    const signedTxs = await this.wallet.signAllTransactions(txs);\n    const sigs = [];\n    for (let k = 0; k < txs.length; k += 1) {\n      const tx = signedTxs[k];\n      const rawTx = tx.serialize();\n      try {\n        sigs.push(await sendAndConfirmRawTransaction(this.connection, rawTx, opts));\n      } catch (err) {\n        // thrown if the underlying 'confirmTransaction' encounters a failed tx\n        // the 'confirmTransaction' error does not return logs so we make another rpc call to get them\n        if (err instanceof ConfirmError) {\n          // choose the shortest available commitment for 'getTransaction'\n          // (the json RPC does not support any shorter than \"confirmed\" for 'getTransaction')\n          // because that will see the tx sent with `sendAndConfirmRawTransaction` no matter which\n          // commitment `sendAndConfirmRawTransaction` used\n          const txSig = encode$1(isVersionedTransaction(tx) ? ((_a = tx.signatures) === null || _a === void 0 ? void 0 : _a[0]) || new Uint8Array() : (_b = tx.signature) !== null && _b !== void 0 ? _b : new Uint8Array());\n          const maxVer = isVersionedTransaction(tx) ? 0 : undefined;\n          const failedTx = await this.connection.getTransaction(txSig, {\n            commitment: \"confirmed\",\n            maxSupportedTransactionVersion: maxVer\n          });\n          if (!failedTx) {\n            throw err;\n          } else {\n            const logs = (_c = failedTx.meta) === null || _c === void 0 ? void 0 : _c.logMessages;\n            throw !logs ? err : new SendTransactionError(err.message, logs);\n          }\n        } else {\n          throw err;\n        }\n      }\n    }\n    return sigs;\n  }\n  /**\n   * Simulates the given transaction, returning emitted logs from execution.\n   *\n   * @param tx      The transaction to send.\n   * @param signers The signers of the transaction. If unset, the transaction\n   *                will be simulated with the \"sigVerify: false\" option. This\n   *                allows for simulation of transactions without asking the\n   *                wallet for a signature.\n   * @param opts    Transaction confirmation options.\n   */\n  async simulate(tx, signers, commitment, includeAccounts) {\n    let recentBlockhash = (await this.connection.getLatestBlockhash(commitment !== null && commitment !== void 0 ? commitment : this.connection.commitment)).blockhash;\n    let result;\n    if (isVersionedTransaction(tx)) {\n      if (signers && signers.length > 0) {\n        tx.sign(signers);\n        tx = await this.wallet.signTransaction(tx);\n      }\n      // Doesn't support includeAccounts which has been changed to something\n      // else in later versions of this function.\n      result = await this.connection.simulateTransaction(tx, {\n        commitment\n      });\n    } else {\n      tx.feePayer = tx.feePayer || this.wallet.publicKey;\n      tx.recentBlockhash = recentBlockhash;\n      if (signers && signers.length > 0) {\n        tx = await this.wallet.signTransaction(tx);\n      }\n      result = await simulateTransaction(this.connection, tx, signers, commitment, includeAccounts);\n    }\n    if (result.value.err) {\n      throw new SimulateError(result.value);\n    }\n    return result.value;\n  }\n}\nclass SimulateError extends Error {\n  constructor(simulationResponse, message) {\n    super(message);\n    this.simulationResponse = simulationResponse;\n  }\n}\n// Copy of Connection.sendAndConfirmRawTransaction that throws\n// a better error if 'confirmTransaction` returns an error status\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, options) {\n  const sendOptions = options ? {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  } : {};\n  let status;\n  const startTime = Date.now();\n  while (Date.now() - startTime < 60000) {\n    try {\n      const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n      if (options === null || options === void 0 ? void 0 : options.blockhash) {\n        if (sendOptions.maxRetries === 0) {\n          const abortSignal = AbortSignal.timeout(15000);\n          status = (await connection.confirmTransaction({\n            abortSignal,\n            signature,\n            ...options.blockhash\n          }, options && options.commitment)).value;\n        } else {\n          status = (await connection.confirmTransaction({\n            signature,\n            ...options.blockhash\n          }, options && options.commitment)).value;\n        }\n      } else {\n        status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n      }\n      if (status.err) {\n        throw new ConfirmError(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n      }\n      return signature;\n    } catch (err) {\n      if (err.name === \"TimeoutError\") {\n        continue;\n      }\n      throw err;\n    }\n  }\n  throw Error(\"Transaction failed to confirm in 60s\");\n}\nclass ConfirmError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}\n/**\n * Sets the default provider on the client.\n */\nfunction setProvider(provider) {\n  _provider = provider;\n}\n/**\n * Returns the default provider being used by the client.\n */\nfunction getProvider() {\n  if (_provider === null) {\n    return AnchorProvider.local();\n  }\n  return _provider;\n}\n// Global provider used as the default when a provider is not given.\nlet _provider = null;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nvar dist = {};\n\n// Instruction errors.\nObject.defineProperty(dist, \"__esModule\", {\n  value: true\n});\nvar ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = ANCHOR_ERROR__REQUIRE_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_VIOLATED = ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = dist.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = dist.ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = ANCHOR_ERROR__CONSTRAINT_SPACE = dist.ANCHOR_ERROR__CONSTRAINT_SPACE = ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = ANCHOR_ERROR__CONSTRAINT_ZERO = dist.ANCHOR_ERROR__CONSTRAINT_ZERO = ANCHOR_ERROR__CONSTRAINT_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_ADDRESS = ANCHOR_ERROR__CONSTRAINT_CLOSE = dist.ANCHOR_ERROR__CONSTRAINT_CLOSE = ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = ANCHOR_ERROR__CONSTRAINT_STATE = dist.ANCHOR_ERROR__CONSTRAINT_STATE = ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = dist.ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = ANCHOR_ERROR__CONSTRAINT_SEEDS = dist.ANCHOR_ERROR__CONSTRAINT_SEEDS = ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = dist.ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = ANCHOR_ERROR__CONSTRAINT_OWNER = dist.ANCHOR_ERROR__CONSTRAINT_OWNER = ANCHOR_ERROR__CONSTRAINT_RAW = dist.ANCHOR_ERROR__CONSTRAINT_RAW = ANCHOR_ERROR__CONSTRAINT_SIGNER = dist.ANCHOR_ERROR__CONSTRAINT_SIGNER = ANCHOR_ERROR__CONSTRAINT_HAS_ONE = dist.ANCHOR_ERROR__CONSTRAINT_HAS_ONE = ANCHOR_ERROR__CONSTRAINT_MUT = dist.ANCHOR_ERROR__CONSTRAINT_MUT = ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = dist.ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = dist.ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = dist.ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = ANCHOR_ERROR__IDL_INSTRUCTION_STUB = dist.ANCHOR_ERROR__IDL_INSTRUCTION_STUB = ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = dist.ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = dist.ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = dist.ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = ANCHOR_ERROR__INSTRUCTION_MISSING = dist.ANCHOR_ERROR__INSTRUCTION_MISSING = void 0;\nvar ANCHOR_ERROR__DEPRECATED = dist.ANCHOR_ERROR__DEPRECATED = ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = dist.ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = dist.ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = dist.ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = dist.ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = dist.ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = dist.ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = dist.ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = dist.ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = dist.ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = dist.ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = dist.ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = dist.ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = ANCHOR_ERROR__INVALID_PROGRAM_ID = dist.ANCHOR_ERROR__INVALID_PROGRAM_ID = ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = dist.ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = dist.ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = dist.ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = dist.ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = dist.ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = ANCHOR_ERROR__REQUIRE_GT_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_GT_VIOLATED = ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = void 0;\n/** 8 byte instruction identifier not provided. */\nvar ANCHOR_ERROR__INSTRUCTION_MISSING = dist.ANCHOR_ERROR__INSTRUCTION_MISSING = 100;\n/** Fallback functions are not supported. */\nvar ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = dist.ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = 101;\n/** The program could not deserialize the given instruction. */\nvar ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = dist.ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = 102;\n/** The program could not serialize the given instruction. */\nvar ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = dist.ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = 103;\n// IDL instruction errors.\n/** The program was compiled without idl instructions. */\nvar ANCHOR_ERROR__IDL_INSTRUCTION_STUB = dist.ANCHOR_ERROR__IDL_INSTRUCTION_STUB = 1000;\n/** The transaction was given an invalid program for the IDL instruction. */\nvar ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = dist.ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = 1001;\n/** IDL account must be empty in order to resize, try closing first. */\nvar ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = dist.ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = 1002;\n// Event instructions.\n/** The program was compiled without `event-cpi` feature. */\nvar ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = dist.ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = 1500;\n// Constraint errors.\n/** A mut constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MUT = dist.ANCHOR_ERROR__CONSTRAINT_MUT = 2000;\n/** A has one constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_HAS_ONE = dist.ANCHOR_ERROR__CONSTRAINT_HAS_ONE = 2001;\n/** A signer constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_SIGNER = dist.ANCHOR_ERROR__CONSTRAINT_SIGNER = 2002;\n/** A raw constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_RAW = dist.ANCHOR_ERROR__CONSTRAINT_RAW = 2003;\n/** An owner constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_OWNER = dist.ANCHOR_ERROR__CONSTRAINT_OWNER = 2004;\n/** A rent exemption constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = dist.ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = 2005;\n/** A seeds constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_SEEDS = dist.ANCHOR_ERROR__CONSTRAINT_SEEDS = 2006;\n/** An executable constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = dist.ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = 2007;\n/** Deprecated Error, feel free to replace with something else. */\nvar ANCHOR_ERROR__CONSTRAINT_STATE = dist.ANCHOR_ERROR__CONSTRAINT_STATE = 2008;\n/** An associated constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = 2009;\n/** An associated init constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = 2010;\n/** A close constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_CLOSE = dist.ANCHOR_ERROR__CONSTRAINT_CLOSE = 2011;\n/** An address constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_ADDRESS = 2012;\n/** Expected zero account discriminant. */\nvar ANCHOR_ERROR__CONSTRAINT_ZERO = dist.ANCHOR_ERROR__CONSTRAINT_ZERO = 2013;\n/** A token mint constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = 2014;\n/** A token owner constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = 2015;\n/** A mint mint authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = 2016;\n/** A mint freeze authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = 2017;\n/** A mint decimals constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = 2018;\n/** A space constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_SPACE = dist.ANCHOR_ERROR__CONSTRAINT_SPACE = 2019;\n/** A required account for the constraint is None. */\nvar ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = dist.ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = 2020;\n/** A token account token program constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = 2021;\n/** A mint token program constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = 2022;\n/** An associated token account token program constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = dist.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = 2023;\n/** A group pointer extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = 2024;\n/** A group pointer extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = 2025;\n/** A group pointer extension group address constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = 2026;\n/** A group member pointer extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = 2027;\n/** A group member pointer extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = 2028;\n/** A group member pointer extension group address constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = 2029;\n/** A metadata pointer extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = 2030;\n/** A metadata pointer extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = 2031;\n/** A metadata pointer extension metadata address constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = dist.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = 2032;\n/** A close authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = 2033;\n/** A close authority extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = 2034;\n/** A permanent delegate extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = 2035;\n/** A permanent delegate extension delegate constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = dist.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = 2036;\n/** A transfer hook extension constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = 2037;\n/** A transfer hook extension authority constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = 2038;\n/** A transfer hook extension transfer hook program id constraint was violated. */\nvar ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = dist.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = 2039;\n// Require errors.\n/** A require expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_VIOLATED = 2500;\n/** A require_eq expression was violated. */\nANCHOR_ERROR__REQUIRE_EQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = 2501;\n/** A require_keys_eq expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = 2502;\n/** A require_neq expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = 2503;\n/** A require_keys_neq expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = 2504;\n/** A require_gt expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_GT_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_GT_VIOLATED = 2505;\n/** A require_gte expression was violated. */\nvar ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = dist.ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = 2506;\n// Account errors.\n/** The account discriminator was already set on this account. */\nvar ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = 3000;\n/** No 8 byte discriminator was found on the account. */\nvar ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = 3001;\n/** 8 byte discriminator did not match what was expected. */\nvar ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = dist.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = 3002;\n/** Failed to deserialize the account. */\nvar ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = dist.ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = 3003;\n/** Failed to serialize the account. */\nvar ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = dist.ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = 3004;\n/** Not enough account keys given to the instruction. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = dist.ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = 3005;\n/** The given account is not mutable. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = dist.ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = 3006;\n/** The given account is owned by a different program than expected. */\nvar ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = dist.ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = 3007;\n/** Program ID was not as expected. */\nvar ANCHOR_ERROR__INVALID_PROGRAM_ID = dist.ANCHOR_ERROR__INVALID_PROGRAM_ID = 3008;\n/** Program account is not executable. */\nvar ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = dist.ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = 3009;\n/** The given account did not sign. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = dist.ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = 3010;\n/** The given account is not owned by the system program. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = dist.ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = 3011;\n/** The program expected this account to be already initialized. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = dist.ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = 3012;\n/** The given account is not a program data account. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = dist.ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = 3013;\n/** The given account is not the associated token account. */\nvar ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = dist.ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = 3014;\n/** The given public key does not match the required sysvar. */\nvar ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = dist.ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = 3015;\n/** The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit. */\nvar ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = dist.ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = 3016;\n/** The account was duplicated for more than one reallocation. */\nvar ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = dist.ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = 3017;\n// Miscellaneous errors.\n/** The declared program id does not match the actual program id. */\nvar ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = dist.ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = 4100;\n/** You cannot/should not initialize the payer account as a program account. */\nvar ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = dist.ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = 4101;\n/** The program could not perform the numeric conversion, out of range integral type conversion attempted. */\nvar ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = dist.ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = 4102;\n// Deprecated errors.\n/** The API being used is deprecated and should no longer be used. */\nANCHOR_ERROR__DEPRECATED = dist.ANCHOR_ERROR__DEPRECATED = 5000;\nconst _AVAILABLE_FEATURES = new Set([\"debug-logs\"]);\nconst _FEATURES = new Map();\nfunction set(key) {\n  if (!_AVAILABLE_FEATURES.has(key)) {\n    throw new Error(\"Invalid feature\");\n  }\n  _FEATURES.set(key, true);\n}\nfunction isSet(key) {\n  return _FEATURES.get(key) !== undefined;\n}\nvar features = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  set: set,\n  isSet: isSet\n});\nclass IdlError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"IdlError\";\n  }\n}\nclass ProgramErrorStack {\n  constructor(stack) {\n    this.stack = stack;\n  }\n  static parse(logs) {\n    var _a;\n    const programKeyRegex = /^Program (\\w*) invoke/;\n    const successRegex = /^Program \\w* success/;\n    const programStack = [];\n    for (let i = 0; i < logs.length; i++) {\n      if (successRegex.exec(logs[i])) {\n        programStack.pop();\n        continue;\n      }\n      const programKey = (_a = programKeyRegex.exec(logs[i])) === null || _a === void 0 ? void 0 : _a[1];\n      if (!programKey) {\n        continue;\n      }\n      programStack.push(new PublicKey(programKey));\n    }\n    return new ProgramErrorStack(programStack);\n  }\n}\nclass AnchorError extends Error {\n  constructor(errorCode, errorMessage, errorLogs, logs, origin, comparedValues) {\n    super(errorLogs.join(\"\\n\").replace(\"Program log: \", \"\"));\n    this.errorLogs = errorLogs;\n    this.logs = logs;\n    this.error = {\n      errorCode,\n      errorMessage,\n      comparedValues,\n      origin\n    };\n    this._programErrorStack = ProgramErrorStack.parse(logs);\n  }\n  static parse(logs) {\n    if (!logs) {\n      return null;\n    }\n    const anchorErrorLogIndex = logs.findIndex(log => log.startsWith(\"Program log: AnchorError\"));\n    if (anchorErrorLogIndex === -1) {\n      return null;\n    }\n    const anchorErrorLog = logs[anchorErrorLogIndex];\n    const errorLogs = [anchorErrorLog];\n    let comparedValues;\n    if (anchorErrorLogIndex + 1 < logs.length) {\n      // This catches the comparedValues where the following is logged\n      // <AnchorError>\n      // Left:\n      // <Pubkey>\n      // Right:\n      // <Pubkey>\n      if (logs[anchorErrorLogIndex + 1] === \"Program log: Left:\") {\n        const pubkeyRegex = /^Program log: (.*)$/;\n        const leftPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 2])[1];\n        const rightPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 4])[1];\n        comparedValues = [new PublicKey(leftPubkey), new PublicKey(rightPubkey)];\n        errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 5));\n      }\n      // This catches the comparedValues where the following is logged\n      // <AnchorError>\n      // Left: <value>\n      // Right: <value>\n      else if (logs[anchorErrorLogIndex + 1].startsWith(\"Program log: Left:\")) {\n        const valueRegex = /^Program log: (Left|Right): (.*)$/;\n        const leftValue = valueRegex.exec(logs[anchorErrorLogIndex + 1])[2];\n        const rightValue = valueRegex.exec(logs[anchorErrorLogIndex + 2])[2];\n        errorLogs.push(...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 3));\n        comparedValues = [leftValue, rightValue];\n      }\n    }\n    const regexNoInfo = /^Program log: AnchorError occurred\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n    const noInfoAnchorErrorLog = regexNoInfo.exec(anchorErrorLog);\n    const regexFileLine = /^Program log: AnchorError thrown in (.*):(\\d*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n    const fileLineAnchorErrorLog = regexFileLine.exec(anchorErrorLog);\n    const regexAccountName = /^Program log: AnchorError caused by account: (.*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n    const accountNameAnchorErrorLog = regexAccountName.exec(anchorErrorLog);\n    if (noInfoAnchorErrorLog) {\n      const [errorCodeString, errorNumber, errorMessage] = noInfoAnchorErrorLog.slice(1, 4);\n      const errorCode = {\n        code: errorCodeString,\n        number: parseInt(errorNumber)\n      };\n      return new AnchorError(errorCode, errorMessage, errorLogs, logs, undefined, comparedValues);\n    } else if (fileLineAnchorErrorLog) {\n      const [file, line, errorCodeString, errorNumber, errorMessage] = fileLineAnchorErrorLog.slice(1, 6);\n      const errorCode = {\n        code: errorCodeString,\n        number: parseInt(errorNumber)\n      };\n      const fileLine = {\n        file,\n        line: parseInt(line)\n      };\n      return new AnchorError(errorCode, errorMessage, errorLogs, logs, fileLine, comparedValues);\n    } else if (accountNameAnchorErrorLog) {\n      const [accountName, errorCodeString, errorNumber, errorMessage] = accountNameAnchorErrorLog.slice(1, 5);\n      const origin = accountName;\n      const errorCode = {\n        code: errorCodeString,\n        number: parseInt(errorNumber)\n      };\n      return new AnchorError(errorCode, errorMessage, errorLogs, logs, origin, comparedValues);\n    } else {\n      return null;\n    }\n  }\n  get program() {\n    return this._programErrorStack.stack[this._programErrorStack.stack.length - 1];\n  }\n  get programErrorStack() {\n    return this._programErrorStack.stack;\n  }\n  toString() {\n    return this.message;\n  }\n}\n// An error from a user defined program.\nclass ProgramError extends Error {\n  constructor(code, msg, logs) {\n    super();\n    this.code = code;\n    this.msg = msg;\n    this.logs = logs;\n    if (logs) {\n      this._programErrorStack = ProgramErrorStack.parse(logs);\n    }\n  }\n  static parse(err, idlErrors) {\n    const errString = err.toString();\n    // TODO: don't rely on the error string. web3.js should preserve the error\n    //       code information instead of giving us an untyped string.\n    let unparsedErrorCode;\n    if (errString.includes(\"custom program error:\")) {\n      let components = errString.split(\"custom program error: \");\n      if (components.length !== 2) {\n        return null;\n      } else {\n        unparsedErrorCode = components[1];\n      }\n    } else {\n      const matches = errString.match(/\"Custom\":([0-9]+)}/g);\n      if (!matches || matches.length > 1) {\n        return null;\n      }\n      unparsedErrorCode = matches[0].match(/([0-9]+)/g)[0];\n    }\n    let errorCode;\n    try {\n      errorCode = parseInt(unparsedErrorCode);\n    } catch (parseErr) {\n      return null;\n    }\n    // Parse user error.\n    let errorMsg = idlErrors.get(errorCode);\n    if (errorMsg !== undefined) {\n      return new ProgramError(errorCode, errorMsg, err.logs);\n    }\n    // Parse framework internal error.\n    errorMsg = LangErrorMessage.get(errorCode);\n    if (errorMsg !== undefined) {\n      return new ProgramError(errorCode, errorMsg, err.logs);\n    }\n    // Unable to parse the error. Just return the untranslated error.\n    return null;\n  }\n  get program() {\n    var _a;\n    return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack[this._programErrorStack.stack.length - 1];\n  }\n  get programErrorStack() {\n    var _a;\n    return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack;\n  }\n  toString() {\n    return this.msg;\n  }\n}\nfunction translateError(err, idlErrors) {\n  if (isSet(\"debug-logs\")) {\n    console.log(\"Translating error:\", err);\n  }\n  const anchorError = AnchorError.parse(err.logs);\n  if (anchorError) {\n    return anchorError;\n  }\n  const programError = ProgramError.parse(err, idlErrors);\n  if (programError) {\n    return programError;\n  }\n  if (err.logs) {\n    const handler = {\n      get: function (target, prop) {\n        if (prop === \"programErrorStack\") {\n          return target.programErrorStack.stack;\n        } else if (prop === \"program\") {\n          return target.programErrorStack.stack[err.programErrorStack.stack.length - 1];\n        } else {\n          // this is the normal way to return all other props\n          // without modifying them.\n          // @ts-expect-error\n          return Reflect.get(...arguments);\n        }\n      }\n    };\n    err.programErrorStack = ProgramErrorStack.parse(err.logs);\n    return new Proxy(err, handler);\n  }\n  return err;\n}\nconst LangErrorCode = {\n  // Instructions.\n  InstructionMissing: ANCHOR_ERROR__INSTRUCTION_MISSING,\n  InstructionFallbackNotFound: ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND,\n  InstructionDidNotDeserialize: ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE,\n  InstructionDidNotSerialize: ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE,\n  // IDL instructions.\n  IdlInstructionStub: ANCHOR_ERROR__IDL_INSTRUCTION_STUB,\n  IdlInstructionInvalidProgram: ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM,\n  IdlAccountNotEmpty: ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY,\n  // Event instructions.\n  EventInstructionStub: ANCHOR_ERROR__EVENT_INSTRUCTION_STUB,\n  // Constraints.\n  ConstraintMut: ANCHOR_ERROR__CONSTRAINT_MUT,\n  ConstraintHasOne: ANCHOR_ERROR__CONSTRAINT_HAS_ONE,\n  ConstraintSigner: ANCHOR_ERROR__CONSTRAINT_SIGNER,\n  ConstraintRaw: ANCHOR_ERROR__CONSTRAINT_RAW,\n  ConstraintOwner: ANCHOR_ERROR__CONSTRAINT_OWNER,\n  ConstraintRentExempt: ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT,\n  ConstraintSeeds: ANCHOR_ERROR__CONSTRAINT_SEEDS,\n  ConstraintExecutable: ANCHOR_ERROR__CONSTRAINT_EXECUTABLE,\n  ConstraintState: ANCHOR_ERROR__CONSTRAINT_STATE,\n  ConstraintAssociated: ANCHOR_ERROR__CONSTRAINT_ASSOCIATED,\n  ConstraintAssociatedInit: ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT,\n  ConstraintClose: ANCHOR_ERROR__CONSTRAINT_CLOSE,\n  ConstraintAddress: ANCHOR_ERROR__CONSTRAINT_ADDRESS,\n  ConstraintZero: ANCHOR_ERROR__CONSTRAINT_ZERO,\n  ConstraintTokenMint: ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT,\n  ConstraintTokenOwner: ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER,\n  ConstraintMintMintAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY,\n  ConstraintMintFreezeAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY,\n  ConstraintMintDecimals: ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS,\n  ConstraintSpace: ANCHOR_ERROR__CONSTRAINT_SPACE,\n  ConstraintAccountIsNone: ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE,\n  ConstraintTokenTokenProgram: ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM,\n  ConstraintMintTokenProgram: ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM,\n  ConstraintAssociatedTokenTokenProgram: ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM,\n  ConstraintMintGroupPointerExtension: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION,\n  ConstraintMintGroupPointerExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY,\n  ConstraintMintGroupPointerExtensionGroupAddress: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS,\n  ConstraintMintGroupMemberPointerExtension: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION,\n  ConstraintMintGroupMemberPointerExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY,\n  ConstraintMintGroupMemberPointerExtensionMemberAddress: ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS,\n  ConstraintMintMetadataPointerExtension: ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION,\n  ConstraintMintMetadataPointerExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY,\n  ConstraintMintMetadataPointerExtensionMetadataAddress: ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS,\n  ConstraintMintCloseAuthorityExtension: ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION,\n  ConstraintMintCloseAuthorityExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY,\n  ConstraintMintPermanentDelegateExtension: ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION,\n  ConstraintMintPermanentDelegateExtensionDelegate: ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE,\n  ConstraintMintTransferHookExtension: ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION,\n  ConstraintMintTransferHookExtensionAuthority: ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY,\n  ConstraintMintTransferHookExtensionProgramId: ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID,\n  // Require.\n  RequireViolated: ANCHOR_ERROR__REQUIRE_VIOLATED,\n  RequireEqViolated: ANCHOR_ERROR__REQUIRE_EQ_VIOLATED,\n  RequireKeysEqViolated: ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED,\n  RequireNeqViolated: ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED,\n  RequireKeysNeqViolated: ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED,\n  RequireGtViolated: ANCHOR_ERROR__REQUIRE_GT_VIOLATED,\n  RequireGteViolated: ANCHOR_ERROR__REQUIRE_GTE_VIOLATED,\n  // Accounts.\n  AccountDiscriminatorAlreadySet: ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET,\n  AccountDiscriminatorNotFound: ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND,\n  AccountDiscriminatorMismatch: ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH,\n  AccountDidNotDeserialize: ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE,\n  AccountDidNotSerialize: ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE,\n  AccountNotEnoughKeys: ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS,\n  AccountNotMutable: ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE,\n  AccountOwnedByWrongProgram: ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM,\n  InvalidProgramId: ANCHOR_ERROR__INVALID_PROGRAM_ID,\n  InvalidProgramExecutable: ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE,\n  AccountNotSigner: ANCHOR_ERROR__ACCOUNT_NOT_SIGNER,\n  AccountNotSystemOwned: ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED,\n  AccountNotInitialized: ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED,\n  AccountNotProgramData: ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA,\n  AccountNotAssociatedTokenAccount: ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT,\n  AccountSysvarMismatch: ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH,\n  AccountReallocExceedsLimit: ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT,\n  AccountDuplicateReallocs: ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS,\n  // Miscellaneous\n  DeclaredProgramIdMismatch: ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH,\n  TryingToInitPayerAsProgramAccount: ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT,\n  InvalidNumericConversion: ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION,\n  // Used for APIs that shouldn't be used anymore.\n  Deprecated: ANCHOR_ERROR__DEPRECATED\n};\nconst LangErrorMessage = new Map([\n// Instructions.\n[LangErrorCode.InstructionMissing, \"Instruction discriminator not provided\"], [LangErrorCode.InstructionFallbackNotFound, \"Fallback functions are not supported\"], [LangErrorCode.InstructionDidNotDeserialize, \"The program could not deserialize the given instruction\"], [LangErrorCode.InstructionDidNotSerialize, \"The program could not serialize the given instruction\"],\n// Idl instructions.\n[LangErrorCode.IdlInstructionStub, \"The program was compiled without idl instructions\"], [LangErrorCode.IdlInstructionInvalidProgram, \"The transaction was given an invalid program for the IDL instruction\"], [LangErrorCode.IdlAccountNotEmpty, \"IDL account must be empty in order to resize, try closing first\"],\n// Event instructions.\n[LangErrorCode.EventInstructionStub, \"The program was compiled without `event-cpi` feature\"],\n// Constraints.\n[LangErrorCode.ConstraintMut, \"A mut constraint was violated\"], [LangErrorCode.ConstraintHasOne, \"A has one constraint was violated\"], [LangErrorCode.ConstraintSigner, \"A signer constraint was violated\"], [LangErrorCode.ConstraintRaw, \"A raw constraint was violated\"], [LangErrorCode.ConstraintOwner, \"An owner constraint was violated\"], [LangErrorCode.ConstraintRentExempt, \"A rent exemption constraint was violated\"], [LangErrorCode.ConstraintSeeds, \"A seeds constraint was violated\"], [LangErrorCode.ConstraintExecutable, \"An executable constraint was violated\"], [LangErrorCode.ConstraintState, \"Deprecated Error, feel free to replace with something else\"], [LangErrorCode.ConstraintAssociated, \"An associated constraint was violated\"], [LangErrorCode.ConstraintAssociatedInit, \"An associated init constraint was violated\"], [LangErrorCode.ConstraintClose, \"A close constraint was violated\"], [LangErrorCode.ConstraintAddress, \"An address constraint was violated\"], [LangErrorCode.ConstraintZero, \"Expected zero account discriminant\"], [LangErrorCode.ConstraintTokenMint, \"A token mint constraint was violated\"], [LangErrorCode.ConstraintTokenOwner, \"A token owner constraint was violated\"], [LangErrorCode.ConstraintMintMintAuthority, \"A mint mint authority constraint was violated\"], [LangErrorCode.ConstraintMintFreezeAuthority, \"A mint freeze authority constraint was violated\"], [LangErrorCode.ConstraintMintDecimals, \"A mint decimals constraint was violated\"], [LangErrorCode.ConstraintSpace, \"A space constraint was violated\"], [LangErrorCode.ConstraintAccountIsNone, \"A required account for the constraint is None\"], [LangErrorCode.ConstraintTokenTokenProgram, \"A token account token program constraint was violated\"], [LangErrorCode.ConstraintMintTokenProgram, \"A mint token program constraint was violated\"], [LangErrorCode.ConstraintAssociatedTokenTokenProgram, \"An associated token account token program constraint was violated\"], [LangErrorCode.ConstraintMintGroupPointerExtension, \"A group pointer extension constraint was violated\"], [LangErrorCode.ConstraintMintGroupPointerExtensionAuthority, \"A group pointer extension authority constraint was violated\"], [LangErrorCode.ConstraintMintGroupPointerExtensionGroupAddress, \"A group pointer extension group address constraint was violated\"], [LangErrorCode.ConstraintMintGroupMemberPointerExtension, \"A group member pointer extension constraint was violated\"], [LangErrorCode.ConstraintMintGroupMemberPointerExtensionAuthority, \"A group member pointer extension authority constraint was violated\"], [LangErrorCode.ConstraintMintGroupMemberPointerExtensionMemberAddress, \"A group member pointer extension group address constraint was violated\"], [LangErrorCode.ConstraintMintMetadataPointerExtension, \"A metadata pointer extension constraint was violated\"], [LangErrorCode.ConstraintMintMetadataPointerExtensionAuthority, \"A metadata pointer extension authority constraint was violated\"], [LangErrorCode.ConstraintMintMetadataPointerExtensionMetadataAddress, \"A metadata pointer extension metadata address constraint was violated\"], [LangErrorCode.ConstraintMintCloseAuthorityExtension, \"A close authority constraint was violated\"], [LangErrorCode.ConstraintMintCloseAuthorityExtensionAuthority, \"A close authority extension authority constraint was violated\"], [LangErrorCode.ConstraintMintPermanentDelegateExtension, \"A permanent delegate extension constraint was violated\"], [LangErrorCode.ConstraintMintPermanentDelegateExtensionDelegate, \"A permanent delegate extension delegate constraint was violated\"], [LangErrorCode.ConstraintMintTransferHookExtension, \"A transfer hook extension constraint was violated\"], [LangErrorCode.ConstraintMintTransferHookExtensionAuthority, \"A transfer hook extension authority constraint was violated\"], [LangErrorCode.ConstraintMintTransferHookExtensionProgramId, \"A transfer hook extension transfer hook program id constraint was violated\"],\n// Require.\n[LangErrorCode.RequireViolated, \"A require expression was violated\"], [LangErrorCode.RequireEqViolated, \"A require_eq expression was violated\"], [LangErrorCode.RequireKeysEqViolated, \"A require_keys_eq expression was violated\"], [LangErrorCode.RequireNeqViolated, \"A require_neq expression was violated\"], [LangErrorCode.RequireKeysNeqViolated, \"A require_keys_neq expression was violated\"], [LangErrorCode.RequireGtViolated, \"A require_gt expression was violated\"], [LangErrorCode.RequireGteViolated, \"A require_gte expression was violated\"],\n// Accounts.\n[LangErrorCode.AccountDiscriminatorAlreadySet, \"The account discriminator was already set on this account\"], [LangErrorCode.AccountDiscriminatorNotFound, \"No discriminator was found on the account\"], [LangErrorCode.AccountDiscriminatorMismatch, \"Account discriminator did not match what was expected\"], [LangErrorCode.AccountDidNotDeserialize, \"Failed to deserialize the account\"], [LangErrorCode.AccountDidNotSerialize, \"Failed to serialize the account\"], [LangErrorCode.AccountNotEnoughKeys, \"Not enough account keys given to the instruction\"], [LangErrorCode.AccountNotMutable, \"The given account is not mutable\"], [LangErrorCode.AccountOwnedByWrongProgram, \"The given account is owned by a different program than expected\"], [LangErrorCode.InvalidProgramId, \"Program ID was not as expected\"], [LangErrorCode.InvalidProgramExecutable, \"Program account is not executable\"], [LangErrorCode.AccountNotSigner, \"The given account did not sign\"], [LangErrorCode.AccountNotSystemOwned, \"The given account is not owned by the system program\"], [LangErrorCode.AccountNotInitialized, \"The program expected this account to be already initialized\"], [LangErrorCode.AccountNotProgramData, \"The given account is not a program data account\"], [LangErrorCode.AccountNotAssociatedTokenAccount, \"The given account is not the associated token account\"], [LangErrorCode.AccountSysvarMismatch, \"The given public key does not match the required sysvar\"], [LangErrorCode.AccountReallocExceedsLimit, \"The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit\"], [LangErrorCode.AccountDuplicateReallocs, \"The account was duplicated for more than one reallocation\"],\n// Miscellaneous\n[LangErrorCode.DeclaredProgramIdMismatch, \"The declared program id does not match the actual program id\"], [LangErrorCode.TryingToInitPayerAsProgramAccount, \"You cannot/should not initialize the payer account as a program account\"], [LangErrorCode.InvalidNumericConversion, \"The program could not perform the numeric conversion, out of range integral type conversion attempted\"],\n// Deprecated\n[LangErrorCode.Deprecated, \"The API being used is deprecated and should no longer be used\"]]);\nclass IdlCoder {\n  static fieldLayout(field, types = [], genericArgs) {\n    const fieldName = field.name;\n    switch (field.type) {\n      case \"bool\":\n        {\n          return borsh.bool(fieldName);\n        }\n      case \"u8\":\n        {\n          return borsh.u8(fieldName);\n        }\n      case \"i8\":\n        {\n          return borsh.i8(fieldName);\n        }\n      case \"u16\":\n        {\n          return borsh.u16(fieldName);\n        }\n      case \"i16\":\n        {\n          return borsh.i16(fieldName);\n        }\n      case \"u32\":\n        {\n          return borsh.u32(fieldName);\n        }\n      case \"i32\":\n        {\n          return borsh.i32(fieldName);\n        }\n      case \"f32\":\n        {\n          return borsh.f32(fieldName);\n        }\n      case \"u64\":\n        {\n          return borsh.u64(fieldName);\n        }\n      case \"i64\":\n        {\n          return borsh.i64(fieldName);\n        }\n      case \"f64\":\n        {\n          return borsh.f64(fieldName);\n        }\n      case \"u128\":\n        {\n          return borsh.u128(fieldName);\n        }\n      case \"i128\":\n        {\n          return borsh.i128(fieldName);\n        }\n      case \"u256\":\n        {\n          return borsh.u256(fieldName);\n        }\n      case \"i256\":\n        {\n          return borsh.i256(fieldName);\n        }\n      case \"bytes\":\n        {\n          return borsh.vecU8(fieldName);\n        }\n      case \"string\":\n        {\n          return borsh.str(fieldName);\n        }\n      case \"pubkey\":\n        {\n          return borsh.publicKey(fieldName);\n        }\n      default:\n        {\n          if (\"option\" in field.type) {\n            return borsh.option(IdlCoder.fieldLayout({\n              type: field.type.option\n            }, types, genericArgs), fieldName);\n          }\n          if (\"vec\" in field.type) {\n            return borsh.vec(IdlCoder.fieldLayout({\n              type: field.type.vec\n            }, types, genericArgs), fieldName);\n          }\n          if (\"array\" in field.type) {\n            let [type, len] = field.type.array;\n            len = IdlCoder.resolveArrayLen(len, genericArgs);\n            return borsh.array(IdlCoder.fieldLayout({\n              type\n            }, types, genericArgs), len, fieldName);\n          }\n          if (\"defined\" in field.type) {\n            if (!types) {\n              throw new IdlError(\"User defined types not provided\");\n            }\n            const definedName = field.type.defined.name;\n            const typeDef = types.find(t => t.name === definedName);\n            if (!typeDef) {\n              throw new IdlError(`Type not found: ${field.name}`);\n            }\n            return IdlCoder.typeDefLayout({\n              typeDef,\n              types,\n              genericArgs: genericArgs !== null && genericArgs !== void 0 ? genericArgs : field.type.defined.generics,\n              name: fieldName\n            });\n          }\n          if (\"generic\" in field.type) {\n            const genericArg = genericArgs === null || genericArgs === void 0 ? void 0 : genericArgs.at(0);\n            if ((genericArg === null || genericArg === void 0 ? void 0 : genericArg.kind) !== \"type\") {\n              throw new IdlError(`Invalid generic field: ${field.name}`);\n            }\n            return IdlCoder.fieldLayout({\n              ...field,\n              type: genericArg.type\n            }, types);\n          }\n          throw new IdlError(`Not yet implemented: ${JSON.stringify(field.type)}`);\n        }\n    }\n  }\n  /**\n   * Get the type layout of the given defined type(struct or enum).\n   */\n  static typeDefLayout({\n    typeDef,\n    types,\n    name,\n    genericArgs\n  }) {\n    switch (typeDef.type.kind) {\n      case \"struct\":\n        {\n          const fieldLayouts = handleDefinedFields(typeDef.type.fields, () => [], fields => fields.map(f => {\n            const genArgs = genericArgs ? IdlCoder.resolveGenericArgs({\n              type: f.type,\n              typeDef,\n              genericArgs\n            }) : genericArgs;\n            return IdlCoder.fieldLayout(f, types, genArgs);\n          }), fields => fields.map((f, i) => {\n            const genArgs = genericArgs ? IdlCoder.resolveGenericArgs({\n              type: f,\n              typeDef,\n              genericArgs\n            }) : genericArgs;\n            return IdlCoder.fieldLayout({\n              name: i.toString(),\n              type: f\n            }, types, genArgs);\n          }));\n          return borsh.struct(fieldLayouts, name);\n        }\n      case \"enum\":\n        {\n          const variants = typeDef.type.variants.map(variant => {\n            const fieldLayouts = handleDefinedFields(variant.fields, () => [], fields => fields.map(f => {\n              const genArgs = genericArgs ? IdlCoder.resolveGenericArgs({\n                type: f.type,\n                typeDef,\n                genericArgs\n              }) : genericArgs;\n              return IdlCoder.fieldLayout(f, types, genArgs);\n            }), fields => fields.map((f, i) => {\n              const genArgs = genericArgs ? IdlCoder.resolveGenericArgs({\n                type: f,\n                typeDef,\n                genericArgs\n              }) : genericArgs;\n              return IdlCoder.fieldLayout({\n                name: i.toString(),\n                type: f\n              }, types, genArgs);\n            }));\n            return borsh.struct(fieldLayouts, variant.name);\n          });\n          if (name !== undefined) {\n            // Buffer-layout lib requires the name to be null (on construction)\n            // when used as a field.\n            return borsh.rustEnum(variants).replicate(name);\n          }\n          return borsh.rustEnum(variants, name);\n        }\n      case \"type\":\n        {\n          return IdlCoder.fieldLayout({\n            type: typeDef.type.alias,\n            name\n          }, types);\n        }\n    }\n  }\n  /**\n   * Get the type of the size in bytes. Returns `1` for variable length types.\n   */\n  static typeSize(ty, idl, genericArgs) {\n    var _a;\n    switch (ty) {\n      case \"bool\":\n        return 1;\n      case \"u8\":\n        return 1;\n      case \"i8\":\n        return 1;\n      case \"i16\":\n        return 2;\n      case \"u16\":\n        return 2;\n      case \"u32\":\n        return 4;\n      case \"i32\":\n        return 4;\n      case \"f32\":\n        return 4;\n      case \"u64\":\n        return 8;\n      case \"i64\":\n        return 8;\n      case \"f64\":\n        return 8;\n      case \"u128\":\n        return 16;\n      case \"i128\":\n        return 16;\n      case \"u256\":\n        return 32;\n      case \"i256\":\n        return 32;\n      case \"bytes\":\n        return 1;\n      case \"string\":\n        return 1;\n      case \"pubkey\":\n        return 32;\n      default:\n        if (\"option\" in ty) {\n          return 1 + IdlCoder.typeSize(ty.option, idl, genericArgs);\n        }\n        if (\"coption\" in ty) {\n          return 4 + IdlCoder.typeSize(ty.coption, idl, genericArgs);\n        }\n        if (\"vec\" in ty) {\n          return 1;\n        }\n        if (\"array\" in ty) {\n          let [type, len] = ty.array;\n          len = IdlCoder.resolveArrayLen(len, genericArgs);\n          return IdlCoder.typeSize(type, idl, genericArgs) * len;\n        }\n        if (\"defined\" in ty) {\n          const typeDef = (_a = idl.types) === null || _a === void 0 ? void 0 : _a.find(t => t.name === ty.defined.name);\n          if (!typeDef) {\n            throw new IdlError(`Type not found: ${JSON.stringify(ty)}`);\n          }\n          const typeSize = type => {\n            const genArgs = genericArgs !== null && genericArgs !== void 0 ? genericArgs : ty.defined.generics;\n            const args = genArgs ? IdlCoder.resolveGenericArgs({\n              type,\n              typeDef,\n              genericArgs: genArgs\n            }) : genArgs;\n            return IdlCoder.typeSize(type, idl, args);\n          };\n          switch (typeDef.type.kind) {\n            case \"struct\":\n              {\n                return handleDefinedFields(typeDef.type.fields, () => [0], fields => fields.map(f => typeSize(f.type)), fields => fields.map(f => typeSize(f))).reduce((acc, size) => acc + size, 0);\n              }\n            case \"enum\":\n              {\n                const variantSizes = typeDef.type.variants.map(variant => {\n                  return handleDefinedFields(variant.fields, () => [0], fields => fields.map(f => typeSize(f.type)), fields => fields.map(f => typeSize(f))).reduce((acc, size) => acc + size, 0);\n                });\n                return Math.max(...variantSizes) + 1;\n              }\n            case \"type\":\n              {\n                return IdlCoder.typeSize(typeDef.type.alias, idl, genericArgs);\n              }\n          }\n        }\n        if (\"generic\" in ty) {\n          const genericArg = genericArgs === null || genericArgs === void 0 ? void 0 : genericArgs.at(0);\n          if ((genericArg === null || genericArg === void 0 ? void 0 : genericArg.kind) !== \"type\") {\n            throw new IdlError(`Invalid generic: ${ty.generic}`);\n          }\n          return IdlCoder.typeSize(genericArg.type, idl, genericArgs);\n        }\n        throw new Error(`Invalid type ${JSON.stringify(ty)}`);\n    }\n  }\n  /**\n   * Resolve the generic array length or return the constant-sized array length.\n   */\n  static resolveArrayLen(len, genericArgs) {\n    if (typeof len === \"number\") return len;\n    if (genericArgs) {\n      const genericLen = genericArgs.find(g => g.kind === \"const\");\n      if ((genericLen === null || genericLen === void 0 ? void 0 : genericLen.kind) === \"const\") {\n        len = +genericLen.value;\n      }\n    }\n    if (typeof len !== \"number\") {\n      throw new IdlError(\"Generic array length did not resolve\");\n    }\n    return len;\n  }\n  /**\n   * Recursively resolve generic arguments i.e. replace all generics with the\n   * actual type that they hold based on the initial `genericArgs` given.\n   */\n  static resolveGenericArgs({\n    type,\n    typeDef,\n    genericArgs,\n    isDefined\n  }) {\n    if (typeof type !== \"object\") return null;\n    for (const index in typeDef.generics) {\n      const defGeneric = typeDef.generics[index];\n      if (\"generic\" in type && defGeneric.name === type.generic) {\n        return [genericArgs[index]];\n      }\n      if (\"option\" in type) {\n        const args = IdlCoder.resolveGenericArgs({\n          type: type.option,\n          typeDef,\n          genericArgs,\n          isDefined\n        });\n        if (!args || !isDefined) return args;\n        if (args[0].kind === \"type\") {\n          return [{\n            kind: \"type\",\n            type: {\n              option: args[0].type\n            }\n          }];\n        }\n      }\n      if (\"vec\" in type) {\n        const args = IdlCoder.resolveGenericArgs({\n          type: type.vec,\n          typeDef,\n          genericArgs,\n          isDefined\n        });\n        if (!args || !isDefined) return args;\n        if (args[0].kind === \"type\") {\n          return [{\n            kind: \"type\",\n            type: {\n              vec: args[0].type\n            }\n          }];\n        }\n      }\n      if (\"array\" in type) {\n        const [elTy, len] = type.array;\n        const isGenericLen = typeof len === \"object\";\n        const args = IdlCoder.resolveGenericArgs({\n          type: elTy,\n          typeDef,\n          genericArgs,\n          isDefined\n        });\n        if (args) {\n          // Has generic type, also check for generic length\n          for (const i in typeDef.generics.slice(+index)) {\n            const curIndex = +index + +i;\n            if (isGenericLen && typeDef.generics[curIndex].name === len.generic) {\n              args.push(genericArgs[curIndex]);\n            }\n          }\n          if (!isDefined) return args;\n          if (args[0].kind === \"type\" && args[1].kind === \"const\") {\n            return [{\n              kind: \"type\",\n              type: {\n                array: [args[0].type, +args[1].value]\n              }\n            }];\n          }\n        }\n        // Only generic len\n        if (isGenericLen && defGeneric.name === len.generic) {\n          const arg = genericArgs[index];\n          if (!isDefined) return [arg];\n          return [{\n            kind: \"type\",\n            type: {\n              array: [elTy, +arg.value]\n            }\n          }];\n        }\n        // Non-generic\n        return null;\n      }\n      if (\"defined\" in type) {\n        if (!type.defined.generics) return null;\n        return type.defined.generics.flatMap(g => {\n          switch (g.kind) {\n            case \"type\":\n              return IdlCoder.resolveGenericArgs({\n                type: g.type,\n                typeDef,\n                genericArgs,\n                isDefined: true\n              });\n            case \"const\":\n              return [g];\n          }\n        }).filter(g => g !== null);\n      }\n    }\n    return null;\n  }\n}\n\n/**\n * Encodes and decodes program instructions.\n */\nclass BorshInstructionCoder {\n  constructor(idl) {\n    this.idl = idl;\n    const ixLayouts = idl.instructions.map(ix => {\n      const name = ix.name;\n      const fieldLayouts = ix.args.map(arg => IdlCoder.fieldLayout(arg, idl.types));\n      const layout = borsh.struct(fieldLayouts, name);\n      return [name, {\n        discriminator: ix.discriminator,\n        layout\n      }];\n    });\n    this.ixLayouts = new Map(ixLayouts);\n  }\n  /**\n   * Encodes a program instruction.\n   */\n  encode(ixName, ix) {\n    const buffer = Buffer$1.alloc(1000); // TODO: use a tighter buffer.\n    const encoder = this.ixLayouts.get(ixName);\n    if (!encoder) {\n      throw new Error(`Unknown method: ${ixName}`);\n    }\n    const len = encoder.layout.encode(ix, buffer);\n    const data = buffer.slice(0, len);\n    return Buffer$1.concat([Buffer$1.from(encoder.discriminator), data]);\n  }\n  /**\n   * Decodes a program instruction.\n   */\n  decode(ix, encoding = \"hex\") {\n    if (typeof ix === \"string\") {\n      ix = encoding === \"hex\" ? Buffer$1.from(ix, \"hex\") : bs58$1.decode(ix);\n    }\n    for (const [name, layout] of this.ixLayouts) {\n      const givenDisc = ix.subarray(0, layout.discriminator.length);\n      const matches = givenDisc.equals(Buffer$1.from(layout.discriminator));\n      if (matches) {\n        return {\n          name,\n          data: layout.layout.decode(ix.subarray(givenDisc.length))\n        };\n      }\n    }\n    return null;\n  }\n  /**\n   * Returns a formatted table of all the fields in the given instruction data.\n   */\n  format(ix, accountMetas) {\n    return InstructionFormatter.format(ix, accountMetas, this.idl);\n  }\n}\nclass InstructionFormatter {\n  static format(ix, accountMetas, idl) {\n    const idlIx = idl.instructions.find(i => ix.name === i.name);\n    if (!idlIx) {\n      console.error(\"Invalid instruction given\");\n      return null;\n    }\n    const args = idlIx.args.map(idlField => {\n      return {\n        name: idlField.name,\n        type: InstructionFormatter.formatIdlType(idlField.type),\n        data: InstructionFormatter.formatIdlData(idlField, ix.data[idlField.name], idl.types)\n      };\n    });\n    const flatIdlAccounts = InstructionFormatter.flattenIdlAccounts(idlIx.accounts);\n    const accounts = accountMetas.map((meta, idx) => {\n      if (idx < flatIdlAccounts.length) {\n        return {\n          name: flatIdlAccounts[idx].name,\n          ...meta\n        };\n      }\n      // \"Remaining accounts\" are unnamed in Anchor.\n      else {\n        return {\n          name: undefined,\n          ...meta\n        };\n      }\n    });\n    return {\n      args,\n      accounts\n    };\n  }\n  static formatIdlType(idlType) {\n    if (typeof idlType === \"string\") {\n      return idlType;\n    }\n    if (\"option\" in idlType) {\n      return `Option<${this.formatIdlType(idlType.option)}>`;\n    }\n    if (\"coption\" in idlType) {\n      return `COption<${this.formatIdlType(idlType.coption)}>`;\n    }\n    if (\"vec\" in idlType) {\n      return `Vec<${this.formatIdlType(idlType.vec)}>`;\n    }\n    if (\"array\" in idlType) {\n      return `Array<${idlType.array[0]}; ${idlType.array[1]}>`;\n    }\n    if (\"defined\" in idlType) {\n      const name = idlType.defined.name;\n      if (idlType.defined.generics) {\n        const generics = idlType.defined.generics.map(g => {\n          switch (g.kind) {\n            case \"type\":\n              return InstructionFormatter.formatIdlType(g.type);\n            case \"const\":\n              return g.value;\n          }\n        }).join(\", \");\n        return `${name}<${generics}>`;\n      }\n      return name;\n    }\n    throw new Error(`Unknown IDL type: ${idlType}`);\n  }\n  static formatIdlData(idlField, data, types) {\n    if (typeof idlField.type === \"string\") {\n      return data.toString();\n    }\n    if (\"vec\" in idlField.type) {\n      return \"[\" + data.map(d => this.formatIdlData({\n        name: \"\",\n        type: idlField.type.vec\n      }, d, types)).join(\", \") + \"]\";\n    }\n    if (\"option\" in idlField.type) {\n      return data === null ? \"null\" : this.formatIdlData({\n        name: \"\",\n        type: idlField.type.option\n      }, data, types);\n    }\n    if (\"defined\" in idlField.type) {\n      if (!types) {\n        throw new Error(\"User defined types not provided\");\n      }\n      const definedName = idlField.type.defined.name;\n      const typeDef = types.find(t => t.name === definedName);\n      if (!typeDef) {\n        throw new Error(`Type not found: ${definedName}`);\n      }\n      return InstructionFormatter.formatIdlDataDefined(typeDef, data, types);\n    }\n    return \"unknown\";\n  }\n  static formatIdlDataDefined(typeDef, data, types) {\n    switch (typeDef.type.kind) {\n      case \"struct\":\n        {\n          return \"{ \" + handleDefinedFields(typeDef.type.fields, () => \"\", fields => {\n            return Object.entries(data).map(([key, val]) => {\n              const field = fields.find(f => f.name === key);\n              if (!field) {\n                throw new Error(`Field not found: ${key}`);\n              }\n              return key + \": \" + InstructionFormatter.formatIdlData(field, val, types);\n            }).join(\", \");\n          }, fields => {\n            return Object.entries(data).map(([key, val]) => {\n              return key + \": \" + InstructionFormatter.formatIdlData({\n                name: \"\",\n                type: fields[key]\n              }, val, types);\n            }).join(\", \");\n          }) + \" }\";\n        }\n      case \"enum\":\n        {\n          const variantName = Object.keys(data)[0];\n          const variant = typeDef.type.variants.find(v => v.name === variantName);\n          if (!variant) {\n            throw new Error(`Unable to find variant: ${variantName}`);\n          }\n          const enumValue = data[variantName];\n          return handleDefinedFields(variant.fields, () => variantName, fields => {\n            const namedFields = Object.keys(enumValue).map(f => {\n              const fieldData = enumValue[f];\n              const idlField = fields.find(v => v.name === f);\n              if (!idlField) {\n                throw new Error(`Field not found: ${f}`);\n              }\n              return f + \": \" + InstructionFormatter.formatIdlData(idlField, fieldData, types);\n            }).join(\", \");\n            return `${variantName} { ${namedFields} }`;\n          }, fields => {\n            const tupleFields = Object.entries(enumValue).map(([key, val]) => {\n              return key + \": \" + InstructionFormatter.formatIdlData({\n                name: \"\",\n                type: fields[key]\n              }, val, types);\n            }).join(\", \");\n            return `${variantName} { ${tupleFields} }`;\n          });\n        }\n      case \"type\":\n        {\n          return InstructionFormatter.formatIdlType(typeDef.type.alias);\n        }\n    }\n  }\n  static flattenIdlAccounts(accounts, prefix) {\n    return accounts.map(account => {\n      const accName = sentenceCase(account.name);\n      if (account.hasOwnProperty(\"accounts\")) {\n        const newPrefix = prefix ? `${prefix} > ${accName}` : accName;\n        return InstructionFormatter.flattenIdlAccounts(account.accounts, newPrefix);\n      } else {\n        return {\n          ...account,\n          name: prefix ? `${prefix} > ${accName}` : accName\n        };\n      }\n    }).flat();\n  }\n}\nfunction sentenceCase(field) {\n  const result = field.replace(/([A-Z])/g, \" $1\");\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\n/**\n * Encodes and decodes account objects.\n */\nclass BorshAccountsCoder {\n  constructor(idl) {\n    this.idl = idl;\n    if (!idl.accounts) {\n      this.accountLayouts = new Map();\n      return;\n    }\n    const types = idl.types;\n    if (!types) {\n      throw new Error(\"Accounts require `idl.types`\");\n    }\n    const layouts = idl.accounts.map(acc => {\n      const typeDef = types.find(ty => ty.name === acc.name);\n      if (!typeDef) {\n        throw new Error(`Account not found: ${acc.name}`);\n      }\n      return [acc.name, {\n        discriminator: acc.discriminator,\n        layout: IdlCoder.typeDefLayout({\n          typeDef,\n          types\n        })\n      }];\n    });\n    this.accountLayouts = new Map(layouts);\n  }\n  async encode(accountName, account) {\n    const buffer = Buffer$1.alloc(1000); // TODO: use a tighter buffer.\n    const layout = this.accountLayouts.get(accountName);\n    if (!layout) {\n      throw new Error(`Unknown account: ${accountName}`);\n    }\n    const len = layout.layout.encode(account, buffer);\n    const accountData = buffer.slice(0, len);\n    const discriminator = this.accountDiscriminator(accountName);\n    return Buffer$1.concat([discriminator, accountData]);\n  }\n  decode(accountName, data) {\n    // Assert the account discriminator is correct.\n    const discriminator = this.accountDiscriminator(accountName);\n    if (discriminator.compare(data.slice(0, discriminator.length))) {\n      throw new Error(\"Invalid account discriminator\");\n    }\n    return this.decodeUnchecked(accountName, data);\n  }\n  decodeAny(data) {\n    for (const [name, layout] of this.accountLayouts) {\n      const givenDisc = data.subarray(0, layout.discriminator.length);\n      const matches = givenDisc.equals(Buffer$1.from(layout.discriminator));\n      if (matches) return this.decodeUnchecked(name, data);\n    }\n    throw new Error(\"Account not found\");\n  }\n  decodeUnchecked(accountName, acc) {\n    // Chop off the discriminator before decoding.\n    const discriminator = this.accountDiscriminator(accountName);\n    const data = acc.subarray(discriminator.length);\n    const layout = this.accountLayouts.get(accountName);\n    if (!layout) {\n      throw new Error(`Unknown account: ${accountName}`);\n    }\n    return layout.layout.decode(data);\n  }\n  memcmp(accountName, appendData) {\n    const discriminator = this.accountDiscriminator(accountName);\n    return {\n      offset: 0,\n      bytes: bs58$1.encode(appendData ? Buffer$1.concat([discriminator, appendData]) : discriminator)\n    };\n  }\n  size(accountName) {\n    return this.accountDiscriminator(accountName).length + IdlCoder.typeSize({\n      defined: {\n        name: accountName\n      }\n    }, this.idl);\n  }\n  /**\n   * Get the unique discriminator prepended to all anchor accounts.\n   *\n   * @param name The name of the account to get the discriminator of.\n   */\n  accountDiscriminator(name) {\n    var _a;\n    const account = (_a = this.idl.accounts) === null || _a === void 0 ? void 0 : _a.find(acc => acc.name === name);\n    if (!account) {\n      throw new Error(`Account not found: ${name}`);\n    }\n    return Buffer$1.from(account.discriminator);\n  }\n}\nclass BorshEventCoder {\n  constructor(idl) {\n    if (!idl.events) {\n      this.layouts = new Map();\n      return;\n    }\n    const types = idl.types;\n    if (!types) {\n      throw new Error(\"Events require `idl.types`\");\n    }\n    const layouts = idl.events.map(ev => {\n      const typeDef = types.find(ty => ty.name === ev.name);\n      if (!typeDef) {\n        throw new Error(`Event not found: ${ev.name}`);\n      }\n      return [ev.name, {\n        discriminator: ev.discriminator,\n        layout: IdlCoder.typeDefLayout({\n          typeDef,\n          types\n        })\n      }];\n    });\n    this.layouts = new Map(layouts);\n  }\n  decode(log) {\n    let logArr;\n    // This will throw if log length is not a multiple of 4.\n    try {\n      logArr = decode(log);\n    } catch (e) {\n      return null;\n    }\n    for (const [name, layout] of this.layouts) {\n      const givenDisc = logArr.subarray(0, layout.discriminator.length);\n      const matches = givenDisc.equals(Buffer$1.from(layout.discriminator));\n      if (matches) {\n        return {\n          name,\n          data: layout.layout.decode(logArr.subarray(givenDisc.length))\n        };\n      }\n    }\n    return null;\n  }\n}\n\n/**\n * Encodes and decodes user-defined types.\n */\nclass BorshTypesCoder {\n  constructor(idl) {\n    const types = idl.types;\n    if (!types) {\n      this.typeLayouts = new Map();\n      return;\n    }\n    const layouts = types.filter(ty => !ty.generics).map(ty => [ty.name, IdlCoder.typeDefLayout({\n      typeDef: ty,\n      types\n    })]);\n    this.typeLayouts = new Map(layouts);\n  }\n  encode(name, type) {\n    const buffer = Buffer$1.alloc(1000); // TODO: use a tighter buffer.\n    const layout = this.typeLayouts.get(name);\n    if (!layout) {\n      throw new Error(`Unknown type: ${name}`);\n    }\n    const len = layout.encode(type, buffer);\n    return buffer.slice(0, len);\n  }\n  decode(name, data) {\n    const layout = this.typeLayouts.get(name);\n    if (!layout) {\n      throw new Error(`Unknown type: ${name}`);\n    }\n    return layout.decode(data);\n  }\n}\n\n/**\n * BorshCoder is the default Coder for Anchor programs implementing the\n * borsh based serialization interface.\n */\nclass BorshCoder {\n  constructor(idl) {\n    this.instruction = new BorshInstructionCoder(idl);\n    this.accounts = new BorshAccountsCoder(idl);\n    this.events = new BorshEventCoder(idl);\n    this.types = new BorshTypesCoder(idl);\n  }\n}\n\n/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nvar Layout_2 = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return this.layout instanceof UInt || this.layout instanceof UIntBE;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - hi32 * V2E32;\n  return {\n    hi32,\n    lo32\n  };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields) && fields.reduce((acc, v) => acc && v instanceof Layout, true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if ('boolean' === typeof property && undefined === decodePrefixes) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if (0 > fd.span && undefined === fd.property) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {}\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes && b.length === offset) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = 0 < span ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return lastOffset + lastWrote - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property && 0 < values.length) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!(layout instanceof ExternalLayout && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = discr instanceof UInt || discr instanceof UIntBE;\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if (discr instanceof ExternalLayout && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator ' + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!(null === defaultLayout || defaultLayout instanceof Layout)) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if (0 <= span && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function (src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function (gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo && (!vlo.layout || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if (!Number.isInteger(variant) || 0 > variant) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if ('string' === typeof layout && undefined === property) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if (null !== union.defaultLayout && 0 <= layout.span && layout.span > union.defaultLayout.span) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if (0 <= span && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout && !src.hasOwnProperty(this.property)) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if (0 <= this.union.span && span > this.union.span) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob$1 extends Layout {\n  constructor(length, property) {\n    if (!(length instanceof ExternalLayout && length.isCount() || Number.isInteger(length) && 0 <= length)) {\n      throw new TypeError('length must be positive integer ' + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src) && span === src.length)) {\n      throw new TypeError(nameWithProperty('Blob.encode', this) + ' requires (length ' + span + ') Buffer as src');\n    }\n    if (offset + span > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/** Factory for {@link OffsetLayout}. */\nvar offset = (layout, offset, property) => new OffsetLayout(layout, offset, property);\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nvar u8 = property => new UInt(1, property);\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nvar u32 = property => new UInt(4, property);\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nvar nu64 = property => new NearUInt64(property);\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nvar ns64 = property => new NearInt64(property);\n\n/** Factory for {@link Structure} values. */\nvar struct = (fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes);\n\n/** Factory for {@link Union} values. */\nvar union = (discr, defaultLayout, property) => new Union(discr, defaultLayout, property);\n\n/** Factory for {@link Blob} values. */\nvar blob = (length, property) => new Blob$1(length, property);\nclass SystemInstructionCoder {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  constructor(_) {}\n  encode(ixName, ix) {\n    switch (ixName) {\n      case \"createAccount\":\n        {\n          return encodeCreateAccount(ix);\n        }\n      case \"assign\":\n        {\n          return encodeAssign(ix);\n        }\n      case \"transfer\":\n        {\n          return encodeTransfer(ix);\n        }\n      case \"createAccountWithSeed\":\n        {\n          return encodeCreateAccountWithSeed(ix);\n        }\n      case \"advanceNonceAccount\":\n        {\n          return encodeAdvanceNonceAccount(ix);\n        }\n      case \"withdrawNonceAccount\":\n        {\n          return encodeWithdrawNonceAccount(ix);\n        }\n      case \"initializeNonceAccount\":\n        {\n          return encodeInitializeNonceAccount(ix);\n        }\n      case \"authorizeNonceAccount\":\n        {\n          return encodeAuthorizeNonceAccount(ix);\n        }\n      case \"allocate\":\n        {\n          return encodeAllocate(ix);\n        }\n      case \"allocateWithSeed\":\n        {\n          return encodeAllocateWithSeed(ix);\n        }\n      case \"assignWithSeed\":\n        {\n          return encodeAssignWithSeed(ix);\n        }\n      case \"transferWithSeed\":\n        {\n          return encodeTransferWithSeed(ix);\n        }\n      default:\n        {\n          throw new Error(`Invalid instruction: ${ixName}`);\n        }\n    }\n  }\n  encodeState(_ixName, _ix) {\n    throw new Error(\"System does not have state\");\n  }\n}\nclass RustStringLayout extends Layout_2 {\n  constructor(property) {\n    super(-1, property);\n    this.property = property;\n    this.layout = struct([u32(\"length\"), u32(\"lengthPadding\"), blob(offset(u32(), -8), \"chars\")], this.property);\n  }\n  encode(src, b, offset = 0) {\n    if (src === null || src === undefined) {\n      return this.layout.span;\n    }\n    const data = {\n      chars: Buffer.from(src, \"utf8\")\n    };\n    return this.layout.encode(data, b, offset);\n  }\n  decode(b, offset = 0) {\n    const data = this.layout.decode(b, offset);\n    return data[\"chars\"].toString();\n  }\n  getSpan(b, offset = 0) {\n    return u32().span + u32().span + new BN(new Uint8Array(b).slice(offset, offset + 4), 10, \"le\").toNumber();\n  }\n}\nfunction rustStringLayout(property) {\n  return new RustStringLayout(property);\n}\nfunction publicKey$2(property) {\n  return blob(32, property);\n}\nfunction encodeCreateAccount({\n  lamports,\n  space,\n  owner\n}) {\n  return encodeData({\n    createAccount: {\n      lamports,\n      space,\n      owner: owner.toBuffer()\n    }\n  });\n}\nfunction encodeAssign({\n  owner\n}) {\n  return encodeData({\n    assign: {\n      owner: owner.toBuffer()\n    }\n  });\n}\nfunction encodeTransfer({\n  lamports\n}) {\n  return encodeData({\n    transfer: {\n      lamports\n    }\n  });\n}\nfunction encodeCreateAccountWithSeed({\n  base,\n  seed,\n  lamports,\n  space,\n  owner\n}) {\n  return encodeData({\n    createAccountWithSeed: {\n      base: base.toBuffer(),\n      seed,\n      lamports,\n      space,\n      owner: owner.toBuffer()\n    }\n  }, LAYOUT.getVariant(3).span + seed.length);\n}\nfunction encodeInitializeNonceAccount({\n  authorized\n}) {\n  return encodeData({\n    initializeNonceAccount: {\n      authorized: authorized.toBuffer()\n    }\n  });\n}\nfunction encodeAdvanceNonceAccount({\n  authorized\n}) {\n  return encodeData({\n    advanceNonceAccount: {\n      authorized: authorized.toBuffer()\n    }\n  });\n}\nfunction encodeWithdrawNonceAccount({\n  lamports\n}) {\n  return encodeData({\n    withdrawNonceAccount: {\n      lamports\n    }\n  });\n}\nfunction encodeAuthorizeNonceAccount({\n  authorized\n}) {\n  return encodeData({\n    authorizeNonceAccount: {\n      authorized: authorized.toBuffer()\n    }\n  });\n}\nfunction encodeAllocate({\n  space\n}) {\n  return encodeData({\n    allocate: {\n      space\n    }\n  });\n}\nfunction encodeAllocateWithSeed({\n  base,\n  seed,\n  space,\n  owner\n}) {\n  return encodeData({\n    allocateWithSeed: {\n      base: base.toBuffer(),\n      seed,\n      space,\n      owner: owner.toBuffer()\n    }\n  }, LAYOUT.getVariant(9).span + seed.length);\n}\nfunction encodeAssignWithSeed({\n  base,\n  seed,\n  owner\n}) {\n  return encodeData({\n    assignWithSeed: {\n      base: base.toBuffer(),\n      seed,\n      owner: owner.toBuffer()\n    }\n  }, LAYOUT.getVariant(10).span + seed.length);\n}\nfunction encodeTransferWithSeed({\n  lamports,\n  seed,\n  owner\n}) {\n  return encodeData({\n    transferWithSeed: {\n      lamports,\n      seed,\n      owner: owner.toBuffer()\n    }\n  }, LAYOUT.getVariant(11).span + seed.length);\n}\nconst LAYOUT = union(u32(\"instruction\"));\nLAYOUT.addVariant(0, struct([ns64(\"lamports\"), ns64(\"space\"), publicKey$2(\"owner\")]), \"createAccount\");\nLAYOUT.addVariant(1, struct([publicKey$2(\"owner\")]), \"assign\");\nLAYOUT.addVariant(2, struct([ns64(\"lamports\")]), \"transfer\");\nLAYOUT.addVariant(3, struct([publicKey$2(\"base\"), rustStringLayout(\"seed\"), ns64(\"lamports\"), ns64(\"space\"), publicKey$2(\"owner\")]), \"createAccountWithSeed\");\nLAYOUT.addVariant(4, struct([publicKey$2(\"authorized\")]), \"advanceNonceAccount\");\nLAYOUT.addVariant(5, struct([ns64(\"lamports\")]), \"withdrawNonceAccount\");\nLAYOUT.addVariant(6, struct([publicKey$2(\"authorized\")]), \"initializeNonceAccount\");\nLAYOUT.addVariant(7, struct([publicKey$2(\"authorized\")]), \"authorizeNonceAccount\");\nLAYOUT.addVariant(8, struct([ns64(\"space\")]), \"allocate\");\nLAYOUT.addVariant(9, struct([publicKey$2(\"base\"), rustStringLayout(\"seed\"), ns64(\"space\"), publicKey$2(\"owner\")]), \"allocateWithSeed\");\nLAYOUT.addVariant(10, struct([publicKey$2(\"base\"), rustStringLayout(\"seed\"), publicKey$2(\"owner\")]), \"assignWithSeed\");\nLAYOUT.addVariant(11, struct([ns64(\"lamports\"), rustStringLayout(\"seed\"), publicKey$2(\"owner\")]), \"transferWithSeed\");\nfunction encodeData(instruction, maxSpan) {\n  const b = Buffer.alloc(maxSpan !== null && maxSpan !== void 0 ? maxSpan : instructionMaxSpan);\n  const span = LAYOUT.encode(instruction, b);\n  if (maxSpan === undefined) {\n    return b.slice(0, span);\n  }\n  return b;\n}\nconst instructionMaxSpan = Math.max(...Object.values(LAYOUT.registry).map(r => r.span));\nclass SystemAccountsCoder {\n  constructor(idl) {\n    this.idl = idl;\n  }\n  async encode(accountName, account) {\n    switch (accountName) {\n      case \"nonce\":\n        {\n          const buffer = Buffer.alloc(NONCE_ACCOUNT_LENGTH);\n          const len = NONCE_ACCOUNT_LAYOUT.encode(account, buffer);\n          return buffer.slice(0, len);\n        }\n      default:\n        {\n          throw new Error(`Invalid account name: ${accountName}`);\n        }\n    }\n  }\n  decode(accountName, ix) {\n    return this.decodeUnchecked(accountName, ix);\n  }\n  decodeUnchecked(accountName, ix) {\n    switch (accountName) {\n      case \"nonce\":\n        {\n          return decodeNonceAccount(ix);\n        }\n      default:\n        {\n          throw new Error(`Invalid account name: ${accountName}`);\n        }\n    }\n  }\n  // TODO: this won't use the appendData.\n  memcmp(accountName, _appendData) {\n    switch (accountName) {\n      case \"nonce\":\n        {\n          return {\n            dataSize: NONCE_ACCOUNT_LENGTH\n          };\n        }\n      default:\n        {\n          throw new Error(`Invalid account name: ${accountName}`);\n        }\n    }\n  }\n  size(accountName) {\n    return IdlCoder.typeSize({\n      defined: {\n        name: accountName\n      }\n    }, this.idl);\n  }\n}\nfunction decodeNonceAccount(ix) {\n  return NONCE_ACCOUNT_LAYOUT.decode(ix);\n}\nclass WrappedLayout$1 extends Layout_2 {\n  constructor(layout, decoder, encoder, property) {\n    super(layout.span, property);\n    this.layout = layout;\n    this.decoder = decoder;\n    this.encoder = encoder;\n  }\n  decode(b, offset) {\n    return this.decoder(this.layout.decode(b, offset));\n  }\n  encode(src, b, offset) {\n    return this.layout.encode(this.encoder(src), b, offset);\n  }\n  getSpan(b, offset) {\n    return this.layout.getSpan(b, offset);\n  }\n}\nfunction publicKey$1(property) {\n  return new WrappedLayout$1(blob(32), b => new PublicKey(b), key => key.toBuffer(), property);\n}\nconst NONCE_ACCOUNT_LAYOUT = struct([u32(\"version\"), u32(\"state\"), publicKey$1(\"authorizedPubkey\"), publicKey$1(\"nonce\"), struct([nu64(\"lamportsPerSignature\")], \"feeCalculator\")]);\nclass SystemEventsCoder {\n  constructor(_idl) {}\n  decode(_log) {\n    throw new Error(\"System program does not have events\");\n  }\n}\nclass SystemTypesCoder {\n  constructor(_idl) {}\n  encode(_name, _type) {\n    throw new Error(\"System does not have user-defined types\");\n  }\n  decode(_name, _typeData) {\n    throw new Error(\"System does not have user-defined types\");\n  }\n}\n\n/**\n * Coder for the System program.\n */\nclass SystemCoder {\n  constructor(idl) {\n    this.instruction = new SystemInstructionCoder(idl);\n    this.accounts = new SystemAccountsCoder(idl);\n    this.events = new SystemEventsCoder(idl);\n    this.types = new SystemTypesCoder(idl);\n  }\n}\nfunction hash(data) {\n  return new TextDecoder().decode(sha256$1(data));\n}\nvar sha256 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hash: hash\n});\n\n// Sync version of web3.PublicKey.createWithSeed.\nfunction createWithSeedSync(fromPublicKey, seed, programId) {\n  const buffer = Buffer$1.concat([fromPublicKey.toBuffer(), Buffer$1.from(seed), programId.toBuffer()]);\n  return new PublicKey(sha256$1(buffer));\n}\nvar pubkey = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createWithSeedSync: createWithSeedSync\n});\nconst TOKEN_PROGRAM_ID = new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\");\nconst ASSOCIATED_PROGRAM_ID = new PublicKey(\"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\");\nfunction associatedAddress({\n  mint,\n  owner\n}) {\n  return PublicKey.findProgramAddressSync([owner.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()], ASSOCIATED_PROGRAM_ID)[0];\n}\nvar token = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TOKEN_PROGRAM_ID: TOKEN_PROGRAM_ID,\n  ASSOCIATED_PROGRAM_ID: ASSOCIATED_PROGRAM_ID,\n  associatedAddress: associatedAddress\n});\nvar browserPonyfill = {\n  exports: {}\n};\n(function (module, exports) {\n  var global = typeof self !== 'undefined' ? self : commonjsGlobal;\n  var __self__ = function () {\n    function F() {\n      this.fetch = false;\n      this.DOMException = global.DOMException;\n    }\n    F.prototype = global;\n    return new F();\n  }();\n  (function (self) {\n    (function (exports) {\n      var support = {\n        searchParams: 'URLSearchParams' in self,\n        iterable: 'Symbol' in self && 'iterator' in Symbol,\n        blob: 'FileReader' in self && 'Blob' in self && function () {\n          try {\n            new Blob();\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }(),\n        formData: 'FormData' in self,\n        arrayBuffer: 'ArrayBuffer' in self\n      };\n      function isDataView(obj) {\n        return obj && DataView.prototype.isPrototypeOf(obj);\n      }\n      if (support.arrayBuffer) {\n        var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];\n        var isArrayBufferView = ArrayBuffer.isView || function (obj) {\n          return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;\n        };\n      }\n      function normalizeName(name) {\n        if (typeof name !== 'string') {\n          name = String(name);\n        }\n        if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n          throw new TypeError('Invalid character in header field name');\n        }\n        return name.toLowerCase();\n      }\n      function normalizeValue(value) {\n        if (typeof value !== 'string') {\n          value = String(value);\n        }\n        return value;\n      }\n\n      // Build a destructive iterator for the value list\n      function iteratorFor(items) {\n        var iterator = {\n          next: function () {\n            var value = items.shift();\n            return {\n              done: value === undefined,\n              value: value\n            };\n          }\n        };\n        if (support.iterable) {\n          iterator[Symbol.iterator] = function () {\n            return iterator;\n          };\n        }\n        return iterator;\n      }\n      function Headers(headers) {\n        this.map = {};\n        if (headers instanceof Headers) {\n          headers.forEach(function (value, name) {\n            this.append(name, value);\n          }, this);\n        } else if (Array.isArray(headers)) {\n          headers.forEach(function (header) {\n            this.append(header[0], header[1]);\n          }, this);\n        } else if (headers) {\n          Object.getOwnPropertyNames(headers).forEach(function (name) {\n            this.append(name, headers[name]);\n          }, this);\n        }\n      }\n      Headers.prototype.append = function (name, value) {\n        name = normalizeName(name);\n        value = normalizeValue(value);\n        var oldValue = this.map[name];\n        this.map[name] = oldValue ? oldValue + ', ' + value : value;\n      };\n      Headers.prototype['delete'] = function (name) {\n        delete this.map[normalizeName(name)];\n      };\n      Headers.prototype.get = function (name) {\n        name = normalizeName(name);\n        return this.has(name) ? this.map[name] : null;\n      };\n      Headers.prototype.has = function (name) {\n        return this.map.hasOwnProperty(normalizeName(name));\n      };\n      Headers.prototype.set = function (name, value) {\n        this.map[normalizeName(name)] = normalizeValue(value);\n      };\n      Headers.prototype.forEach = function (callback, thisArg) {\n        for (var name in this.map) {\n          if (this.map.hasOwnProperty(name)) {\n            callback.call(thisArg, this.map[name], name, this);\n          }\n        }\n      };\n      Headers.prototype.keys = function () {\n        var items = [];\n        this.forEach(function (value, name) {\n          items.push(name);\n        });\n        return iteratorFor(items);\n      };\n      Headers.prototype.values = function () {\n        var items = [];\n        this.forEach(function (value) {\n          items.push(value);\n        });\n        return iteratorFor(items);\n      };\n      Headers.prototype.entries = function () {\n        var items = [];\n        this.forEach(function (value, name) {\n          items.push([name, value]);\n        });\n        return iteratorFor(items);\n      };\n      if (support.iterable) {\n        Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n      }\n      function consumed(body) {\n        if (body.bodyUsed) {\n          return Promise.reject(new TypeError('Already read'));\n        }\n        body.bodyUsed = true;\n      }\n      function fileReaderReady(reader) {\n        return new Promise(function (resolve, reject) {\n          reader.onload = function () {\n            resolve(reader.result);\n          };\n          reader.onerror = function () {\n            reject(reader.error);\n          };\n        });\n      }\n      function readBlobAsArrayBuffer(blob) {\n        var reader = new FileReader();\n        var promise = fileReaderReady(reader);\n        reader.readAsArrayBuffer(blob);\n        return promise;\n      }\n      function readBlobAsText(blob) {\n        var reader = new FileReader();\n        var promise = fileReaderReady(reader);\n        reader.readAsText(blob);\n        return promise;\n      }\n      function readArrayBufferAsText(buf) {\n        var view = new Uint8Array(buf);\n        var chars = new Array(view.length);\n        for (var i = 0; i < view.length; i++) {\n          chars[i] = String.fromCharCode(view[i]);\n        }\n        return chars.join('');\n      }\n      function bufferClone(buf) {\n        if (buf.slice) {\n          return buf.slice(0);\n        } else {\n          var view = new Uint8Array(buf.byteLength);\n          view.set(new Uint8Array(buf));\n          return view.buffer;\n        }\n      }\n      function Body() {\n        this.bodyUsed = false;\n        this._initBody = function (body) {\n          this._bodyInit = body;\n          if (!body) {\n            this._bodyText = '';\n          } else if (typeof body === 'string') {\n            this._bodyText = body;\n          } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n            this._bodyBlob = body;\n          } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n            this._bodyFormData = body;\n          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n            this._bodyText = body.toString();\n          } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n            this._bodyArrayBuffer = bufferClone(body.buffer);\n            // IE 10-11 can't handle a DataView body.\n            this._bodyInit = new Blob([this._bodyArrayBuffer]);\n          } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n            this._bodyArrayBuffer = bufferClone(body);\n          } else {\n            this._bodyText = body = Object.prototype.toString.call(body);\n          }\n          if (!this.headers.get('content-type')) {\n            if (typeof body === 'string') {\n              this.headers.set('content-type', 'text/plain;charset=UTF-8');\n            } else if (this._bodyBlob && this._bodyBlob.type) {\n              this.headers.set('content-type', this._bodyBlob.type);\n            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n              this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n          }\n        };\n        if (support.blob) {\n          this.blob = function () {\n            var rejected = consumed(this);\n            if (rejected) {\n              return rejected;\n            }\n            if (this._bodyBlob) {\n              return Promise.resolve(this._bodyBlob);\n            } else if (this._bodyArrayBuffer) {\n              return Promise.resolve(new Blob([this._bodyArrayBuffer]));\n            } else if (this._bodyFormData) {\n              throw new Error('could not read FormData body as blob');\n            } else {\n              return Promise.resolve(new Blob([this._bodyText]));\n            }\n          };\n          this.arrayBuffer = function () {\n            if (this._bodyArrayBuffer) {\n              return consumed(this) || Promise.resolve(this._bodyArrayBuffer);\n            } else {\n              return this.blob().then(readBlobAsArrayBuffer);\n            }\n          };\n        }\n        this.text = function () {\n          var rejected = consumed(this);\n          if (rejected) {\n            return rejected;\n          }\n          if (this._bodyBlob) {\n            return readBlobAsText(this._bodyBlob);\n          } else if (this._bodyArrayBuffer) {\n            return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));\n          } else if (this._bodyFormData) {\n            throw new Error('could not read FormData body as text');\n          } else {\n            return Promise.resolve(this._bodyText);\n          }\n        };\n        if (support.formData) {\n          this.formData = function () {\n            return this.text().then(decode);\n          };\n        }\n        this.json = function () {\n          return this.text().then(JSON.parse);\n        };\n        return this;\n      }\n\n      // HTTP methods whose capitalization should be normalized\n      var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n      function normalizeMethod(method) {\n        var upcased = method.toUpperCase();\n        return methods.indexOf(upcased) > -1 ? upcased : method;\n      }\n      function Request(input, options) {\n        options = options || {};\n        var body = options.body;\n        if (input instanceof Request) {\n          if (input.bodyUsed) {\n            throw new TypeError('Already read');\n          }\n          this.url = input.url;\n          this.credentials = input.credentials;\n          if (!options.headers) {\n            this.headers = new Headers(input.headers);\n          }\n          this.method = input.method;\n          this.mode = input.mode;\n          this.signal = input.signal;\n          if (!body && input._bodyInit != null) {\n            body = input._bodyInit;\n            input.bodyUsed = true;\n          }\n        } else {\n          this.url = String(input);\n        }\n        this.credentials = options.credentials || this.credentials || 'same-origin';\n        if (options.headers || !this.headers) {\n          this.headers = new Headers(options.headers);\n        }\n        this.method = normalizeMethod(options.method || this.method || 'GET');\n        this.mode = options.mode || this.mode || null;\n        this.signal = options.signal || this.signal;\n        this.referrer = null;\n        if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n          throw new TypeError('Body not allowed for GET or HEAD requests');\n        }\n        this._initBody(body);\n      }\n      Request.prototype.clone = function () {\n        return new Request(this, {\n          body: this._bodyInit\n        });\n      };\n      function decode(body) {\n        var form = new FormData();\n        body.trim().split('&').forEach(function (bytes) {\n          if (bytes) {\n            var split = bytes.split('=');\n            var name = split.shift().replace(/\\+/g, ' ');\n            var value = split.join('=').replace(/\\+/g, ' ');\n            form.append(decodeURIComponent(name), decodeURIComponent(value));\n          }\n        });\n        return form;\n      }\n      function parseHeaders(rawHeaders) {\n        var headers = new Headers();\n        // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n        // https://tools.ietf.org/html/rfc7230#section-3.2\n        var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n        preProcessedHeaders.split(/\\r?\\n/).forEach(function (line) {\n          var parts = line.split(':');\n          var key = parts.shift().trim();\n          if (key) {\n            var value = parts.join(':').trim();\n            headers.append(key, value);\n          }\n        });\n        return headers;\n      }\n      Body.call(Request.prototype);\n      function Response(bodyInit, options) {\n        if (!options) {\n          options = {};\n        }\n        this.type = 'default';\n        this.status = options.status === undefined ? 200 : options.status;\n        this.ok = this.status >= 200 && this.status < 300;\n        this.statusText = 'statusText' in options ? options.statusText : 'OK';\n        this.headers = new Headers(options.headers);\n        this.url = options.url || '';\n        this._initBody(bodyInit);\n      }\n      Body.call(Response.prototype);\n      Response.prototype.clone = function () {\n        return new Response(this._bodyInit, {\n          status: this.status,\n          statusText: this.statusText,\n          headers: new Headers(this.headers),\n          url: this.url\n        });\n      };\n      Response.error = function () {\n        var response = new Response(null, {\n          status: 0,\n          statusText: ''\n        });\n        response.type = 'error';\n        return response;\n      };\n      var redirectStatuses = [301, 302, 303, 307, 308];\n      Response.redirect = function (url, status) {\n        if (redirectStatuses.indexOf(status) === -1) {\n          throw new RangeError('Invalid status code');\n        }\n        return new Response(null, {\n          status: status,\n          headers: {\n            location: url\n          }\n        });\n      };\n      exports.DOMException = self.DOMException;\n      try {\n        new exports.DOMException();\n      } catch (err) {\n        exports.DOMException = function (message, name) {\n          this.message = message;\n          this.name = name;\n          var error = Error(message);\n          this.stack = error.stack;\n        };\n        exports.DOMException.prototype = Object.create(Error.prototype);\n        exports.DOMException.prototype.constructor = exports.DOMException;\n      }\n      function fetch(input, init) {\n        return new Promise(function (resolve, reject) {\n          var request = new Request(input, init);\n          if (request.signal && request.signal.aborted) {\n            return reject(new exports.DOMException('Aborted', 'AbortError'));\n          }\n          var xhr = new XMLHttpRequest();\n          function abortXhr() {\n            xhr.abort();\n          }\n          xhr.onload = function () {\n            var options = {\n              status: xhr.status,\n              statusText: xhr.statusText,\n              headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n            };\n            options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n            var body = 'response' in xhr ? xhr.response : xhr.responseText;\n            resolve(new Response(body, options));\n          };\n          xhr.onerror = function () {\n            reject(new TypeError('Network request failed'));\n          };\n          xhr.ontimeout = function () {\n            reject(new TypeError('Network request failed'));\n          };\n          xhr.onabort = function () {\n            reject(new exports.DOMException('Aborted', 'AbortError'));\n          };\n          xhr.open(request.method, request.url, true);\n          if (request.credentials === 'include') {\n            xhr.withCredentials = true;\n          } else if (request.credentials === 'omit') {\n            xhr.withCredentials = false;\n          }\n          if ('responseType' in xhr && support.blob) {\n            xhr.responseType = 'blob';\n          }\n          request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n          });\n          if (request.signal) {\n            request.signal.addEventListener('abort', abortXhr);\n            xhr.onreadystatechange = function () {\n              // DONE (success or failure)\n              if (xhr.readyState === 4) {\n                request.signal.removeEventListener('abort', abortXhr);\n              }\n            };\n          }\n          xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n        });\n      }\n      fetch.polyfill = true;\n      if (!self.fetch) {\n        self.fetch = fetch;\n        self.Headers = Headers;\n        self.Request = Request;\n        self.Response = Response;\n      }\n      exports.Headers = Headers;\n      exports.Request = Request;\n      exports.Response = Response;\n      exports.fetch = fetch;\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      return exports;\n    })({});\n  })(__self__);\n  __self__.fetch.ponyfill = true;\n  // Remove \"polyfill\" property added by whatwg-fetch\n  delete __self__.fetch.polyfill;\n  // Choose between native implementation (global) or custom implementation (__self__)\n  // var ctx = global.fetch ? global : __self__;\n  var ctx = __self__; // this line disable service worker support temporarily\n  exports = ctx.fetch; // To enable: import fetch from 'cross-fetch'\n  exports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.\n  exports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'\n  exports.Headers = ctx.Headers;\n  exports.Request = ctx.Request;\n  exports.Response = ctx.Response;\n  module.exports = exports;\n})(browserPonyfill, browserPonyfill.exports);\nvar fetch = /*@__PURE__*/getDefaultExportFromCjs(browserPonyfill.exports);\n\n/**\n * Returns a verified build from the anchor registry. null if no such\n * verified build exists, e.g., if the program has been upgraded since the\n * last verified build.\n */\nasync function verifiedBuild(connection, programId, limit = 5) {\n  const url = `https://api.apr.dev/api/v0/program/${programId.toString()}/latest?limit=${limit}`;\n  const [programData, latestBuildsResp] = await Promise.all([fetchData(connection, programId), fetch(url)]);\n  // Filter out all non successful builds.\n  const latestBuilds = (await latestBuildsResp.json()).filter(b => !b.aborted && b.state === \"Built\" && b.verified === \"Verified\");\n  if (latestBuilds.length === 0) {\n    return null;\n  }\n  // Get the latest build.\n  const build = latestBuilds[0];\n  // Has the program been upgraded since the last build?\n  if (programData.slot.toNumber() !== build.verified_slot) {\n    return null;\n  }\n  // Success.\n  return build;\n}\n/**\n * Returns the program data account for this program, containing the\n * metadata for this program, e.g., the upgrade authority.\n */\nasync function fetchData(connection, programId) {\n  const accountInfo = await connection.getAccountInfo(programId);\n  if (accountInfo === null) {\n    throw new Error(\"program account not found\");\n  }\n  const {\n    program\n  } = decodeUpgradeableLoaderState(accountInfo.data);\n  const programdataAccountInfo = await connection.getAccountInfo(program.programdataAddress);\n  if (programdataAccountInfo === null) {\n    throw new Error(\"program data account not found\");\n  }\n  const {\n    programData\n  } = decodeUpgradeableLoaderState(programdataAccountInfo.data);\n  return programData;\n}\nconst UPGRADEABLE_LOADER_STATE_LAYOUT = borsh.rustEnum([borsh.struct([], \"uninitialized\"), borsh.struct([borsh.option(borsh.publicKey(), \"authorityAddress\")], \"buffer\"), borsh.struct([borsh.publicKey(\"programdataAddress\")], \"program\"), borsh.struct([borsh.u64(\"slot\"), borsh.option(borsh.publicKey(), \"upgradeAuthorityAddress\")], \"programData\")], undefined, borsh.u32());\nfunction decodeUpgradeableLoaderState(data) {\n  return UPGRADEABLE_LOADER_STATE_LAYOUT.decode(data);\n}\nvar registry = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  verifiedBuild: verifiedBuild,\n  fetchData: fetchData,\n  decodeUpgradeableLoaderState: decodeUpgradeableLoaderState\n});\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  sha256: sha256,\n  rpc: rpc,\n  publicKey: pubkey,\n  bytes: index$1,\n  token: token,\n  features: features,\n  registry: registry\n});\nconst PROGRAM_LOG = \"Program log: \";\nconst PROGRAM_DATA = \"Program data: \";\nconst PROGRAM_LOG_START_INDEX = PROGRAM_LOG.length;\nconst PROGRAM_DATA_START_INDEX = PROGRAM_DATA.length;\nclass EventManager {\n  constructor(programId, provider, coder) {\n    this._programId = programId;\n    this._provider = provider;\n    this._eventParser = new EventParser(programId, coder);\n    this._eventCallbacks = new Map();\n    this._eventListeners = new Map();\n    this._listenerIdCount = 0;\n  }\n  addEventListener(eventName, callback, commitment) {\n    var _a;\n    let listener = this._listenerIdCount;\n    this._listenerIdCount += 1;\n    // Store the listener into the event map.\n    if (!this._eventListeners.has(eventName)) {\n      this._eventListeners.set(eventName, []);\n    }\n    this._eventListeners.set(eventName, ((_a = this._eventListeners.get(eventName)) !== null && _a !== void 0 ? _a : []).concat(listener));\n    // Store the callback into the listener map.\n    this._eventCallbacks.set(listener, [eventName, callback]);\n    // Create the subscription singleton, if needed.\n    if (this._onLogsSubscriptionId !== undefined) {\n      return listener;\n    }\n    this._onLogsSubscriptionId = this._provider.connection.onLogs(this._programId, (logs, ctx) => {\n      if (logs.err) {\n        return;\n      }\n      for (const event of this._eventParser.parseLogs(logs.logs)) {\n        const allListeners = this._eventListeners.get(event.name);\n        if (allListeners) {\n          allListeners.forEach(listener => {\n            const listenerCb = this._eventCallbacks.get(listener);\n            if (listenerCb) {\n              const [, callback] = listenerCb;\n              callback(event.data, ctx.slot, logs.signature);\n            }\n          });\n        }\n      }\n    }, commitment);\n    return listener;\n  }\n  async removeEventListener(listener) {\n    // Get the callback.\n    const callback = this._eventCallbacks.get(listener);\n    if (!callback) {\n      throw new Error(`Event listener ${listener} doesn't exist!`);\n    }\n    const [eventName] = callback;\n    // Get the listeners.\n    let listeners = this._eventListeners.get(eventName);\n    if (!listeners) {\n      throw new Error(`Event listeners don't exist for ${eventName}!`);\n    }\n    // Update both maps.\n    this._eventCallbacks.delete(listener);\n    listeners = listeners.filter(l => l !== listener);\n    this._eventListeners.set(eventName, listeners);\n    if (listeners.length === 0) {\n      this._eventListeners.delete(eventName);\n    }\n    // Kill the websocket connection if all listeners have been removed.\n    if (this._eventCallbacks.size === 0) {\n      if (this._eventListeners.size !== 0) {\n        throw new Error(`Expected event listeners size to be 0 but got ${this._eventListeners.size}`);\n      }\n      if (this._onLogsSubscriptionId !== undefined) {\n        await this._provider.connection.removeOnLogsListener(this._onLogsSubscriptionId);\n        this._onLogsSubscriptionId = undefined;\n      }\n    }\n  }\n}\nclass EventParser {\n  constructor(programId, coder) {\n    this.coder = coder;\n    this.programId = programId;\n  }\n  // Each log given, represents an array of messages emitted by\n  // a single transaction, which can execute many different programs across\n  // CPI boundaries. However, the subscription is only interested in the\n  // events emitted by *this* program. In achieving this, we keep track of the\n  // program execution context by parsing each log and looking for a CPI\n  // `invoke` call. If one exists, we know a new program is executing. So we\n  // push the programId onto a stack and switch the program context. This\n  // allows us to track, for a given log, which program was executing during\n  // its emission, thereby allowing us to know if a given log event was\n  // emitted by *this* program. If it was, then we parse the raw string and\n  // emit the event if the string matches the event being subscribed to.\n  *parseLogs(logs, errorOnDecodeFailure = false) {\n    const logScanner = new LogScanner(logs);\n    const execution = new ExecutionContext();\n    let log = logScanner.next();\n    while (log !== null) {\n      let [event, newProgram, didPop] = this.handleLog(execution, log, errorOnDecodeFailure);\n      if (event) {\n        yield event;\n      }\n      if (newProgram) {\n        execution.push(newProgram);\n      }\n      if (didPop) {\n        execution.pop();\n      }\n      log = logScanner.next();\n    }\n  }\n  // Main log handler. Returns a three element array of the event, the\n  // next program that was invoked for CPI, and a boolean indicating if\n  // a program has completed execution (and thus should be popped off the\n  // execution stack).\n  handleLog(execution, log, errorOnDecodeFailure) {\n    // Executing program is this program.\n    if (execution.stack.length > 0 && execution.program() === this.programId.toString()) {\n      return this.handleProgramLog(log, errorOnDecodeFailure);\n    }\n    // Executing program is not this program.\n    else {\n      return [null, ...this.handleSystemLog(log)];\n    }\n  }\n  // Handles logs from *this* program.\n  handleProgramLog(log, errorOnDecodeFailure) {\n    // This is a `msg!` log or a `sol_log_data` log.\n    if (log.startsWith(PROGRAM_LOG) || log.startsWith(PROGRAM_DATA)) {\n      const logStr = log.startsWith(PROGRAM_LOG) ? log.slice(PROGRAM_LOG_START_INDEX) : log.slice(PROGRAM_DATA_START_INDEX);\n      const event = this.coder.events.decode(logStr);\n      if (errorOnDecodeFailure && event === null) {\n        throw new Error(`Unable to decode event ${logStr}`);\n      }\n      return [event, null, false];\n    }\n    // System log.\n    else {\n      return [null, ...this.handleSystemLog(log)];\n    }\n  }\n  // Handles logs when the current program being executing is *not* this.\n  handleSystemLog(log) {\n    // System component.\n    const logStart = log.split(\":\")[0];\n    // Did the program finish executing?\n    if (logStart.match(/^Program (.*) success/g) !== null) {\n      return [null, true];\n      // Recursive call.\n    } else if (logStart.startsWith(`Program ${this.programId.toString()} invoke`)) {\n      return [this.programId.toString(), false];\n    }\n    // CPI call.\n    else if (logStart.includes(\"invoke\")) {\n      return [\"cpi\", false]; // Any string will do.\n    } else {\n      return [null, false];\n    }\n  }\n}\n// Stack frame execution context, allowing one to track what program is\n// executing for a given log.\nclass ExecutionContext {\n  constructor() {\n    this.stack = [];\n  }\n  program() {\n    if (!this.stack.length) {\n      throw new Error(\"Expected the stack to have elements\");\n    }\n    return this.stack[this.stack.length - 1];\n  }\n  push(newProgram) {\n    this.stack.push(newProgram);\n  }\n  pop() {\n    if (!this.stack.length) {\n      throw new Error(\"Expected the stack to have elements\");\n    }\n    this.stack.pop();\n  }\n}\nclass LogScanner {\n  constructor(logs) {\n    this.logs = logs;\n  }\n  next() {\n    if (this.logs.length === 0) {\n      return null;\n    }\n    let l = this.logs[0];\n    this.logs = this.logs.slice(1);\n    return l;\n  }\n}\nfunction splitArgsAndCtx(idlIx, args) {\n  var _a, _b;\n  let options = {};\n  const inputLen = idlIx.args ? idlIx.args.length : 0;\n  if (args.length > inputLen) {\n    if (args.length !== inputLen + 1) {\n      throw new Error(`provided too many arguments ${args} to instruction ${idlIx === null || idlIx === void 0 ? void 0 : idlIx.name} expecting: ${(_b = (_a = idlIx.args) === null || _a === void 0 ? void 0 : _a.map(a => a.name)) !== null && _b !== void 0 ? _b : []}`);\n    }\n    options = args.pop();\n  }\n  return [args, options];\n}\nclass InstructionNamespaceFactory {\n  static build(idlIx, encodeFn, programId) {\n    if (idlIx.name === \"_inner\") {\n      throw new IdlError(\"the _inner name is reserved\");\n    }\n    const ix = (...args) => {\n      const [ixArgs, ctx] = splitArgsAndCtx(idlIx, [...args]);\n      validateAccounts(idlIx.accounts, ctx.accounts);\n      validateInstruction(idlIx, ...args);\n      const keys = ix.accounts(ctx.accounts);\n      if (ctx.remainingAccounts !== undefined) {\n        keys.push(...ctx.remainingAccounts);\n      }\n      if (isSet(\"debug-logs\")) {\n        console.log(\"Outgoing account metas:\", keys);\n      }\n      return new TransactionInstruction({\n        keys,\n        programId,\n        data: encodeFn(idlIx.name, toInstruction(idlIx, ...ixArgs))\n      });\n    };\n    // Utility fn for ordering the accounts for this instruction.\n    ix[\"accounts\"] = accs => {\n      return InstructionNamespaceFactory.accountsArray(accs, idlIx.accounts, programId, idlIx.name);\n    };\n    return ix;\n  }\n  static accountsArray(ctx, accounts, programId, ixName) {\n    if (!ctx) {\n      return [];\n    }\n    return accounts.map(acc => {\n      if (isCompositeAccounts(acc)) {\n        const rpcAccs = ctx[acc.name];\n        return InstructionNamespaceFactory.accountsArray(rpcAccs, acc.accounts, programId, ixName).flat();\n      }\n      let pubkey;\n      try {\n        pubkey = translateAddress(ctx[acc.name]);\n      } catch (err) {\n        throw new Error(`Wrong input type for account \"${acc.name}\" in the instruction accounts object${ixName !== undefined ? ' for instruction \"' + ixName + '\"' : \"\"}. Expected PublicKey or string.`);\n      }\n      const isOptional = acc.optional && pubkey.equals(programId);\n      const isWritable = Boolean(acc.writable && !isOptional);\n      const isSigner = Boolean(acc.signer && !isOptional);\n      return {\n        pubkey,\n        isWritable,\n        isSigner\n      };\n    }).flat();\n  }\n}\n// Throws error if any argument required for the `ix` is not given.\nfunction validateInstruction(ix, ...args) {\n  // todo\n}\nclass TransactionFactory {\n  static build(idlIx, ixFn) {\n    const txFn = (...args) => {\n      var _a, _b, _c;\n      const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n      const tx = new Transaction();\n      if (ctx.preInstructions && ctx.instructions) {\n        throw new Error(\"instructions is deprecated, use preInstructions\");\n      }\n      (_a = ctx.preInstructions) === null || _a === void 0 ? void 0 : _a.forEach(ix => tx.add(ix));\n      (_b = ctx.instructions) === null || _b === void 0 ? void 0 : _b.forEach(ix => tx.add(ix));\n      tx.add(ixFn(...args));\n      (_c = ctx.postInstructions) === null || _c === void 0 ? void 0 : _c.forEach(ix => tx.add(ix));\n      return tx;\n    };\n    return txFn;\n  }\n}\nclass RpcFactory {\n  static build(idlIx, txFn, idlErrors, provider) {\n    const rpc = async (...args) => {\n      var _a;\n      const tx = txFn(...args);\n      const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n      if (provider.sendAndConfirm === undefined) {\n        throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n      }\n      try {\n        return await provider.sendAndConfirm(tx, (_a = ctx.signers) !== null && _a !== void 0 ? _a : [], ctx.options);\n      } catch (err) {\n        throw translateError(err, idlErrors);\n      }\n    };\n    return rpc;\n  }\n}\nclass AccountFactory {\n  static build(idl, coder, programId, provider) {\n    var _a;\n    return ((_a = idl.accounts) !== null && _a !== void 0 ? _a : []).reduce((accountFns, acc) => {\n      accountFns[acc.name] = new AccountClient(idl, acc, programId, provider, coder);\n      return accountFns;\n    }, {});\n  }\n}\nclass AccountClient {\n  /**\n   * Returns the number of bytes in this account.\n   */\n  get size() {\n    return this._size;\n  }\n  /**\n   * Returns the program ID owning all accounts.\n   */\n  get programId() {\n    return this._programId;\n  }\n  /**\n   * Returns the client's wallet and network provider.\n   */\n  get provider() {\n    return this._provider;\n  }\n  /**\n   * Returns the coder.\n   */\n  get coder() {\n    return this._coder;\n  }\n  constructor(idl, idlAccount, programId, provider, coder) {\n    this._idlAccount = idlAccount;\n    this._programId = programId;\n    this._provider = provider !== null && provider !== void 0 ? provider : getProvider();\n    this._coder = coder !== null && coder !== void 0 ? coder : new BorshCoder(idl);\n    this._size = this._coder.accounts.size(idlAccount.name);\n  }\n  /**\n   * Returns a deserialized account, returning null if it doesn't exist.\n   *\n   * @param address The address of the account to fetch.\n   */\n  async fetchNullable(address, commitment) {\n    const {\n      data\n    } = await this.fetchNullableAndContext(address, commitment);\n    return data;\n  }\n  /**\n   * Returns a deserialized account along with the associated rpc response context, returning null if it doesn't exist.\n   *\n   * @param address The address of the account to fetch.\n   */\n  async fetchNullableAndContext(address, commitment) {\n    const accountInfo = await this.getAccountInfoAndContext(address, commitment);\n    const {\n      value,\n      context\n    } = accountInfo;\n    return {\n      data: value && value.data.length !== 0 ? this._coder.accounts.decode(this._idlAccount.name, value.data) : null,\n      context\n    };\n  }\n  /**\n   * Returns a deserialized account.\n   *\n   * @param address The address of the account to fetch.\n   */\n  async fetch(address, commitment) {\n    const {\n      data\n    } = await this.fetchNullableAndContext(address, commitment);\n    if (data === null) {\n      throw new Error(`Account does not exist or has no data ${address.toString()}`);\n    }\n    return data;\n  }\n  /**\n   * Returns a deserialized account along with the associated rpc response context.\n   *\n   * @param address The address of the account to fetch.\n   */\n  async fetchAndContext(address, commitment) {\n    const {\n      data,\n      context\n    } = await this.fetchNullableAndContext(address, commitment);\n    if (data === null) {\n      throw new Error(`Account does not exist ${address.toString()}`);\n    }\n    return {\n      data,\n      context\n    };\n  }\n  /**\n   * Returns multiple deserialized accounts.\n   * Accounts not found or with wrong discriminator are returned as null.\n   *\n   * @param addresses The addresses of the accounts to fetch.\n   */\n  async fetchMultiple(addresses, commitment) {\n    const accounts = await this.fetchMultipleAndContext(addresses, commitment);\n    return accounts.map(account => account ? account.data : null);\n  }\n  /**\n   * Returns multiple deserialized accounts.\n   * Accounts not found or with wrong discriminator are returned as null.\n   *\n   * @param addresses The addresses of the accounts to fetch.\n   */\n  async fetchMultipleAndContext(addresses, commitment) {\n    const accounts = await getMultipleAccountsAndContext(this._provider.connection, addresses.map(address => translateAddress(address)), commitment);\n    // Decode accounts where discriminator is correct, null otherwise\n    return accounts.map(result => {\n      if (result == null) {\n        return null;\n      }\n      const {\n        account,\n        context\n      } = result;\n      return {\n        data: this._coder.accounts.decode(this._idlAccount.name, account.data),\n        context\n      };\n    });\n  }\n  /**\n   * Returns all instances of this account type for the program.\n   *\n   * @param filters User-provided filters to narrow the results from `connection.getProgramAccounts`.\n   *\n   *                When filters are not defined this method returns all\n   *                the account instances.\n   *\n   *                When filters are of type `Buffer`, the filters are appended\n   *                after the discriminator.\n   *\n   *                When filters are of type `GetProgramAccountsFilter[]`,\n   *                filters are appended after the discriminator filter.\n   */\n  async all(filters) {\n    const filter = this.coder.accounts.memcmp(this._idlAccount.name, filters instanceof Buffer ? filters : undefined);\n    const coderFilters = [];\n    if ((filter === null || filter === void 0 ? void 0 : filter.offset) != undefined && (filter === null || filter === void 0 ? void 0 : filter.bytes) != undefined) {\n      coderFilters.push({\n        memcmp: {\n          offset: filter.offset,\n          bytes: filter.bytes\n        }\n      });\n    }\n    if ((filter === null || filter === void 0 ? void 0 : filter.dataSize) != undefined) {\n      coderFilters.push({\n        dataSize: filter.dataSize\n      });\n    }\n    let resp = await this._provider.connection.getProgramAccounts(this._programId, {\n      commitment: this._provider.connection.commitment,\n      filters: [...coderFilters, ...(Array.isArray(filters) ? filters : [])]\n    });\n    return resp.map(({\n      pubkey,\n      account\n    }) => {\n      return {\n        publicKey: pubkey,\n        account: this._coder.accounts.decode(this._idlAccount.name, account.data)\n      };\n    });\n  }\n  /**\n   * Returns an `EventEmitter` emitting a \"change\" event whenever the account\n   * changes.\n   */\n  subscribe(address, commitment) {\n    const sub = subscriptions.get(address.toString());\n    if (sub) {\n      return sub.ee;\n    }\n    const ee = new EventEmitter();\n    address = translateAddress(address);\n    const listener = this._provider.connection.onAccountChange(address, acc => {\n      const account = this._coder.accounts.decode(this._idlAccount.name, acc.data);\n      ee.emit(\"change\", account);\n    }, commitment);\n    subscriptions.set(address.toString(), {\n      ee,\n      listener\n    });\n    return ee;\n  }\n  /**\n   * Unsubscribes from the account at the given address.\n   */\n  async unsubscribe(address) {\n    let sub = subscriptions.get(address.toString());\n    if (!sub) {\n      console.warn(\"Address is not subscribed\");\n      return;\n    }\n    if (subscriptions) {\n      await this._provider.connection.removeAccountChangeListener(sub.listener).then(() => {\n        subscriptions.delete(address.toString());\n      }).catch(console.error);\n    }\n  }\n  /**\n   * Returns an instruction for creating this account.\n   */\n  async createInstruction(signer, sizeOverride) {\n    const size = this.size;\n    if (this._provider.publicKey === undefined) {\n      throw new Error(\"This function requires the Provider interface implementor to have a 'publicKey' field.\");\n    }\n    return SystemProgram.createAccount({\n      fromPubkey: this._provider.publicKey,\n      newAccountPubkey: signer.publicKey,\n      space: sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size,\n      lamports: await this._provider.connection.getMinimumBalanceForRentExemption(sizeOverride !== null && sizeOverride !== void 0 ? sizeOverride : size),\n      programId: this._programId\n    });\n  }\n  async getAccountInfo(address, commitment) {\n    return await this._provider.connection.getAccountInfo(translateAddress(address), commitment);\n  }\n  async getAccountInfoAndContext(address, commitment) {\n    return await this._provider.connection.getAccountInfoAndContext(translateAddress(address), commitment);\n  }\n}\n// Tracks all subscriptions.\nconst subscriptions = new Map();\nclass SimulateFactory {\n  static build(idlIx, txFn, idlErrors, provider, coder, programId, idl) {\n    const simulate = async (...args) => {\n      var _a;\n      const tx = txFn(...args);\n      const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n      let resp = undefined;\n      if (provider.simulate === undefined) {\n        throw new Error(\"This function requires 'Provider.simulate' to be implemented.\");\n      }\n      try {\n        resp = await provider.simulate(tx, ctx.signers, (_a = ctx.options) === null || _a === void 0 ? void 0 : _a.commitment);\n      } catch (err) {\n        throw translateError(err, idlErrors);\n      }\n      if (resp === undefined) {\n        throw new Error(\"Unable to simulate transaction\");\n      }\n      const logs = resp.logs;\n      if (!logs) {\n        throw new Error(\"Simulated logs not found\");\n      }\n      const events = [];\n      if (idl.events) {\n        let parser = new EventParser(programId, coder);\n        for (const event of parser.parseLogs(logs)) {\n          events.push(event);\n        }\n      }\n      return {\n        events,\n        raw: logs\n      };\n    };\n    return simulate;\n  }\n}\nfunction uint64(property) {\n  return new WrappedLayout(blob(8), b => u64.fromBuffer(b), n => n.toBuffer(), property);\n}\nfunction publicKey(property) {\n  return new WrappedLayout(blob(32), b => new PublicKey(b), key => key.toBuffer(), property);\n}\nfunction coption(layout, property) {\n  return new COptionLayout(layout, property);\n}\nclass WrappedLayout extends Layout_2 {\n  constructor(layout, decoder, encoder, property) {\n    super(layout.span, property);\n    this.layout = layout;\n    this.decoder = decoder;\n    this.encoder = encoder;\n  }\n  decode(b, offset) {\n    return this.decoder(this.layout.decode(b, offset));\n  }\n  encode(src, b, offset) {\n    return this.layout.encode(this.encoder(src), b, offset);\n  }\n  getSpan(b, offset) {\n    return this.layout.getSpan(b, offset);\n  }\n}\nclass COptionLayout extends Layout_2 {\n  constructor(layout, property) {\n    super(-1, property);\n    this.layout = layout;\n    this.discriminator = u32();\n  }\n  encode(src, b, offset = 0) {\n    if (src === null || src === undefined) {\n      return this.layout.span + this.discriminator.encode(0, b, offset);\n    }\n    this.discriminator.encode(1, b, offset);\n    return this.layout.encode(src, b, offset + 4) + 4;\n  }\n  decode(b, offset = 0) {\n    const discriminator = this.discriminator.decode(b, offset);\n    if (discriminator === 0) {\n      return null;\n    } else if (discriminator === 1) {\n      return this.layout.decode(b, offset + 4);\n    }\n    throw new Error(\"Invalid coption \" + this.layout.property);\n  }\n  getSpan(b, offset = 0) {\n    return this.layout.getSpan(b, offset + 4) + 4;\n  }\n}\nclass u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer() {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    if (b.length >= 8) {\n      throw new Error(\"u64 too large\");\n    }\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer) {\n    if (buffer.length !== 8) {\n      throw new Error(`Invalid buffer length: ${buffer.length}`);\n    }\n    return new u64([...buffer].reverse().map(i => `00${i.toString(16)}`.slice(-2)).join(\"\"), 16);\n  }\n}\nconst TOKEN_ACCOUNT_LAYOUT = struct([publicKey(\"mint\"), publicKey(\"owner\"), uint64(\"amount\"), coption(publicKey(), \"delegate\"), (p => {\n  const U = union(u8(\"discriminator\"), null, p);\n  U.addVariant(0, struct([]), \"uninitialized\");\n  U.addVariant(1, struct([]), \"initialized\");\n  U.addVariant(2, struct([]), \"frozen\");\n  return U;\n})(\"state\"), coption(uint64(), \"isNative\"), uint64(\"delegatedAmount\"), coption(publicKey(), \"closeAuthority\")]);\nfunction decodeTokenAccount(b) {\n  return TOKEN_ACCOUNT_LAYOUT.decode(b);\n}\n\n// Populates a given accounts context with PDAs and common missing accounts.\nclass AccountsResolver {\n  constructor(_args, _accounts, _provider, _programId, _idlIx, accountNamespace, _idlTypes, _customResolver) {\n    this._args = _args;\n    this._accounts = _accounts;\n    this._provider = _provider;\n    this._programId = _programId;\n    this._idlIx = _idlIx;\n    this._idlTypes = _idlTypes;\n    this._customResolver = _customResolver;\n    this._accountStore = new AccountStore(_provider, accountNamespace, _programId);\n  }\n  args(args) {\n    this._args = args;\n  }\n  // Note: We serially resolve PDAs one by one rather than doing them\n  //       in parallel because there can be dependencies between\n  //       addresses. That is, one PDA can be used as a seed in another.\n  async resolve() {\n    this.resolveEventCpi(this._idlIx.accounts);\n    this.resolveConst(this._idlIx.accounts);\n    // Auto populate pdas and relations until we stop finding new accounts\n    let depth = 0;\n    while ((await this.resolvePdasAndRelations(this._idlIx.accounts)) + (await this.resolveCustom()) > 0) {\n      depth++;\n      if (depth === 16) {\n        const isResolvable = acc => {\n          if (!isCompositeAccounts(acc)) {\n            return !!(acc.address || acc.pda || acc.relations);\n          }\n          return acc.accounts.some(isResolvable);\n        };\n        const getPaths = (accs, path = [], paths = []) => {\n          for (const acc of accs) {\n            if (isCompositeAccounts(acc)) {\n              paths.push(...getPaths(acc.accounts, [...path, acc.name]));\n            } else {\n              paths.push([...path, acc.name]);\n            }\n          }\n          return paths;\n        };\n        const resolvableAccs = this._idlIx.accounts.filter(isResolvable);\n        const unresolvedAccs = getPaths(resolvableAccs).filter(path => !this.get(path)).map(path => path.reduce((acc, p) => acc + \".\" + p)).map(acc => `\\`${acc}\\``).join(\", \");\n        throw new Error([`Reached maximum depth for account resolution.`, `Unresolved accounts: ${unresolvedAccs}`].join(\" \"));\n      }\n    }\n  }\n  resolveOptionals(accounts) {\n    Object.assign(this._accounts, this.resolveOptionalsHelper(accounts, this._idlIx.accounts));\n  }\n  get(path) {\n    // Only return if pubkey\n    const ret = path.reduce((acc, subPath) => acc && acc[subPath], this._accounts);\n    if (ret && ret.toBase58) {\n      return ret;\n    }\n  }\n  set(path, value) {\n    let cur = this._accounts;\n    path.forEach((p, i) => {\n      var _a;\n      const isLast = i === path.length - 1;\n      if (isLast) {\n        cur[p] = value;\n      }\n      cur[p] = (_a = cur[p]) !== null && _a !== void 0 ? _a : {};\n      cur = cur[p];\n    });\n  }\n  resolveOptionalsHelper(partialAccounts, accounts) {\n    const nestedAccountsGeneric = {};\n    // Looping through accountItem array instead of on partialAccounts, so\n    // we only traverse array once\n    for (const accountItem of accounts) {\n      const accountName = accountItem.name;\n      const partialAccount = partialAccounts[accountName];\n      // Skip if the account isn't included (thus would be undefined)\n      if (partialAccount === undefined) continue;\n      if (isPartialAccounts(partialAccount)) {\n        // is compound accounts, recurse one level deeper\n        if (isCompositeAccounts(accountItem)) {\n          nestedAccountsGeneric[accountName] = this.resolveOptionalsHelper(partialAccount, accountItem[\"accounts\"]);\n        } else {\n          // Here we try our best to recover gracefully. If there are optionals we can't check, we will fail then.\n          nestedAccountsGeneric[accountName] = flattenPartialAccounts(partialAccount, true);\n        }\n      } else {\n        // if not compound accounts, do null/optional check and proceed\n        if (partialAccount !== null) {\n          nestedAccountsGeneric[accountName] = translateAddress(partialAccount);\n        } else if (accountItem[\"optional\"]) {\n          nestedAccountsGeneric[accountName] = this._programId;\n        }\n      }\n    }\n    return nestedAccountsGeneric;\n  }\n  async resolveCustom() {\n    if (this._customResolver) {\n      const {\n        accounts,\n        resolved\n      } = await this._customResolver({\n        args: this._args,\n        accounts: this._accounts,\n        provider: this._provider,\n        programId: this._programId,\n        idlIx: this._idlIx\n      });\n      this._accounts = accounts;\n      return resolved;\n    }\n    return 0;\n  }\n  /**\n   * Resolve event CPI accounts `eventAuthority` and `program`.\n   *\n   * Accounts will only be resolved if they are declared next to each other to\n   * reduce the chance of name collision.\n   */\n  resolveEventCpi(accounts, path = []) {\n    for (const i in accounts) {\n      const accountOrAccounts = accounts[i];\n      if (isCompositeAccounts(accountOrAccounts)) {\n        this.resolveEventCpi(accountOrAccounts.accounts, [...path, accountOrAccounts.name]);\n      }\n      // Validate next index exists\n      const nextIndex = +i + 1;\n      if (nextIndex === accounts.length) return;\n      const currentName = accounts[i].name;\n      const nextName = accounts[nextIndex].name;\n      // Populate event CPI accounts if they exist\n      if (currentName === \"eventAuthority\" && nextName === \"program\") {\n        const currentPath = [...path, currentName];\n        const nextPath = [...path, nextName];\n        if (!this.get(currentPath)) {\n          this.set(currentPath, PublicKey.findProgramAddressSync([Buffer.from(\"__event_authority\")], this._programId)[0]);\n        }\n        if (!this.get(nextPath)) {\n          this.set(nextPath, this._programId);\n        }\n        return;\n      }\n    }\n  }\n  resolveConst(accounts, path = []) {\n    for (const accountOrAccounts of accounts) {\n      const name = accountOrAccounts.name;\n      if (isCompositeAccounts(accountOrAccounts)) {\n        this.resolveConst(accountOrAccounts.accounts, [...path, name]);\n      } else {\n        const account = accountOrAccounts;\n        if ((account.signer || account.address) && !this.get([...path, name])) {\n          // Default signers to the provider\n          if (account.signer) {\n            if (!this._provider.wallet) {\n              throw new Error(\"This function requires the `Provider` interface implementor to have a `wallet` field.\");\n            }\n            this.set([...path, name], this._provider.wallet.publicKey);\n          }\n          // Set based on `address` field\n          if (account.address) {\n            this.set([...path, name], translateAddress(account.address));\n          }\n        }\n      }\n    }\n  }\n  async resolvePdasAndRelations(accounts, path = []) {\n    let found = 0;\n    for (const accountOrAccounts of accounts) {\n      const name = accountOrAccounts.name;\n      if (isCompositeAccounts(accountOrAccounts)) {\n        found += await this.resolvePdasAndRelations(accountOrAccounts.accounts, [...path, name]);\n      } else {\n        const account = accountOrAccounts;\n        if ((account.pda || account.relations) && !this.get([...path, name])) {\n          found++;\n          // Accounts might not get resolved successfully if a seed depends on\n          // another seed to be resolved *and* the accounts for resolution are\n          // out of order. In this case, skip the accounts that throw in order\n          // to resolve those accounts later.\n          try {\n            if (account.pda) {\n              const seeds = await Promise.all(account.pda.seeds.map(seed => this.toBuffer(seed, path)));\n              if (seeds.some(seed => !seed)) {\n                continue;\n              }\n              const programId = await this.parseProgramId(account, path);\n              const [pubkey] = PublicKey.findProgramAddressSync(seeds, programId);\n              this.set([...path, name], pubkey);\n            }\n          } catch {}\n          try {\n            if (account.relations) {\n              const accountKey = this.get([...path, account.relations[0]]);\n              if (accountKey) {\n                const account = await this._accountStore.fetchAccount({\n                  publicKey: accountKey\n                });\n                this.set([...path, name], account[name]);\n              }\n            }\n          } catch {}\n        }\n      }\n    }\n    return found;\n  }\n  async parseProgramId(account, path = []) {\n    var _a;\n    if (!((_a = account.pda) === null || _a === void 0 ? void 0 : _a.program)) {\n      return this._programId;\n    }\n    const buf = await this.toBuffer(account.pda.program, path);\n    if (!buf) {\n      throw new Error(`Program seed not resolved: ${account.name}`);\n    }\n    return new PublicKey(buf);\n  }\n  async toBuffer(seed, path = []) {\n    switch (seed.kind) {\n      case \"const\":\n        return this.toBufferConst(seed);\n      case \"arg\":\n        return await this.toBufferArg(seed);\n      case \"account\":\n        return await this.toBufferAccount(seed, path);\n      default:\n        throw new Error(`Unexpected seed: ${seed}`);\n    }\n  }\n  toBufferConst(seed) {\n    return this.toBufferValue(\"bytes\", seed.value);\n  }\n  async toBufferArg(seed) {\n    const [name, ...path] = seed.path.split(\".\");\n    const index = this._idlIx.args.findIndex(arg => arg.name === name);\n    if (index === -1) {\n      throw new Error(`Unable to find argument for seed: ${name}`);\n    }\n    const value = path.reduce((acc, path) => (acc !== null && acc !== void 0 ? acc : {})[path], this._args[index]);\n    if (value === undefined) {\n      return;\n    }\n    const type = this.getType(this._idlIx.args[index].type, path);\n    return this.toBufferValue(type, value);\n  }\n  async toBufferAccount(seed, path = []) {\n    const [name, ...paths] = seed.path.split(\".\");\n    const fieldPubkey = this.get([...path, name]);\n    if (!fieldPubkey) return;\n    // The seed is a pubkey of the account.\n    if (!paths.length) {\n      return this.toBufferValue(\"pubkey\", fieldPubkey);\n    }\n    if (!seed.account) {\n      throw new Error(`Seed account is required in order to resolve type: ${seed.path}`);\n    }\n    // The key is account data.\n    //\n    // Fetch and deserialize it.\n    const account = await this._accountStore.fetchAccount({\n      publicKey: fieldPubkey,\n      name: seed.account\n    });\n    // Dereference all fields in the path to get the field value\n    // used in the seed.\n    let accountValue = account;\n    let currentPaths = paths;\n    while (currentPaths.length > 0) {\n      accountValue = accountValue[currentPaths[0]];\n      currentPaths = currentPaths.slice(1);\n    }\n    if (accountValue === undefined) return;\n    const type = this.getType({\n      defined: {\n        name: seed.account\n      }\n    }, paths);\n    return this.toBufferValue(type, accountValue);\n  }\n  /**\n   * Converts the given idl valaue into a Buffer. The values here must be\n   * primitives, e.g. no structs.\n   */\n  toBufferValue(type, value) {\n    switch (type) {\n      case \"u8\":\n      case \"i8\":\n        return Buffer.from([value]);\n      case \"u16\":\n      case \"i16\":\n        return new BN(value).toArrayLike(Buffer, \"le\", 2);\n      case \"u32\":\n      case \"i32\":\n        return new BN(value).toArrayLike(Buffer, \"le\", 4);\n      case \"u64\":\n      case \"i64\":\n        return new BN(value).toArrayLike(Buffer, \"le\", 8);\n      case \"u128\":\n      case \"i128\":\n        return new BN(value).toArrayLike(Buffer, \"le\", 16);\n      case \"u256\":\n      case \"i256\":\n        return new BN(value).toArrayLike(Buffer, \"le\", 32);\n      case \"string\":\n        return Buffer.from(value);\n      case \"pubkey\":\n        return value.toBuffer();\n      case \"bytes\":\n        return Buffer.from(value);\n      default:\n        if (type === null || type === void 0 ? void 0 : type.array) {\n          return Buffer.from(value);\n        }\n        throw new Error(`Unexpected seed type: ${type}`);\n    }\n  }\n  /**\n   * Recursively get the type at some path of either a primitive or a user\n   * defined struct.\n   */\n  getType(type, path = []) {\n    var _a;\n    const typeName = (_a = type === null || type === void 0 ? void 0 : type.defined) === null || _a === void 0 ? void 0 : _a.name;\n    if (typeName) {\n      // Handle token account separately\n      if (typeName === \"tokenAccount\") {\n        switch (path.at(0)) {\n          case \"mint\":\n          case \"owner\":\n            return \"pubkey\";\n          case \"amount\":\n          case \"delagatedAmount\":\n            return \"u64\";\n          default:\n            throw new Error(`Unknown token account path: ${path}`);\n        }\n      }\n      const definedType = this._idlTypes.find(t => t.name === typeName);\n      if (!definedType) {\n        throw new Error(`Type not found: ${typeName}`);\n      }\n      // Only named structs are supported\n      const [fieldName, ...subPath] = path;\n      const fields = definedType.type.fields;\n      const field = fields.find(field => field.name === fieldName);\n      if (!field) {\n        throw new Error(`Field not found: ${fieldName}`);\n      }\n      return this.getType(field.type, subPath);\n    }\n    return type;\n  }\n}\n// TODO: this should be configurable to avoid unnecessary requests.\nclass AccountStore {\n  constructor(_provider, accounts, programId) {\n    this._provider = _provider;\n    this._cache = new Map();\n    this._idls = {};\n    this._idls[programId.toBase58()] = accounts;\n  }\n  async fetchAccount({\n    publicKey,\n    name\n  }) {\n    const address = publicKey.toBase58();\n    if (!this._cache.has(address)) {\n      const accountInfo = await this._provider.connection.getAccountInfo(publicKey);\n      if (accountInfo === null) {\n        throw new Error(`Account not found: ${address}`);\n      }\n      if (name === \"tokenAccount\") {\n        const account = decodeTokenAccount(accountInfo.data);\n        this._cache.set(address, account);\n      } else {\n        const accounts = await this.getAccountsNs(accountInfo.owner);\n        if (accounts) {\n          const accountNs = Object.values(accounts)[0];\n          if (accountNs) {\n            const account = accountNs.coder.accounts.decodeAny(accountInfo.data);\n            this._cache.set(address, account);\n          }\n        }\n      }\n    }\n    return this._cache.get(address);\n  }\n  async getAccountsNs(programId) {\n    const programIdStr = programId.toBase58();\n    if (!this._idls[programIdStr]) {\n      const idl = await Program.fetchIdl(programId, this._provider);\n      if (idl) {\n        const program = new Program(idl, this._provider);\n        this._idls[programIdStr] = program.account;\n      }\n    }\n    return this._idls[programIdStr];\n  }\n}\nclass MethodsBuilderFactory {\n  static build(provider, programId, idlIx, ixFn, txFn, rpcFn, simulateFn, viewFn, accountNamespace, idlTypes, customResolver) {\n    return (...args) => new MethodsBuilder(args, ixFn, txFn, rpcFn, simulateFn, viewFn, provider, programId, idlIx, accountNamespace, idlTypes, customResolver);\n  }\n}\nfunction isPartialAccounts(partialAccount) {\n  return typeof partialAccount === \"object\" && partialAccount !== null && !(\"_bn\" in partialAccount) // Ensures not a pubkey\n  ;\n}\nfunction flattenPartialAccounts(partialAccounts, throwOnNull) {\n  const toReturn = {};\n  for (const accountName in partialAccounts) {\n    const account = partialAccounts[accountName];\n    if (account === null) {\n      if (throwOnNull) throw new Error(\"Failed to resolve optionals due to IDL type mismatch with input accounts!\");\n      continue;\n    }\n    toReturn[accountName] = isPartialAccounts(account) ? flattenPartialAccounts(account, true) : translateAddress(account);\n  }\n  return toReturn;\n}\nclass MethodsBuilder {\n  constructor(_args, _ixFn, _txFn, _rpcFn, _simulateFn, _viewFn, provider, programId, idlIx, accountNamespace, idlTypes, customResolver) {\n    this._args = _args;\n    this._ixFn = _ixFn;\n    this._txFn = _txFn;\n    this._rpcFn = _rpcFn;\n    this._simulateFn = _simulateFn;\n    this._viewFn = _viewFn;\n    this._accounts = {};\n    this._remainingAccounts = [];\n    this._signers = [];\n    this._preInstructions = [];\n    this._postInstructions = [];\n    this._resolveAccounts = true;\n    this._accountsResolver = new AccountsResolver(_args, this._accounts, provider, programId, idlIx, accountNamespace, idlTypes, customResolver);\n  }\n  args(args) {\n    this._args = args;\n    this._accountsResolver.args(args);\n  }\n  /**\n   * Set instruction accounts with account resolution.\n   *\n   * This method only accepts accounts that cannot be resolved.\n   *\n   * See {@link accountsPartial} for overriding the account resolution or\n   * {@link accountsStrict} for strictly specifying all accounts.\n   */\n  accounts(accounts) {\n    // @ts-ignore\n    return this.accountsPartial(accounts);\n  }\n  /**\n   * Set instruction accounts with account resolution.\n   *\n   * There is no functional difference between this method and {@link accounts}\n   * method, the only difference is this method allows specifying all accounts\n   * even if they can be resolved. On the other hand, {@link accounts} method\n   * doesn't accept accounts that can be resolved.\n   */\n  accountsPartial(accounts) {\n    this._resolveAccounts = true;\n    this._accountsResolver.resolveOptionals(accounts);\n    return this;\n  }\n  /**\n   * Set instruction accounts without account resolution.\n   *\n   * All accounts strictly need to be specified when this method is used.\n   *\n   * See {@link accounts} and {@link accountsPartial} methods for automatically\n   * resolving accounts.\n   *\n   * @param accounts instruction accounts\n   */\n  accountsStrict(accounts) {\n    this._resolveAccounts = false;\n    this._accountsResolver.resolveOptionals(accounts);\n    return this;\n  }\n  /**\n   * Set instruction signers.\n   *\n   * Note that calling this method appends the given signers to the existing\n   * signers (instead of overriding them).\n   *\n   * @param signers signers to append\n   */\n  signers(signers) {\n    this._signers = this._signers.concat(signers);\n    return this;\n  }\n  /**\n   * Set remaining accounts.\n   *\n   * Note that calling this method appends the given accounts to the existing\n   * remaining accounts (instead of overriding them).\n   *\n   * @param accounts remaining accounts\n   */\n  remainingAccounts(accounts) {\n    this._remainingAccounts = this._remainingAccounts.concat(accounts);\n    return this;\n  }\n  /**\n   * Set previous instructions.\n   *\n   * See {@link postInstructions} to set the post instructions instead.\n   *\n   * @param ixs instructions\n   * @param prepend whether to prepend to the existing previous instructions\n   */\n  preInstructions(ixs, prepend = false) {\n    if (prepend) {\n      this._preInstructions = ixs.concat(this._preInstructions);\n    } else {\n      this._preInstructions = this._preInstructions.concat(ixs);\n    }\n    return this;\n  }\n  /**\n   * Set post instructions.\n   *\n   * See {@link preInstructions} to set the previous instructions instead.\n   *\n   * @param ixs instructions\n   */\n  postInstructions(ixs) {\n    this._postInstructions = this._postInstructions.concat(ixs);\n    return this;\n  }\n  /**\n   * Get the public keys of the instruction accounts.\n   *\n   * The return type is an object with account names as keys and their public\n   * keys as their values.\n   *\n   * Note that an account key is `undefined` if the account hasn't yet been\n   * specified or resolved.\n   */\n  async pubkeys() {\n    if (this._resolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    // @ts-ignore\n    return this._accounts;\n  }\n  /**\n   * Create an instruction based on the current configuration.\n   *\n   * See {@link transaction} to create a transaction instead.\n   *\n   * @returns the transaction instruction\n   */\n  async instruction() {\n    if (this._resolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    // @ts-ignore\n    return this._ixFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions\n    });\n  }\n  /**\n   * Create a transaction based on the current configuration.\n   *\n   * This method doesn't send the created transaction. Use {@link rpc} method\n   * to conveniently send an confirm the configured transaction.\n   *\n   * See {@link instruction} to only create an instruction instead.\n   *\n   * @returns the transaction\n   */\n  async transaction() {\n    if (this._resolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    // @ts-ignore\n    return this._txFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions\n    });\n  }\n  /**\n   * Simulate the configured transaction.\n   *\n   * @param options confirmation options\n   * @returns the simulation response\n   */\n  async simulate(options) {\n    if (this._resolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    // @ts-ignore\n    return this._simulateFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions,\n      options\n    });\n  }\n  /**\n   * View the configured transaction.\n   *\n   * Note that to use this method, the instruction needs to return a value and\n   * all its accounts must be read-only.\n   *\n   * @param options confirmation options\n   * @returns the return value of the instruction\n   */\n  async view(options) {\n    if (this._resolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    if (!this._viewFn) {\n      throw new Error([\"Method does not support views.\", \"The instruction should return a value, and its accounts must be read-only\"].join(\" \"));\n    }\n    // @ts-ignore\n    return this._viewFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions,\n      options\n    });\n  }\n  /**\n   * Send and confirm the configured transaction.\n   *\n   * See {@link rpcAndKeys} to both send the transaction and get the resolved\n   * account public keys.\n   *\n   * @param options confirmation options\n   * @returns the transaction signature\n   */\n  async rpc(options) {\n    if (this._resolveAccounts) {\n      await this._accountsResolver.resolve();\n    }\n    // @ts-ignore\n    return this._rpcFn(...this._args, {\n      accounts: this._accounts,\n      signers: this._signers,\n      remainingAccounts: this._remainingAccounts,\n      preInstructions: this._preInstructions,\n      postInstructions: this._postInstructions,\n      options\n    });\n  }\n  /**\n   * Conveniently call both {@link rpc} and {@link pubkeys} methods.\n   *\n   * @param options confirmation options\n   * @returns the transaction signature and account public keys\n   */\n  async rpcAndKeys(options) {\n    return {\n      signature: await this.rpc(options),\n      pubkeys: await this.pubkeys()\n    };\n  }\n  /**\n   * Get instruction information necessary to include the instruction inside a\n   * transaction.\n   *\n   * # Example\n   *\n   * ```ts\n   * const { instruction, signers, pubkeys } = await method.prepare();\n   * ```\n   */\n  async prepare() {\n    return {\n      instruction: await this.instruction(),\n      signers: this._signers,\n      pubkeys: await this.pubkeys()\n    };\n  }\n}\nclass ViewFactory {\n  static build(programId, idlIx, simulateFn, idl) {\n    const isWritable = idlIx.accounts.find(a => a.writable);\n    const hasReturn = !!idlIx.returns;\n    if (isWritable || !hasReturn) return;\n    const view = async (...args) => {\n      let simulationResult = await simulateFn(...args);\n      const returnPrefix = `Program return: ${programId} `;\n      let returnLog = simulationResult.raw.find(l => l.startsWith(returnPrefix));\n      if (!returnLog) {\n        throw new Error(\"View expected return log\");\n      }\n      let returnData = decode(returnLog.slice(returnPrefix.length));\n      let returnType = idlIx.returns;\n      if (!returnType) {\n        throw new Error(\"View expected return type\");\n      }\n      const coder = IdlCoder.fieldLayout({\n        type: returnType\n      }, idl.types);\n      return coder.decode(returnData);\n    };\n    return view;\n  }\n}\nclass NamespaceFactory {\n  /**\n   * Generates all namespaces for a given program.\n   */\n  static build(idl, coder, programId, provider, getCustomResolver) {\n    const rpc = {};\n    const instruction = {};\n    const transaction = {};\n    const simulate = {};\n    const methods = {};\n    const view = {};\n    const idlErrors = parseIdlErrors(idl);\n    const account = idl.accounts ? AccountFactory.build(idl, coder, programId, provider) : {};\n    idl.instructions.forEach(idlIx => {\n      const ixItem = InstructionNamespaceFactory.build(idlIx, (ixName, ix) => coder.instruction.encode(ixName, ix), programId);\n      const txItem = TransactionFactory.build(idlIx, ixItem);\n      const rpcItem = RpcFactory.build(idlIx, txItem, idlErrors, provider);\n      const simulateItem = SimulateFactory.build(idlIx, txItem, idlErrors, provider, coder, programId, idl);\n      const viewItem = ViewFactory.build(programId, idlIx, simulateItem, idl);\n      const methodItem = MethodsBuilderFactory.build(provider, programId, idlIx, ixItem, txItem, rpcItem, simulateItem, viewItem, account, idl.types || [], getCustomResolver === null || getCustomResolver === void 0 ? void 0 : getCustomResolver(idlIx));\n      const name = idlIx.name;\n      instruction[name] = ixItem;\n      transaction[name] = txItem;\n      rpc[name] = rpcItem;\n      simulate[name] = simulateItem;\n      methods[name] = methodItem;\n      if (viewItem) {\n        view[name] = viewItem;\n      }\n    });\n    return [rpc, instruction, transaction, account, simulate, methods, view];\n  }\n}\n\n/**\n * ## Program\n *\n * Program provides the IDL deserialized client representation of an Anchor\n * program.\n *\n * This API is the one stop shop for all things related to communicating with\n * on-chain programs. Among other things, one can send transactions, fetch\n * deserialized accounts, decode instruction data, subscribe to account\n * changes, and listen to events.\n *\n * In addition to field accessors and methods, the object provides a set of\n * dynamically generated properties, also known as namespaces, that\n * map one-to-one to program methods and accounts. These namespaces generally\n *  can be used as follows:\n *\n * ## Usage\n *\n * ```javascript\n * program.<namespace>.<program-specific-method>\n * ```\n *\n * API specifics are namespace dependent. The examples used in the documentation\n * below will refer to the two counter examples found\n * [here](https://github.com/coral-xyz/anchor#examples).\n */\nclass Program {\n  /**\n   * Address of the program.\n   */\n  get programId() {\n    return this._programId;\n  }\n  /**\n   * IDL in camelCase format to work in TypeScript.\n   *\n   * See {@link rawIdl} field if you need the original IDL.\n   */\n  get idl() {\n    return this._idl;\n  }\n  /**\n   * Raw IDL i.e. the original IDL without camelCase conversion.\n   *\n   * See {@link idl} field if you need the camelCased version of the IDL.\n   */\n  get rawIdl() {\n    return this._rawIdl;\n  }\n  /**\n   * Coder for serializing requests.\n   */\n  get coder() {\n    return this._coder;\n  }\n  /**\n   * Wallet and network provider.\n   */\n  get provider() {\n    return this._provider;\n  }\n  /**\n   * @param idl       The interface definition.\n   * @param provider  The network and wallet context to use. If not provided\n   *                  then uses [[getProvider]].\n   * @param getCustomResolver A function that returns a custom account resolver\n   *                          for the given instruction. This is useful for resolving\n   *                          public keys of missing accounts when building instructions\n   */\n  constructor(idl, provider = getProvider(), coder, getCustomResolver) {\n    // Fields.\n    this._idl = convertIdlToCamelCase(idl);\n    this._rawIdl = idl;\n    this._provider = provider;\n    this._programId = translateAddress(idl.address);\n    this._coder = coder !== null && coder !== void 0 ? coder : new BorshCoder(this._idl);\n    this._events = new EventManager(this._programId, provider, this._coder);\n    // Dynamic namespaces.\n    const [rpc, instruction, transaction, account, simulate, methods, views] = NamespaceFactory.build(this._idl, this._coder, this._programId, provider, getCustomResolver);\n    this.rpc = rpc;\n    this.instruction = instruction;\n    this.transaction = transaction;\n    this.account = account;\n    this.simulate = simulate;\n    this.methods = methods;\n    this.views = views;\n  }\n  /**\n   * Generates a Program client by fetching the IDL from the network.\n   *\n   * In order to use this method, an IDL must have been previously initialized\n   * via the anchor CLI's `anchor idl init` command.\n   *\n   * @param programId The on-chain address of the program.\n   * @param provider  The network and wallet context.\n   */\n  static async at(address, provider) {\n    const programId = translateAddress(address);\n    const idl = await Program.fetchIdl(programId, provider);\n    if (!idl) {\n      throw new Error(`IDL not found for program: ${address.toString()}`);\n    }\n    return new Program(idl, provider);\n  }\n  /**\n   * Fetches an idl from the blockchain.\n   *\n   * In order to use this method, an IDL must have been previously initialized\n   * via the anchor CLI's `anchor idl init` command.\n   *\n   * @param programId The on-chain address of the program.\n   * @param provider  The network and wallet context.\n   */\n  static async fetchIdl(address, provider) {\n    provider = provider !== null && provider !== void 0 ? provider : getProvider();\n    const programId = translateAddress(address);\n    const idlAddr = await idlAddress(programId);\n    const accountInfo = await provider.connection.getAccountInfo(idlAddr);\n    if (!accountInfo) {\n      return null;\n    }\n    // Chop off account discriminator.\n    let idlAccount = decodeIdlAccount(accountInfo.data.slice(8));\n    const inflatedIdl = inflate(idlAccount.data);\n    return JSON.parse(decode$2(inflatedIdl));\n  }\n  /**\n   * Invokes the given callback every time the given event is emitted.\n   *\n   * @param eventName The PascalCase name of the event, provided by the IDL.\n   * @param callback  The function to invoke whenever the event is emitted from\n   *                  program logs.\n   */\n  addEventListener(eventName, callback, commitment) {\n    return this._events.addEventListener(eventName, callback, commitment);\n  }\n  /**\n   * Unsubscribes from the given eventName.\n   */\n  async removeEventListener(listener) {\n    return await this._events.removeEventListener(listener);\n  }\n}\nnew PublicKey(\"11111111111111111111111111111111\");\nfunction program(provider) {\n  return new Program(IDL, provider, coder());\n}\nfunction coder() {\n  return new SystemCoder(IDL);\n}\nconst IDL = {\n  address: \"11111111111111111111111111111111\",\n  metadata: {\n    name: \"systemProgram\",\n    version: \"0.1.0\",\n    spec: \"0.1.0\"\n  },\n  instructions: [{\n    name: \"advanceNonceAccount\",\n    discriminator: [4, 0, 0, 0],\n    accounts: [{\n      name: \"nonce\",\n      writable: true\n    }, {\n      name: \"recentBlockhashes\"\n    }, {\n      name: \"authorized\",\n      signer: true\n    }],\n    args: [{\n      name: \"authorized\",\n      type: \"pubkey\"\n    }]\n  }, {\n    name: \"allocate\",\n    discriminator: [8, 0, 0, 0],\n    accounts: [{\n      name: \"pubkey\",\n      writable: true,\n      signer: true\n    }],\n    args: [{\n      name: \"space\",\n      type: \"u64\"\n    }]\n  }, {\n    name: \"allocateWithSeed\",\n    discriminator: [9, 0, 0, 0],\n    accounts: [{\n      name: \"account\",\n      writable: true\n    }, {\n      name: \"base\",\n      signer: true\n    }],\n    args: [{\n      name: \"base\",\n      type: \"pubkey\"\n    }, {\n      name: \"seed\",\n      type: \"string\"\n    }, {\n      name: \"space\",\n      type: \"u64\"\n    }, {\n      name: \"owner\",\n      type: \"pubkey\"\n    }]\n  }, {\n    name: \"assign\",\n    discriminator: [1, 0, 0, 0],\n    accounts: [{\n      name: \"pubkey\",\n      writable: true,\n      signer: true\n    }],\n    args: [{\n      name: \"owner\",\n      type: \"pubkey\"\n    }]\n  }, {\n    name: \"assignWithSeed\",\n    discriminator: [10, 0, 0, 0],\n    accounts: [{\n      name: \"account\",\n      writable: true\n    }, {\n      name: \"base\",\n      signer: true\n    }],\n    args: [{\n      name: \"base\",\n      type: \"pubkey\"\n    }, {\n      name: \"seed\",\n      type: \"string\"\n    }, {\n      name: \"owner\",\n      type: \"pubkey\"\n    }]\n  }, {\n    name: \"authorizeNonceAccount\",\n    discriminator: [7, 0, 0, 0],\n    accounts: [{\n      name: \"nonce\",\n      writable: true\n    }, {\n      name: \"authorized\",\n      signer: true\n    }],\n    args: [{\n      name: \"authorized\",\n      type: \"pubkey\"\n    }]\n  }, {\n    name: \"createAccount\",\n    discriminator: [0, 0, 0, 0],\n    accounts: [{\n      name: \"from\",\n      writable: true,\n      signer: true\n    }, {\n      name: \"to\",\n      writable: true,\n      signer: true\n    }],\n    args: [{\n      name: \"lamports\",\n      type: \"u64\"\n    }, {\n      name: \"space\",\n      type: \"u64\"\n    }, {\n      name: \"owner\",\n      type: \"pubkey\"\n    }]\n  }, {\n    name: \"createAccountWithSeed\",\n    discriminator: [3, 0, 0, 0],\n    accounts: [{\n      name: \"from\",\n      writable: true,\n      signer: true\n    }, {\n      name: \"to\",\n      writable: true\n    }, {\n      name: \"base\",\n      signer: true\n    }],\n    args: [{\n      name: \"base\",\n      type: \"pubkey\"\n    }, {\n      name: \"seed\",\n      type: \"string\"\n    }, {\n      name: \"lamports\",\n      type: \"u64\"\n    }, {\n      name: \"space\",\n      type: \"u64\"\n    }, {\n      name: \"owner\",\n      type: \"pubkey\"\n    }]\n  }, {\n    name: \"initializeNonceAccount\",\n    discriminator: [6, 0, 0, 0],\n    accounts: [{\n      name: \"nonce\",\n      writable: true,\n      signer: true\n    }, {\n      name: \"recentBlockhashes\"\n    }, {\n      name: \"rent\",\n      address: \"SysvarRent111111111111111111111111111111111\"\n    }],\n    args: [{\n      name: \"authorized\",\n      type: \"pubkey\"\n    }]\n  }, {\n    name: \"transfer\",\n    discriminator: [2, 0, 0, 0],\n    accounts: [{\n      name: \"from\",\n      writable: true,\n      signer: true\n    }, {\n      name: \"to\",\n      writable: true\n    }],\n    args: [{\n      name: \"lamports\",\n      type: \"u64\"\n    }]\n  }, {\n    name: \"transferWithSeed\",\n    discriminator: [11, 0, 0, 0],\n    accounts: [{\n      name: \"from\",\n      writable: true\n    }, {\n      name: \"base\",\n      signer: true\n    }, {\n      name: \"to\",\n      writable: true\n    }],\n    args: [{\n      name: \"lamports\",\n      type: \"u64\"\n    }, {\n      name: \"seed\",\n      type: \"string\"\n    }, {\n      name: \"owner\",\n      type: \"pubkey\"\n    }]\n  }, {\n    name: \"withdrawNonceAccount\",\n    discriminator: [5, 0, 0, 0],\n    accounts: [{\n      name: \"nonce\",\n      writable: true\n    }, {\n      name: \"to\",\n      writable: true\n    }, {\n      name: \"recentBlockhashes\"\n    }, {\n      name: \"rent\",\n      address: \"SysvarRent111111111111111111111111111111111\"\n    }, {\n      name: \"authorized\",\n      signer: true\n    }],\n    args: [{\n      name: \"lamports\",\n      type: \"u64\"\n    }]\n  }],\n  accounts: [{\n    name: \"nonce\",\n    discriminator: []\n  }],\n  types: [{\n    name: \"feeCalculator\",\n    type: {\n      kind: \"struct\",\n      fields: [{\n        name: \"lamportsPerSignature\",\n        type: \"u64\"\n      }]\n    }\n  }, {\n    name: \"nonce\",\n    type: {\n      kind: \"struct\",\n      fields: [{\n        name: \"version\",\n        type: \"u32\"\n      }, {\n        name: \"state\",\n        type: \"u32\"\n      }, {\n        name: \"authorizedPubkey\",\n        type: \"pubkey\"\n      }, {\n        name: \"nonce\",\n        type: \"pubkey\"\n      }, {\n        name: \"feeCalculator\",\n        type: {\n          defined: {\n            name: \"feeCalculator\"\n          }\n        }\n      }]\n    }\n  }]\n};\nclass Native {\n  static system(provider) {\n    return program(provider);\n  }\n}\nexport { AccountClient, AnchorError, AnchorProvider, BorshAccountsCoder, BorshCoder, BorshEventCoder, BorshInstructionCoder, EventManager, EventParser, IdlError, LangErrorCode, LangErrorMessage, MethodsBuilderFactory, Native, Program, ProgramError, ProgramErrorStack, SystemCoder, getProvider, parseIdlErrors, setProvider, splitArgsAndCtx, toInstruction, translateAddress, translateError, index as utils, validateAccounts };","map":{"version":3,"names":["chunks","array","size","Array","apply","Math","ceil","length","map","_","index","slice","isVersionedTransaction","tx","encode$3","encode","data","reduce","str","byte","toString","padStart","decode$3","decode","indexOf","substr","key","match","Buffer$1","from","parseInt","decode$2","decoder","TextDecoder","encode$2","input","encoder","TextEncoder","encode$1","bs58$1","decode$1","isCompositeAccounts","accountItem","idlAddress","programId","base","PublicKey","findProgramAddress","createWithSeed","seed","IDL_ACCOUNT_LAYOUT","borsh","struct","publicKey","vecU8","decodeIdlAccount","convertIdlToCamelCase","idl","KEYS_TO_CONVERT","toCamelCase","s","split","camelCase","join","recursivelyConvertNamesToCamelCase","obj","val","includes","isArray","camelCasedIdl","structuredClone","handleDefinedFields","fields","unitCb","namedCb","tupleCb","name","parseIdlErrors","errors","Map","forEach","e","msg","_a","set","code","toInstruction","idlIx","args","Error","ix","idx","ixArg","validateAccounts","ixAccounts","accounts","acc","translateAddress","address","StructError","TypeError","constructor","failure","failures","cached","message","rest","path","value","type","refinement","branch","Object","assign","_cached","isIterable","x","isObject","Symbol","iterator","print","JSON","stringify","shiftIterator","done","next","undefined","toFailure","result","context","toFailures","r","run","options","coerce","mask","ctx","coercer","schema","valid","validator","k","v","entries","ts","t","Set","add","refiner","Struct","props","TYPE","assert","create","is","validate","tuples","tuple","error","define","any","Element","i","boolean","literal","constant","description","nullable","number","isNaN","optional","string","keys","union$1","union","Structs","firstMatch","find","unknown","S","first","push","condition","invoke","provider","getProvider","Transaction","TransactionInstruction","sendAndConfirm","GET_MULTIPLE_ACCOUNTS_LIMIT","getMultipleAccounts","connection","publicKeys","commitment","results","getMultipleAccountsAndContext","account","getMultipleAccountsAndContextCore","batches","Promise","all","batch","flat","commitmentOverride","accountInfos","getMultipleAccountsInfoAndContext","simulateTransaction","transaction","signers","includeAccounts","sign","_compile","signData","serialize","wireTransaction","_serialize","encodedTransaction","config","encoding","addresses","nonProgramIds","toBase58","sigVerify","unsafeRes","_rpcRequest","res","SimulatedTransactionResponseStruct","logs","traceIndent","logTrace","console","SendTransactionError","jsonRpcResult","createRpcResult","UnknownRpcResult","jsonrpc","id","jsonRpcResultAndContext","slot","err","executable","owner","lamports","rentEpoch","unitsConsumed","AnchorProvider","wallet","opts","defaultOptions","preflightCommitment","local","url","env","feePayer","recentBlockhash","getLatestBlockhash","blockhash","signer","partialSign","signTransaction","rawTx","sendAndConfirmRawTransaction","ConfirmError","txSig","_b","signatures","Uint8Array","_c","signature","maxVer","failedTx","getTransaction","maxSupportedTransactionVersion","_d","meta","logMessages","sendAll","txWithSigners","txs","kp","signedTxs","signAllTransactions","sigs","simulate","SimulateError","simulationResponse","rawTransaction","sendOptions","skipPreflight","maxRetries","minContextSlot","status","startTime","Date","now","sendRawTransaction","abortSignal","AbortSignal","timeout","confirmTransaction","setProvider","_provider","defineProperty","dist","ANCHOR_ERROR__REQUIRE_EQ_VIOLATED","ANCHOR_ERROR__REQUIRE_VIOLATED","ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID","ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE","ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS","ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION","ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM","ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM","ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM","ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE","ANCHOR_ERROR__CONSTRAINT_SPACE","ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS","ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY","ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER","ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT","ANCHOR_ERROR__CONSTRAINT_ZERO","ANCHOR_ERROR__CONSTRAINT_ADDRESS","ANCHOR_ERROR__CONSTRAINT_CLOSE","ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT","ANCHOR_ERROR__CONSTRAINT_ASSOCIATED","ANCHOR_ERROR__CONSTRAINT_STATE","ANCHOR_ERROR__CONSTRAINT_EXECUTABLE","ANCHOR_ERROR__CONSTRAINT_SEEDS","ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT","ANCHOR_ERROR__CONSTRAINT_OWNER","ANCHOR_ERROR__CONSTRAINT_RAW","ANCHOR_ERROR__CONSTRAINT_SIGNER","ANCHOR_ERROR__CONSTRAINT_HAS_ONE","ANCHOR_ERROR__CONSTRAINT_MUT","ANCHOR_ERROR__EVENT_INSTRUCTION_STUB","ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY","ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM","ANCHOR_ERROR__IDL_INSTRUCTION_STUB","ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE","ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE","ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND","ANCHOR_ERROR__INSTRUCTION_MISSING","ANCHOR_ERROR__DEPRECATED","ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION","ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT","ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH","ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS","ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT","ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH","ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT","ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA","ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED","ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED","ANCHOR_ERROR__ACCOUNT_NOT_SIGNER","ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE","ANCHOR_ERROR__INVALID_PROGRAM_ID","ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM","ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE","ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS","ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE","ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE","ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH","ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND","ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET","ANCHOR_ERROR__REQUIRE_GTE_VIOLATED","ANCHOR_ERROR__REQUIRE_GT_VIOLATED","ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED","ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED","ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED","_AVAILABLE_FEATURES","_FEATURES","has","isSet","get","IdlError","ProgramErrorStack","stack","parse","programKeyRegex","successRegex","programStack","exec","pop","programKey","AnchorError","errorCode","errorMessage","errorLogs","origin","comparedValues","replace","_programErrorStack","anchorErrorLogIndex","findIndex","log","startsWith","anchorErrorLog","pubkeyRegex","leftPubkey","rightPubkey","valueRegex","leftValue","rightValue","regexNoInfo","noInfoAnchorErrorLog","regexFileLine","fileLineAnchorErrorLog","regexAccountName","accountNameAnchorErrorLog","errorCodeString","errorNumber","file","line","fileLine","accountName","program","programErrorStack","ProgramError","idlErrors","errString","unparsedErrorCode","components","matches","parseErr","errorMsg","LangErrorMessage","translateError","anchorError","programError","handler","target","prop","Reflect","arguments","Proxy","LangErrorCode","InstructionMissing","InstructionFallbackNotFound","InstructionDidNotDeserialize","InstructionDidNotSerialize","IdlInstructionStub","IdlInstructionInvalidProgram","IdlAccountNotEmpty","EventInstructionStub","ConstraintMut","ConstraintHasOne","ConstraintSigner","ConstraintRaw","ConstraintOwner","ConstraintRentExempt","ConstraintSeeds","ConstraintExecutable","ConstraintState","ConstraintAssociated","ConstraintAssociatedInit","ConstraintClose","ConstraintAddress","ConstraintZero","ConstraintTokenMint","ConstraintTokenOwner","ConstraintMintMintAuthority","ConstraintMintFreezeAuthority","ConstraintMintDecimals","ConstraintSpace","ConstraintAccountIsNone","ConstraintTokenTokenProgram","ConstraintMintTokenProgram","ConstraintAssociatedTokenTokenProgram","ConstraintMintGroupPointerExtension","ConstraintMintGroupPointerExtensionAuthority","ConstraintMintGroupPointerExtensionGroupAddress","ConstraintMintGroupMemberPointerExtension","ConstraintMintGroupMemberPointerExtensionAuthority","ConstraintMintGroupMemberPointerExtensionMemberAddress","ConstraintMintMetadataPointerExtension","ConstraintMintMetadataPointerExtensionAuthority","ConstraintMintMetadataPointerExtensionMetadataAddress","ConstraintMintCloseAuthorityExtension","ConstraintMintCloseAuthorityExtensionAuthority","ConstraintMintPermanentDelegateExtension","ConstraintMintPermanentDelegateExtensionDelegate","ConstraintMintTransferHookExtension","ConstraintMintTransferHookExtensionAuthority","ConstraintMintTransferHookExtensionProgramId","RequireViolated","RequireEqViolated","RequireKeysEqViolated","RequireNeqViolated","RequireKeysNeqViolated","RequireGtViolated","RequireGteViolated","AccountDiscriminatorAlreadySet","AccountDiscriminatorNotFound","AccountDiscriminatorMismatch","AccountDidNotDeserialize","AccountDidNotSerialize","AccountNotEnoughKeys","AccountNotMutable","AccountOwnedByWrongProgram","InvalidProgramId","InvalidProgramExecutable","AccountNotSigner","AccountNotSystemOwned","AccountNotInitialized","AccountNotProgramData","AccountNotAssociatedTokenAccount","AccountSysvarMismatch","AccountReallocExceedsLimit","AccountDuplicateReallocs","DeclaredProgramIdMismatch","TryingToInitPayerAsProgramAccount","InvalidNumericConversion","Deprecated","IdlCoder","fieldLayout","field","types","genericArgs","fieldName","bool","u8","i8","u16","i16","u32","i32","f32","u64","i64","f64","u128","i128","u256","i256","option","vec","len","resolveArrayLen","definedName","defined","typeDef","typeDefLayout","generics","genericArg","at","kind","fieldLayouts","f","genArgs","resolveGenericArgs","variants","variant","rustEnum","replicate","alias","typeSize","ty","coption","variantSizes","max","generic","genericLen","g","isDefined","defGeneric","elTy","isGenericLen","curIndex","arg","flatMap","filter","BorshInstructionCoder","ixLayouts","instructions","layout","discriminator","ixName","buffer","alloc","concat","givenDisc","subarray","equals","format","accountMetas","InstructionFormatter","idlField","formatIdlType","formatIdlData","flatIdlAccounts","flattenIdlAccounts","idlType","d","formatIdlDataDefined","variantName","enumValue","namedFields","fieldData","tupleFields","prefix","accName","sentenceCase","hasOwnProperty","newPrefix","charAt","toUpperCase","BorshAccountsCoder","accountLayouts","layouts","accountData","accountDiscriminator","compare","decodeUnchecked","decodeAny","memcmp","appendData","offset","bytes","BorshEventCoder","events","ev","logArr","BorshTypesCoder","typeLayouts","BorshCoder","instruction","Layout","span","property","Number","isInteger","makeDestinationObject","b","src","getSpan","RangeError","rv","prototype","fromArray","values","Layout_2","nameWithProperty","lo","ExternalLayout","isCount","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","V2E32","pow","divmodInt64","hi32","floor","lo32","roundedInt64","NearUInt64","readUInt32LE","writeUInt32LE","NearInt64","readInt32LE","writeInt32LE","Structure","decodePrefixes","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","VariantLayout","vb","Buffer","isBuffer","Blob$1","write","nu64","ns64","blob","SystemInstructionCoder","encodeCreateAccount","encodeAssign","encodeTransfer","encodeCreateAccountWithSeed","encodeAdvanceNonceAccount","encodeWithdrawNonceAccount","encodeInitializeNonceAccount","encodeAuthorizeNonceAccount","encodeAllocate","encodeAllocateWithSeed","encodeAssignWithSeed","encodeTransferWithSeed","encodeState","_ixName","_ix","RustStringLayout","chars","BN","toNumber","rustStringLayout","publicKey$2","space","encodeData","createAccount","toBuffer","transfer","createAccountWithSeed","LAYOUT","authorized","initializeNonceAccount","advanceNonceAccount","withdrawNonceAccount","authorizeNonceAccount","allocate","allocateWithSeed","assignWithSeed","transferWithSeed","maxSpan","instructionMaxSpan","SystemAccountsCoder","NONCE_ACCOUNT_LENGTH","NONCE_ACCOUNT_LAYOUT","decodeNonceAccount","_appendData","dataSize","WrappedLayout$1","publicKey$1","SystemEventsCoder","_idl","_log","SystemTypesCoder","_name","_type","_typeData","SystemCoder","hash","sha256$1","createWithSeedSync","fromPublicKey","TOKEN_PROGRAM_ID","ASSOCIATED_PROGRAM_ID","associatedAddress","mint","findProgramAddressSync","global","self","commonjsGlobal","__self__","F","fetch","DOMException","exports","support","searchParams","iterable","Blob","formData","arrayBuffer","isDataView","DataView","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","call","normalizeName","String","test","toLowerCase","normalizeValue","iteratorFor","items","Headers","headers","append","header","getOwnPropertyNames","oldValue","callback","thisArg","consumed","body","bodyUsed","reject","fileReaderReady","reader","resolve","onload","onerror","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","fromCharCode","bufferClone","byteLength","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","then","text","json","methods","normalizeMethod","method","upcased","Request","credentials","mode","signal","referrer","clone","form","trim","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","parts","Response","bodyInit","ok","statusText","response","redirectStatuses","redirect","location","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","default","module","verifiedBuild","limit","programData","latestBuildsResp","fetchData","latestBuilds","state","verified","build","verified_slot","accountInfo","getAccountInfo","decodeUpgradeableLoaderState","programdataAccountInfo","programdataAddress","UPGRADEABLE_LOADER_STATE_LAYOUT","PROGRAM_LOG","PROGRAM_DATA","PROGRAM_LOG_START_INDEX","PROGRAM_DATA_START_INDEX","EventManager","coder","_programId","_eventParser","EventParser","_eventCallbacks","_eventListeners","_listenerIdCount","eventName","listener","_onLogsSubscriptionId","onLogs","event","parseLogs","allListeners","listenerCb","listeners","delete","l","removeOnLogsListener","errorOnDecodeFailure","logScanner","LogScanner","execution","ExecutionContext","newProgram","didPop","handleLog","handleProgramLog","handleSystemLog","logStr","logStart","splitArgsAndCtx","inputLen","a","InstructionNamespaceFactory","encodeFn","ixArgs","validateInstruction","remainingAccounts","accs","accountsArray","rpcAccs","pubkey","isOptional","isWritable","Boolean","writable","isSigner","TransactionFactory","ixFn","txFn","preInstructions","postInstructions","RpcFactory","rpc","AccountFactory","accountFns","AccountClient","_size","_coder","idlAccount","_idlAccount","fetchNullable","fetchNullableAndContext","getAccountInfoAndContext","fetchAndContext","fetchMultiple","fetchMultipleAndContext","filters","coderFilters","resp","getProgramAccounts","subscribe","sub","subscriptions","ee","EventEmitter","onAccountChange","emit","unsubscribe","warn","removeAccountChangeListener","catch","createInstruction","sizeOverride","SystemProgram","fromPubkey","newAccountPubkey","getMinimumBalanceForRentExemption","SimulateFactory","parser","raw","uint64","WrappedLayout","fromBuffer","n","COptionLayout","toArray","reverse","zeroPad","copy","TOKEN_ACCOUNT_LAYOUT","p","U","decodeTokenAccount","AccountsResolver","_args","_accounts","_idlIx","accountNamespace","_idlTypes","_customResolver","_accountStore","AccountStore","resolveEventCpi","resolveConst","depth","resolvePdasAndRelations","resolveCustom","isResolvable","pda","relations","some","getPaths","paths","resolvableAccs","unresolvedAccs","resolveOptionals","resolveOptionalsHelper","ret","subPath","cur","isLast","partialAccounts","nestedAccountsGeneric","partialAccount","isPartialAccounts","flattenPartialAccounts","resolved","accountOrAccounts","nextIndex","currentName","nextName","currentPath","nextPath","found","seeds","parseProgramId","accountKey","fetchAccount","toBufferConst","toBufferArg","toBufferAccount","toBufferValue","getType","fieldPubkey","accountValue","currentPaths","toArrayLike","typeName","definedType","_cache","_idls","getAccountsNs","accountNs","programIdStr","Program","fetchIdl","MethodsBuilderFactory","rpcFn","simulateFn","viewFn","idlTypes","customResolver","MethodsBuilder","throwOnNull","toReturn","_ixFn","_txFn","_rpcFn","_simulateFn","_viewFn","_remainingAccounts","_signers","_preInstructions","_postInstructions","_resolveAccounts","_accountsResolver","accountsPartial","accountsStrict","ixs","prepend","pubkeys","rpcAndKeys","prepare","ViewFactory","hasReturn","returns","simulationResult","returnPrefix","returnLog","returnData","returnType","NamespaceFactory","getCustomResolver","ixItem","txItem","rpcItem","simulateItem","viewItem","methodItem","rawIdl","_rawIdl","_events","views","idlAddr","inflatedIdl","inflate","IDL","metadata","version","spec","Native","system"],"sources":["../../../src/utils/common.ts","../../../src/utils/bytes/hex.ts","../../../src/utils/bytes/utf8.ts","../../../src/utils/bytes/bs58.ts","../../../src/utils/bytes/base64.ts","../../../src/idl.ts","../../../src/program/common.ts","/Users/aaryaupadhyay/umich-prediction-market/node_modules/node_modules/superstruct/lib/index.es.js","../../../src/utils/rpc.ts","../../../src/provider.ts","/Users/aaryaupadhyay/umich-prediction-market/node_modules/@coral-xyz/anchor-errors/dist/index.js","../../../src/utils/features.ts","../../../src/error.ts","../../../src/coder/borsh/idl.ts","../../../src/coder/borsh/instruction.ts","../../../src/coder/borsh/accounts.ts","../../../src/coder/borsh/event.ts","../../../src/coder/borsh/types.ts","../../../src/coder/borsh/index.ts","/Users/aaryaupadhyay/umich-prediction-market/node_modules/node_modules/buffer-layout/lib/Layout.js","../../../src/coder/system/instruction.ts","../../../src/coder/system/accounts.ts","../../../src/coder/system/events.ts","../../../src/coder/system/types.ts","../../../src/coder/system/index.ts","../../../src/utils/sha256.ts","../../../src/utils/pubkey.ts","../../../src/utils/token.ts","/Users/aaryaupadhyay/umich-prediction-market/node_modules/node_modules/cross-fetch/dist/browser-ponyfill.js","../../../src/utils/registry.ts","../../../src/program/event.ts","../../../src/program/context.ts","../../../src/program/namespace/instruction.ts","../../../src/program/namespace/transaction.ts","../../../src/program/namespace/rpc.ts","../../../src/program/namespace/account.ts","../../../src/program/namespace/simulate.ts","../../../src/program/token-account-layout.ts","../../../src/program/accounts-resolver.ts","../../../src/program/namespace/methods.ts","../../../src/program/namespace/views.ts","../../../src/program/namespace/index.ts","../../../src/program/index.ts","../../../src/native/system.ts","../../../src/native/index.ts"],"sourcesContent":["","","","","","","","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    this.value = void 0;\n    this.key = void 0;\n    this.type = void 0;\n    this.refinement = void 0;\n    this.path = void 0;\n    this.branch = void 0;\n    this.failures = void 0;\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    this.TYPE = void 0;\n    this.type = void 0;\n    this.schema = void 0;\n    this.coercer = void 0;\n    this.validator = void 0;\n    this.refiner = void 0;\n    this.entries = void 0;\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign() {\n  for (var _len = arguments.length, Structs = new Array(_len), _key = 0; _key < _len; _key++) {\n    Structs[_key] = arguments[_key];\n  }\n\n  const isType = Structs[0].type === 'type';\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    },\n\n    refiner(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.refiner(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    },\n\n    refiner(value, ctx) {\n      var _struct4;\n\n      (_struct4 = struct) != null ? _struct4 : struct = fn();\n      return struct.refiner(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  switch (struct.type) {\n    case 'type':\n      return type(subschema);\n\n    default:\n      return object(subschema);\n  }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a bigint.\n */\n\nfunction bigint() {\n  return define('bigint', value => {\n    return typeof value === 'bigint';\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nfunction tuple(Structs) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Structs.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Structs[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    coercer(value, ctx) {\n      const firstMatch = Structs.find(s => {\n        const [e] = s.validate(value, {\n          coerce: true\n        });\n        return !e;\n      }) || unknown();\n      return firstMatch.coercer(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  return refine(struct, 'empty', value => {\n    const size = getSize(value);\n    return size === 0 || \"Expected an empty \" + struct.type + \" but received one with a size of `\" + size + \"`\";\n  });\n}\n\nfunction getSize(value) {\n  if (value instanceof Map || value instanceof Set) {\n    return value.size;\n  } else {\n    return value.length;\n  }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\n\nfunction max(struct, threshold, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" less than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\n\nfunction nonempty(struct) {\n  return refine(struct, 'nonempty', value => {\n    const size = getSize(value);\n    return size > 0 || \"Expected a nonempty \" + struct.type + \" but received an empty one\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max) {\n  if (max === void 0) {\n    max = min;\n  }\n\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","","","\"use strict\";\n// Instruction errors.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_VIOLATED = exports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = exports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = exports.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = exports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = exports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = exports.ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = exports.ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = exports.ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = exports.ANCHOR_ERROR__CONSTRAINT_SPACE = exports.ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = exports.ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = exports.ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = exports.ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = exports.ANCHOR_ERROR__CONSTRAINT_ZERO = exports.ANCHOR_ERROR__CONSTRAINT_ADDRESS = exports.ANCHOR_ERROR__CONSTRAINT_CLOSE = exports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = exports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = exports.ANCHOR_ERROR__CONSTRAINT_STATE = exports.ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = exports.ANCHOR_ERROR__CONSTRAINT_SEEDS = exports.ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = exports.ANCHOR_ERROR__CONSTRAINT_OWNER = exports.ANCHOR_ERROR__CONSTRAINT_RAW = exports.ANCHOR_ERROR__CONSTRAINT_SIGNER = exports.ANCHOR_ERROR__CONSTRAINT_HAS_ONE = exports.ANCHOR_ERROR__CONSTRAINT_MUT = exports.ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = exports.ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = exports.ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = exports.ANCHOR_ERROR__IDL_INSTRUCTION_STUB = exports.ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = exports.ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = exports.ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = exports.ANCHOR_ERROR__INSTRUCTION_MISSING = void 0;\nexports.ANCHOR_ERROR__DEPRECATED = exports.ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = exports.ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = exports.ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = exports.ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = exports.ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = exports.ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = exports.ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = exports.ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = exports.ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = exports.ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = exports.ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = exports.ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = exports.ANCHOR_ERROR__INVALID_PROGRAM_ID = exports.ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = exports.ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = exports.ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = exports.ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = exports.ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = exports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = exports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = exports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = exports.ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_GT_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = exports.ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = void 0;\n/** 8 byte instruction identifier not provided. */\nexports.ANCHOR_ERROR__INSTRUCTION_MISSING = 100;\n/** Fallback functions are not supported. */\nexports.ANCHOR_ERROR__INSTRUCTION_FALLBACK_NOT_FOUND = 101;\n/** The program could not deserialize the given instruction. */\nexports.ANCHOR_ERROR__INSTRUCTION_DID_NOT_DESERIALIZE = 102;\n/** The program could not serialize the given instruction. */\nexports.ANCHOR_ERROR__INSTRUCTION_DID_NOT_SERIALIZE = 103;\n// IDL instruction errors.\n/** The program was compiled without idl instructions. */\nexports.ANCHOR_ERROR__IDL_INSTRUCTION_STUB = 1000;\n/** The transaction was given an invalid program for the IDL instruction. */\nexports.ANCHOR_ERROR__IDL_INSTRUCTION_INVALID_PROGRAM = 1001;\n/** IDL account must be empty in order to resize, try closing first. */\nexports.ANCHOR_ERROR__IDL_ACCOUNT_NOT_EMPTY = 1002;\n// Event instructions.\n/** The program was compiled without `event-cpi` feature. */\nexports.ANCHOR_ERROR__EVENT_INSTRUCTION_STUB = 1500;\n// Constraint errors.\n/** A mut constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MUT = 2000;\n/** A has one constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_HAS_ONE = 2001;\n/** A signer constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_SIGNER = 2002;\n/** A raw constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_RAW = 2003;\n/** An owner constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_OWNER = 2004;\n/** A rent exemption constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_RENT_EXEMPT = 2005;\n/** A seeds constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_SEEDS = 2006;\n/** An executable constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_EXECUTABLE = 2007;\n/** Deprecated Error, feel free to replace with something else. */\nexports.ANCHOR_ERROR__CONSTRAINT_STATE = 2008;\n/** An associated constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED = 2009;\n/** An associated init constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_INIT = 2010;\n/** A close constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_CLOSE = 2011;\n/** An address constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_ADDRESS = 2012;\n/** Expected zero account discriminant. */\nexports.ANCHOR_ERROR__CONSTRAINT_ZERO = 2013;\n/** A token mint constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_TOKEN_MINT = 2014;\n/** A token owner constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_TOKEN_OWNER = 2015;\n/** A mint mint authority constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_MINT_AUTHORITY = 2016;\n/** A mint freeze authority constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_FREEZE_AUTHORITY = 2017;\n/** A mint decimals constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_DECIMALS = 2018;\n/** A space constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_SPACE = 2019;\n/** A required account for the constraint is None. */\nexports.ANCHOR_ERROR__CONSTRAINT_ACCOUNT_IS_NONE = 2020;\n/** A token account token program constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_TOKEN_TOKEN_PROGRAM = 2021;\n/** A mint token program constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_TOKEN_PROGRAM = 2022;\n/** An associated token account token program constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_ASSOCIATED_TOKEN_TOKEN_PROGRAM = 2023;\n/** A group pointer extension constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION = 2024;\n/** A group pointer extension authority constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_AUTHORITY = 2025;\n/** A group pointer extension group address constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_POINTER_EXTENSION_GROUP_ADDRESS = 2026;\n/** A group member pointer extension constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION = 2027;\n/** A group member pointer extension authority constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_AUTHORITY = 2028;\n/** A group member pointer extension group address constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_GROUP_MEMBER_POINTER_EXTENSION_MEMBER_ADDRESS = 2029;\n/** A metadata pointer extension constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION = 2030;\n/** A metadata pointer extension authority constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_AUTHORITY = 2031;\n/** A metadata pointer extension metadata address constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_METADATA_POINTER_EXTENSION_METADATA_ADDRESS = 2032;\n/** A close authority constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION = 2033;\n/** A close authority extension authority constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_CLOSE_AUTHORITY_EXTENSION_AUTHORITY = 2034;\n/** A permanent delegate extension constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION = 2035;\n/** A permanent delegate extension delegate constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_PERMANENT_DELEGATE_EXTENSION_DELEGATE = 2036;\n/** A transfer hook extension constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION = 2037;\n/** A transfer hook extension authority constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_AUTHORITY = 2038;\n/** A transfer hook extension transfer hook program id constraint was violated. */\nexports.ANCHOR_ERROR__CONSTRAINT_MINT_TRANSFER_HOOK_EXTENSION_PROGRAM_ID = 2039;\n// Require errors.\n/** A require expression was violated. */\nexports.ANCHOR_ERROR__REQUIRE_VIOLATED = 2500;\n/** A require_eq expression was violated. */\nexports.ANCHOR_ERROR__REQUIRE_EQ_VIOLATED = 2501;\n/** A require_keys_eq expression was violated. */\nexports.ANCHOR_ERROR__REQUIRE_KEYS_EQ_VIOLATED = 2502;\n/** A require_neq expression was violated. */\nexports.ANCHOR_ERROR__REQUIRE_NEQ_VIOLATED = 2503;\n/** A require_keys_neq expression was violated. */\nexports.ANCHOR_ERROR__REQUIRE_KEYS_NEQ_VIOLATED = 2504;\n/** A require_gt expression was violated. */\nexports.ANCHOR_ERROR__REQUIRE_GT_VIOLATED = 2505;\n/** A require_gte expression was violated. */\nexports.ANCHOR_ERROR__REQUIRE_GTE_VIOLATED = 2506;\n// Account errors.\n/** The account discriminator was already set on this account. */\nexports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_ALREADY_SET = 3000;\n/** No 8 byte discriminator was found on the account. */\nexports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_NOT_FOUND = 3001;\n/** 8 byte discriminator did not match what was expected. */\nexports.ANCHOR_ERROR__ACCOUNT_DISCRIMINATOR_MISMATCH = 3002;\n/** Failed to deserialize the account. */\nexports.ANCHOR_ERROR__ACCOUNT_DID_NOT_DESERIALIZE = 3003;\n/** Failed to serialize the account. */\nexports.ANCHOR_ERROR__ACCOUNT_DID_NOT_SERIALIZE = 3004;\n/** Not enough account keys given to the instruction. */\nexports.ANCHOR_ERROR__ACCOUNT_NOT_ENOUGH_KEYS = 3005;\n/** The given account is not mutable. */\nexports.ANCHOR_ERROR__ACCOUNT_NOT_MUTABLE = 3006;\n/** The given account is owned by a different program than expected. */\nexports.ANCHOR_ERROR__ACCOUNT_OWNED_BY_WRONG_PROGRAM = 3007;\n/** Program ID was not as expected. */\nexports.ANCHOR_ERROR__INVALID_PROGRAM_ID = 3008;\n/** Program account is not executable. */\nexports.ANCHOR_ERROR__INVALID_PROGRAM_EXECUTABLE = 3009;\n/** The given account did not sign. */\nexports.ANCHOR_ERROR__ACCOUNT_NOT_SIGNER = 3010;\n/** The given account is not owned by the system program. */\nexports.ANCHOR_ERROR__ACCOUNT_NOT_SYSTEM_OWNED = 3011;\n/** The program expected this account to be already initialized. */\nexports.ANCHOR_ERROR__ACCOUNT_NOT_INITIALIZED = 3012;\n/** The given account is not a program data account. */\nexports.ANCHOR_ERROR__ACCOUNT_NOT_PROGRAM_DATA = 3013;\n/** The given account is not the associated token account. */\nexports.ANCHOR_ERROR__ACCOUNT_NOT_ASSOCIATED_TOKEN_ACCOUNT = 3014;\n/** The given public key does not match the required sysvar. */\nexports.ANCHOR_ERROR__ACCOUNT_SYSVAR_MISMATCH = 3015;\n/** The account reallocation exceeds the MAX_PERMITTED_DATA_INCREASE limit. */\nexports.ANCHOR_ERROR__ACCOUNT_REALLOC_EXCEEDS_LIMIT = 3016;\n/** The account was duplicated for more than one reallocation. */\nexports.ANCHOR_ERROR__ACCOUNT_DUPLICATE_REALLOCS = 3017;\n// Miscellaneous errors.\n/** The declared program id does not match the actual program id. */\nexports.ANCHOR_ERROR__DECLARED_PROGRAM_ID_MISMATCH = 4100;\n/** You cannot/should not initialize the payer account as a program account. */\nexports.ANCHOR_ERROR__TRYING_TO_INIT_PAYER_AS_PROGRAM_ACCOUNT = 4101;\n/** The program could not perform the numeric conversion, out of range integral type conversion attempted. */\nexports.ANCHOR_ERROR__INVALID_NUMERIC_CONVERSION = 4102;\n// Deprecated errors.\n/** The API being used is deprecated and should no longer be used. */\nexports.ANCHOR_ERROR__DEPRECATED = 5000;\n//# sourceMappingURL=index.js.map","","","","","","","","","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","","","","","","","","","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","","","","","","","","","","","","","","","",""],"mappings":";;;;;;;;;;;;;AAUA;;;;;;AAMG;AACa,SAAAA,MAAMA,CAAIC,KAAU,EAAEC,IAAY;EAChD,OAAOC,KAAK,CAACC,KAAK,CAAC,CAAC,EAAE,IAAID,KAAK,CAACE,IAAI,CAACC,IAAI,CAACL,KAAK,CAACM,MAAM,GAAGL,IAAI,CAAC,CAAC,CAAC,CAACM,GAAG,CAClE,CAACC,CAAC,EAAEC,KAAK,KAAKT,KAAK,CAACU,KAAK,CAACD,KAAK,GAAGR,IAAI,EAAE,CAACQ,KAAK,GAAG,CAAC,IAAIR,IAAI,CAAC,CAC5D;AACH;AAEA;;;;;AAKG;AACI,MAAMU,sBAAsB,GACjCC,EAAsC,IACR;EAC9B,OAAO,SAAS,IAAIA,EAAE;AACxB,CAAC;AC/BK,SAAUC,QAAMC,CAACC,IAAY;EACjC,OAAOA,IAAI,CAACC,MAAM,CAChB,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACvD,IAAI,CACL;AACH;AAEM,SAAUC,QAAMC,CAACP,IAAY;EACjC,IAAIA,IAAI,CAACQ,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IAC5BR,IAAI,GAAGA,IAAI,CAACS,MAAM,CAAC,CAAC,CAAC;;EAEvB,IAAIT,IAAI,CAACT,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IACzBS,IAAI,GAAG,GAAG,GAAGA,IAAI;;EAGnB,IAAIU,GAAG,GAAGV,IAAI,CAACW,KAAK,CAAC,OAAO,CAAC;EAE7B,IAAID,GAAG,KAAK,IAAI,EAAE;IAChB,OAAOE,QAAM,CAACC,IAAI,CAAC,EAAE,CAAC;;EAGxB,OAAOD,QAAM,CAACC,IAAI,CAACH,GAAG,CAAClB,GAAG,CAAEW,IAAI,IAAKW,QAAQ,CAACX,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3D;;;;;;ACtBM,SAAUY,QAAMR,CAACtB,KAAiB;EACtC,MAAM+B,OAAO,GACT,IAAIC,WAAW,CAAC,OAAO,CAAC;EAAA,CACmB;EAE/C,OAAOD,OAAO,CAACT,MAAM,CAACtB,KAAK,CAAC;AAC9B;AAEM,SAAUiC,QAAMnB,CAACoB,KAAa;EAClC,MAAMC,OAAO,GACT,IAAIC,WAAW,EAAE;EAAA,CAC0B;EAC/C,OAAOD,OAAO,CAACrB,MAAM,CAACoB,KAAK,CAAC;AAC9B;;;;;;ACbM,SAAUG,QAAMvB,CAACC,IAAoC;EACzD,OAAOuB,MAAI,CAACxB,MAAM,CAACC,IAAI,CAAC;AAC1B;AAEM,SAAUwB,QAAMjB,CAACP,IAAY;EACjC,OAAOuB,MAAI,CAAChB,MAAM,CAACP,IAAI,CAAC;AAC1B;;;;;;ACNM,SAAUD,MAAMA,CAACC,IAAY;EACjC,OAAOA,IAAI,CAACI,QAAQ,CAAC,QAAQ,CAAC;AAChC;AAEM,SAAUG,MAAMA,CAACP,IAAY;EACjC,OAAOY,QAAM,CAACC,IAAI,CAACb,IAAI,EAAE,QAAQ,CAAC;AACpC;;;;;;;;;;;;;ACmQM,SAAUyB,mBAAmBA,CACjCC,WAAsC;EAEtC,OAAO,UAAU,IAAIA,WAAW;AAClC;AAEA;AACO,eAAeC,UAAUA,CAACC,SAAoB;EACnD,MAAMC,IAAI,GAAG,CAAC,MAAMC,SAAS,CAACC,kBAAkB,CAAC,EAAE,EAAEH,SAAS,CAAC,EAAE,CAAC,CAAC;EACnE,OAAO,MAAME,SAAS,CAACE,cAAc,CAACH,IAAI,EAAEI,IAAI,EAAE,EAAEL,SAAS,CAAC;AAChE;AAEA;SACgBK,IAAIA,CAAA;EAClB,OAAO,YAAY;AACrB;AAQA,MAAMC,kBAAkB,GAAoCC,KAAK,CAACC,MAAM,CAAC,CACvED,KAAK,CAACE,SAAS,CAAC,WAAW,CAAC,EAC5BF,KAAK,CAACG,KAAK,CAAC,MAAM,CAAC,CACpB,CAAC;AAEI,SAAUC,gBAAgBA,CAACvC,IAAY;EAC3C,OAAOkC,kBAAkB,CAAC3B,MAAM,CAACP,IAAI,CAAC;AACxC;AAQA;;;;;;;;;;;;AAYG;AACG,SAAUwC,qBAAqBA,CAAgBC,GAAM;EACzD,MAAMC,eAAe,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,CAAC;;;EAI3E,MAAMC,WAAW,GAAIC,CAAM,IAAKA,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACrD,GAAG,CAACsD,SAAS,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAErE,MAAMC,kCAAkC,GAAIC,GAAwB,IAAI;IACtE,KAAK,MAAMvC,GAAG,IAAIuC,GAAG,EAAE;MACrB,MAAMC,GAAG,GAAGD,GAAG,CAACvC,GAAG,CAAC;MACpB,IAAIgC,eAAe,CAACS,QAAQ,CAACzC,GAAG,CAAC,EAAE;QACjCuC,GAAG,CAACvC,GAAG,CAAC,GAAGvB,KAAK,CAACiE,OAAO,CAACF,GAAG,CAAC,GAAGA,GAAG,CAAC1D,GAAG,CAACmD,WAAW,CAAC,GAAGA,WAAW,CAACO,GAAG,CAAC;OACxE,MAAM,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;QAClCF,kCAAkC,CAACE,GAAG,CAAC;;;EAG7C,CAAC;EAED,MAAMG,aAAa,GAAGC,eAAe,CAACb,GAAG,CAAC;EAC1CO,kCAAkC,CAACK,aAAa,CAAC;EACjD,OAAOA,aAAa;AACtB;AAEA;AACM,SAAUE,mBAAmBA,CACjCC,MAAoC,EACpCC,MAAe,EACfC,OAA6C,EAC7CC,OAA6C;;EAG7C,IAAI,EAACH,MAAM,aAANA,MAAM,KAAN,kBAAAA,MAAM,CAAEjE,MAAM,GAAE,OAAOkE,MAAM,EAAE;;EAGpC,IAAKD,MAAgC,CAAC,CAAC,CAAC,CAACI,IAAI,EAAE;IAC7C,OAAOF,OAAO,CAACF,MAA+B,CAAC;;;EAIjD,OAAOG,OAAO,CAACH,MAA+B,CAAC;AACjD;ACvVM,SAAUK,cAAcA,CAACpB,GAAQ;EACrC,MAAMqB,MAAM,GAAG,IAAIC,GAAG,EAAE;EACxB,IAAItB,GAAG,CAACqB,MAAM,EAAE;IACdrB,GAAG,CAACqB,MAAM,CAACE,OAAO,CAAEC,CAAC,IAAI;;MACvB,IAAIC,GAAG,GAAG,CAAAC,EAAA,GAAAF,CAAC,CAACC,GAAG,MAAI,QAAAC,EAAA,cAAAA,EAAA,GAAAF,CAAC,CAACL,IAAI;MACzBE,MAAM,CAACM,GAAG,CAACH,CAAC,CAACI,IAAI,EAAEH,GAAG,CAAC;IACzB,CAAC,CAAC;;EAEJ,OAAOJ,MAAM;AACf;SAEgBQ,aAAaA,CAACC,KAAqB,EAAE,GAAGC,IAAW;EACjE,IAAID,KAAK,CAACC,IAAI,CAACjF,MAAM,IAAIiF,IAAI,CAACjF,MAAM,EAAE;IACpC,MAAM,IAAIkF,KAAK,CAAC,yBAAyB,CAAC;;EAE5C,MAAMC,EAAE,GAA2B,EAAE;EACrC,IAAIC,GAAG,GAAG,CAAC;EACXJ,KAAK,CAACC,IAAI,CAACR,OAAO,CAAEY,KAAK,IAAI;IAC3BF,EAAE,CAACE,KAAK,CAAChB,IAAI,CAAC,GAAGY,IAAI,CAACG,GAAG,CAAC;IAC1BA,GAAG,IAAI,CAAC;EACV,CAAC,CAAC;EAEF,OAAOD,EAAE;AACX;AAEA;SACgBG,gBAAgBA,CAC9BC,UAAuC,EACvCC,QAAA,GAAqB,EAAE;EAEvBD,UAAU,CAACd,OAAO,CAAEgB,GAAG,IAAI;IACzB,IAAIvD,mBAAmB,CAACuD,GAAG,CAAC,EAAE;MAC5BH,gBAAgB,CAACG,GAAG,CAACD,QAAQ,EAAEA,QAAQ,CAACC,GAAG,CAACpB,IAAI,CAAa,CAAC;KAC/D,MAAM;MACL,IAAI,CAACmB,QAAQ,CAACC,GAAG,CAACpB,IAAI,CAAC,EAAE;QACvB,MAAM,IAAIa,KAAK,CAAC,aAAaO,GAAG,CAACpB,IAAI,kBAAkB,CAAC;;;EAG9D,CAAC,CAAC;AACJ;AAEA;AACM,SAAUqB,gBAAgBA,CAACC,OAAgB;EAC/C,OAAOA,OAAO,YAAYpD,SAAS,GAAGoD,OAAO,GAAG,IAAIpD,SAAS,CAACoD,OAAO,CAAC;AACxE;;AC3DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,SAASC,SAAS,CAAC;EAClCC,WAAWA,CAACC,OAAO,EAAEC,QAAQ,EAAE;IAC7B,IAAIC,MAAM;IACV,MAAM;MACJC,OAAO;MACP,GAAGC;IACT,CAAK,GAAGJ,OAAO;IACX,MAAM;MACJK;IACN,CAAK,GAAGL,OAAO;IACX,MAAMpB,GAAG,GAAGyB,IAAI,CAACpG,MAAM,KAAK,CAAC,GAAGkG,OAAO,GAAG,WAAW,GAAGE,IAAI,CAAC5C,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG0C,OAAO;IACzF,KAAK,CAACvB,GAAG,CAAC;IACV,IAAI,CAAC0B,KAAK,GAAG,KAAK,CAAC;IACnB,IAAI,CAAClF,GAAG,GAAG,KAAK,CAAC;IACjB,IAAI,CAACmF,IAAI,GAAG,KAAK,CAAC;IAClB,IAAI,CAACC,UAAU,GAAG,KAAK,CAAC;IACxB,IAAI,CAACH,IAAI,GAAG,KAAK,CAAC;IAClB,IAAI,CAACI,MAAM,GAAG,KAAK,CAAC;IACpB,IAAI,CAACR,QAAQ,GAAG,KAAK,CAAC;IACtBS,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEP,IAAI,CAAC;IACzB,IAAI,CAAC9B,IAAI,GAAG,IAAI,CAACyB,WAAW,CAACzB,IAAI;IAEjC,IAAI,CAAC2B,QAAQ,GAAG,MAAM;MACpB,IAAIW,OAAO;MAEX,OAAO,CAACA,OAAO,GAAGV,MAAM,KAAK,IAAI,GAAGU,OAAO,GAAGV,MAAM,GAAG,CAACF,OAAO,EAAE,GAAGC,QAAQ,EAAE,CAAC;IACrF,CAAK;EACL;AAEA;;AAEA;AACA;AACA;AACA,SAASY,UAAUA,CAACC,CAAC,EAAE;EACrB,OAAOC,QAAQ,CAACD,CAAC,CAAC,IAAI,OAAOA,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC,KAAK,UAAU;AAChE;AACA;AACA;AACA;;AAGA,SAASF,QAAQA,CAACD,CAAC,EAAE;EACnB,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,IAAI,IAAI;AAC3C;AAaA;AACA;AACA;;AAEA,SAASI,KAAKA,CAACZ,KAAK,EAAE;EACpB,OAAO,OAAOA,KAAK,KAAK,QAAQ,GAAGa,IAAI,CAACC,SAAS,CAACd,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;AACvE;AACA;AACA;AACA;AACA;;AAEA,SAASe,aAAaA,CAACxF,KAAK,EAAE;EAC5B,MAAM;IACJyF,IAAI;IACJhB;EACJ,CAAG,GAAGzE,KAAK,CAAC0F,IAAI,EAAE;EAChB,OAAOD,IAAI,GAAGE,SAAS,GAAGlB,KAAK;AACjC;AACA;AACA;AACA;;AAEA,SAASmB,SAASA,CAACC,MAAM,EAAEC,OAAO,EAAE7E,MAAM,EAAEwD,KAAK,EAAE;EACjD,IAAIoB,MAAM,KAAK,IAAI,EAAE;IACnB;EACJ,CAAG,MAAM,IAAIA,MAAM,KAAK,KAAK,EAAE;IAC3BA,MAAM,GAAG,EAAE;EACf,CAAG,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IACrCA,MAAM,GAAG;MACPvB,OAAO,EAAEuB;IACf,CAAK;EACL;EAEE,MAAM;IACJrB,IAAI;IACJI;EACJ,CAAG,GAAGkB,OAAO;EACX,MAAM;IACJpB;EACJ,CAAG,GAAGzD,MAAM;EACV,MAAM;IACJ0D,UAAU;IACVL,OAAO,GAAG,4BAA4B,GAAGI,IAAI,GAAG,GAAG,IAAIC,UAAU,GAAG,oBAAoB,GAAGA,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,mBAAmB,GAAGU,KAAK,CAACZ,KAAK,CAAC,GAAG;EAC7J,CAAG,GAAGoB,MAAM;EACV,OAAO;IACLpB,KAAK;IACLC,IAAI;IACJC,UAAU;IACVpF,GAAG,EAAEiF,IAAI,CAACA,IAAI,CAACpG,MAAM,GAAG,CAAC,CAAC;IAC1BoG,IAAI;IACJI,MAAM;IACN,GAAGiB,MAAM;IACTvB;EACJ,CAAG;AACH;AACA;AACA;AACA;;AAEA,UAAUyB,UAAUA,CAACF,MAAM,EAAEC,OAAO,EAAE7E,MAAM,EAAEwD,KAAK,EAAE;EACnD,IAAI,CAACO,UAAU,CAACa,MAAM,CAAC,EAAE;IACvBA,MAAM,GAAG,CAACA,MAAM,CAAC;EACrB;EAEE,KAAK,MAAMG,CAAC,IAAIH,MAAM,EAAE;IACtB,MAAM1B,OAAO,GAAGyB,SAAS,CAACI,CAAC,EAAEF,OAAO,EAAE7E,MAAM,EAAEwD,KAAK,CAAC;IAEpD,IAAIN,OAAO,EAAE;MACX,MAAMA,OAAO;IACnB;EACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU8B,GAAGA,CAACxB,KAAK,EAAExD,MAAM,EAAEiF,OAAO,EAAE;EACpC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,EAAE;EAChB;EAEE,MAAM;IACJ1B,IAAI,GAAG,EAAE;IACTI,MAAM,GAAG,CAACH,KAAK,CAAC;IAChB0B,MAAM,GAAG,KAAK;IACdC,IAAI,GAAG;EACX,CAAG,GAAGF,OAAO;EACX,MAAMG,GAAG,GAAG;IACV7B,IAAI;IACJI;EACJ,CAAG;EAED,IAAIuB,MAAM,EAAE;IACV1B,KAAK,GAAGxD,MAAM,CAACqF,OAAO,CAAC7B,KAAK,EAAE4B,GAAG,CAAC;IAElC,IAAID,IAAI,IAAInF,MAAM,CAACyD,IAAI,KAAK,MAAM,IAAIQ,QAAQ,CAACjE,MAAM,CAACsF,MAAM,CAAC,IAAIrB,QAAQ,CAACT,KAAK,CAAC,IAAI,CAACzG,KAAK,CAACiE,OAAO,CAACwC,KAAK,CAAC,EAAE;MACzG,KAAK,MAAMlF,GAAG,IAAIkF,KAAK,EAAE;QACvB,IAAIxD,MAAM,CAACsF,MAAM,CAAChH,GAAG,CAAC,KAAKoG,SAAS,EAAE;UACpC,OAAOlB,KAAK,CAAClF,GAAG,CAAC;QAC3B;MACA;IACA;EACA;EAEE,IAAIiH,KAAK,GAAG,IAAI;EAEhB,KAAK,MAAMrC,OAAO,IAAIlD,MAAM,CAACwF,SAAS,CAAChC,KAAK,EAAE4B,GAAG,CAAC,EAAE;IAClDG,KAAK,GAAG,KAAK;IACb,MAAM,CAACrC,OAAO,EAAEwB,SAAS,CAAC;EAC9B;EAEE,KAAK,IAAI,CAACe,CAAC,EAAEC,CAAC,EAAElF,CAAC,CAAC,IAAIR,MAAM,CAAC2F,OAAO,CAACnC,KAAK,EAAE4B,GAAG,CAAC,EAAE;IAChD,MAAMQ,EAAE,GAAGZ,GAAG,CAACU,CAAC,EAAElF,CAAC,EAAE;MACnB+C,IAAI,EAAEkC,CAAC,KAAKf,SAAS,GAAGnB,IAAI,GAAG,CAAC,GAAGA,IAAI,EAAEkC,CAAC,CAAC;MAC3C9B,MAAM,EAAE8B,CAAC,KAAKf,SAAS,GAAGf,MAAM,GAAG,CAAC,GAAGA,MAAM,EAAE+B,CAAC,CAAC;MACjDR,MAAM;MACNC;IACN,CAAK,CAAC;IAEF,KAAK,MAAMU,CAAC,IAAID,EAAE,EAAE;MAClB,IAAIC,CAAC,CAAC,CAAC,CAAC,EAAE;QACRN,KAAK,GAAG,KAAK;QACb,MAAM,CAACM,CAAC,CAAC,CAAC,CAAC,EAAEnB,SAAS,CAAC;MAC/B,CAAO,MAAM,IAAIQ,MAAM,EAAE;QACjBQ,CAAC,GAAGG,CAAC,CAAC,CAAC,CAAC;QAER,IAAIJ,CAAC,KAAKf,SAAS,EAAE;UACnBlB,KAAK,GAAGkC,CAAC;QACnB,CAAS,MAAM,IAAIlC,KAAK,YAAY7B,GAAG,EAAE;UAC/B6B,KAAK,CAACxB,GAAG,CAACyD,CAAC,EAAEC,CAAC,CAAC;QACzB,CAAS,MAAM,IAAIlC,KAAK,YAAYsC,GAAG,EAAE;UAC/BtC,KAAK,CAACuC,GAAG,CAACL,CAAC,CAAC;QACtB,CAAS,MAAM,IAAIzB,QAAQ,CAACT,KAAK,CAAC,EAAE;UAC1BA,KAAK,CAACiC,CAAC,CAAC,GAAGC,CAAC;QACtB;MACA;IACA;EACA;EAEE,IAAIH,KAAK,EAAE;IACT,KAAK,MAAMrC,OAAO,IAAIlD,MAAM,CAACgG,OAAO,CAACxC,KAAK,EAAE4B,GAAG,CAAC,EAAE;MAChDG,KAAK,GAAG,KAAK;MACb,MAAM,CAACrC,OAAO,EAAEwB,SAAS,CAAC;IAChC;EACA;EAEE,IAAIa,KAAK,EAAE;IACT,MAAM,CAACb,SAAS,EAAElB,KAAK,CAAC;EAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMyC,MAAM,CAAC;EACXhD,WAAWA,CAACiD,KAAK,EAAE;IACjB,IAAI,CAACC,IAAI,GAAG,KAAK,CAAC;IAClB,IAAI,CAAC1C,IAAI,GAAG,KAAK,CAAC;IAClB,IAAI,CAAC6B,MAAM,GAAG,KAAK,CAAC;IACpB,IAAI,CAACD,OAAO,GAAG,KAAK,CAAC;IACrB,IAAI,CAACG,SAAS,GAAG,KAAK,CAAC;IACvB,IAAI,CAACQ,OAAO,GAAG,KAAK,CAAC;IACrB,IAAI,CAACL,OAAO,GAAG,KAAK,CAAC;IACrB,MAAM;MACJlC,IAAI;MACJ6B,MAAM;MACNE,SAAS;MACTQ,OAAO;MACPX,OAAO,GAAG7B,KAAK,IAAIA,KAAK;MACxBmC,OAAO,GAAG,UAAAA,CAAA,EAAa;IAC7B,CAAK,GAAGO,KAAK;IACT,IAAI,CAACzC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC6B,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACK,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACN,OAAO,GAAGA,OAAO;IAEtB,IAAIG,SAAS,EAAE;MACb,IAAI,CAACA,SAAS,GAAG,CAAChC,KAAK,EAAEqB,OAAO,KAAK;QACnC,MAAMD,MAAM,GAAGY,SAAS,CAAChC,KAAK,EAAEqB,OAAO,CAAC;QACxC,OAAOC,UAAU,CAACF,MAAM,EAAEC,OAAO,EAAE,IAAI,EAAErB,KAAK,CAAC;MACvD,CAAO;IACP,CAAK,MAAM;MACL,IAAI,CAACgC,SAAS,GAAG,MAAM,EAAE;IAC/B;IAEI,IAAIQ,OAAO,EAAE;MACX,IAAI,CAACA,OAAO,GAAG,CAACxC,KAAK,EAAEqB,OAAO,KAAK;QACjC,MAAMD,MAAM,GAAGoB,OAAO,CAACxC,KAAK,EAAEqB,OAAO,CAAC;QACtC,OAAOC,UAAU,CAACF,MAAM,EAAEC,OAAO,EAAE,IAAI,EAAErB,KAAK,CAAC;MACvD,CAAO;IACP,CAAK,MAAM;MACL,IAAI,CAACwC,OAAO,GAAG,MAAM,EAAE;IAC7B;EACA;EACA;AACA;AACA;;EAGEI,MAAMA,CAAC5C,KAAK,EAAE;IACZ,OAAO4C,MAAM,CAAC5C,KAAK,EAAE,IAAI,CAAC;EAC9B;EACA;AACA;AACA;;EAGE6C,MAAMA,CAAC7C,KAAK,EAAE;IACZ,OAAO6C,MAAM,CAAC7C,KAAK,EAAE,IAAI,CAAC;EAC9B;EACA;AACA;AACA;;EAGE8C,EAAEA,CAAC9C,KAAK,EAAE;IACR,OAAO8C,EAAE,CAAC9C,KAAK,EAAE,IAAI,CAAC;EAC1B;EACA;AACA;AACA;AACA;;EAGE2B,IAAIA,CAAC3B,KAAK,EAAE;IACV,OAAO2B,IAAI,CAAC3B,KAAK,EAAE,IAAI,CAAC;EAC5B;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE+C,QAAQA,CAAC/C,KAAK,EAAEyB,OAAO,EAAE;IACvB,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;MACtBA,OAAO,GAAG,EAAE;IAClB;IAEI,OAAOsB,QAAQ,CAAC/C,KAAK,EAAE,IAAI,EAAEyB,OAAO,CAAC;EACzC;AAEA;AACA;AACA;AACA;;AAEA,SAASmB,MAAMA,CAAC5C,KAAK,EAAExD,MAAM,EAAE;EAC7B,MAAM4E,MAAM,GAAG2B,QAAQ,CAAC/C,KAAK,EAAExD,MAAM,CAAC;EAEtC,IAAI4E,MAAM,CAAC,CAAC,CAAC,EAAE;IACb,MAAMA,MAAM,CAAC,CAAC,CAAC;EACnB;AACA;AACA;AACA;AACA;;AAEA,SAASyB,MAAMA,CAAC7C,KAAK,EAAExD,MAAM,EAAE;EAC7B,MAAM4E,MAAM,GAAG2B,QAAQ,CAAC/C,KAAK,EAAExD,MAAM,EAAE;IACrCkF,MAAM,EAAE;EACZ,CAAG,CAAC;EAEF,IAAIN,MAAM,CAAC,CAAC,CAAC,EAAE;IACb,MAAMA,MAAM,CAAC,CAAC,CAAC;EACnB,CAAG,MAAM;IACL,OAAOA,MAAM,CAAC,CAAC,CAAC;EACpB;AACA;AACA;AACA;AACA;;AAEA,SAASO,IAAIA,CAAC3B,KAAK,EAAExD,MAAM,EAAE;EAC3B,MAAM4E,MAAM,GAAG2B,QAAQ,CAAC/C,KAAK,EAAExD,MAAM,EAAE;IACrCkF,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE;EACV,CAAG,CAAC;EAEF,IAAIP,MAAM,CAAC,CAAC,CAAC,EAAE;IACb,MAAMA,MAAM,CAAC,CAAC,CAAC;EACnB,CAAG,MAAM;IACL,OAAOA,MAAM,CAAC,CAAC,CAAC;EACpB;AACA;AACA;AACA;AACA;;AAEA,SAAS0B,EAAEA,CAAC9C,KAAK,EAAExD,MAAM,EAAE;EACzB,MAAM4E,MAAM,GAAG2B,QAAQ,CAAC/C,KAAK,EAAExD,MAAM,CAAC;EACtC,OAAO,CAAC4E,MAAM,CAAC,CAAC,CAAC;AACnB;AACA;AACA;AACA;AACA;;AAEA,SAAS2B,QAAQA,CAAC/C,KAAK,EAAExD,MAAM,EAAEiF,OAAO,EAAE;EACxC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,EAAE;EAChB;EAEE,MAAMuB,MAAM,GAAGxB,GAAG,CAACxB,KAAK,EAAExD,MAAM,EAAEiF,OAAO,CAAC;EAC1C,MAAMwB,KAAK,GAAGlC,aAAa,CAACiC,MAAM,CAAC;EAEnC,IAAIC,KAAK,CAAC,CAAC,CAAC,EAAE;IACZ,MAAMC,KAAK,GAAG,IAAI3D,WAAW,CAAC0D,KAAK,CAAC,CAAC,CAAC,EAAE,aAAa;MACnD,KAAK,MAAMZ,CAAC,IAAIW,MAAM,EAAE;QACtB,IAAIX,CAAC,CAAC,CAAC,CAAC,EAAE;UACR,MAAMA,CAAC,CAAC,CAAC,CAAC;QACpB;MACA;IACA,CAAK,CAAC;IACF,OAAO,CAACa,KAAK,EAAEhC,SAAS,CAAC;EAC7B,CAAG,MAAM;IACL,MAAMgB,CAAC,GAAGe,KAAK,CAAC,CAAC,CAAC;IAClB,OAAO,CAAC/B,SAAS,EAAEgB,CAAC,CAAC;EACzB;AACA;AAYA;AACA;AACA;;AAEA,SAASiB,MAAMA,CAACnF,IAAI,EAAEgE,SAAS,EAAE;EAC/B,OAAO,IAAIS,MAAM,CAAC;IAChBxC,IAAI,EAAEjC,IAAI;IACV8D,MAAM,EAAE,IAAI;IACZE;EACJ,CAAG,CAAC;AACJ;;AA+KA;AACA;AACA;;AAEA,SAASoB,GAAGA,CAAA,EAAG;EACb,OAAOD,MAAM,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC;AAClC;AACA,SAAS9J,KAAKA,CAACgK,OAAO,EAAE;EACtB,OAAO,IAAIZ,MAAM,CAAC;IAChBxC,IAAI,EAAE,OAAO;IACb6B,MAAM,EAAEuB,OAAO;IAEf,CAAClB,OAAOA,CAACnC,KAAK,EAAE;MACd,IAAIqD,OAAO,IAAI9J,KAAK,CAACiE,OAAO,CAACwC,KAAK,CAAC,EAAE;QACnC,KAAK,MAAM,CAACsD,CAAC,EAAEpB,CAAC,CAAC,IAAIlC,KAAK,CAACmC,OAAO,EAAE,EAAE;UACpC,MAAM,CAACmB,CAAC,EAAEpB,CAAC,EAAEmB,OAAO,CAAC;QAC/B;MACA;IACA,CAAK;IAEDxB,OAAOA,CAAC7B,KAAK,EAAE;MACb,OAAOzG,KAAK,CAACiE,OAAO,CAACwC,KAAK,CAAC,GAAGA,KAAK,CAACjG,KAAK,EAAE,GAAGiG,KAAK;IACzD,CAAK;IAEDgC,SAASA,CAAChC,KAAK,EAAE;MACf,OAAOzG,KAAK,CAACiE,OAAO,CAACwC,KAAK,CAAC,IAAI,yCAAyC,GAAGY,KAAK,CAACZ,KAAK,CAAC;IAC7F;EAEA,CAAG,CAAC;AACJ;AAUA;AACA;AACA;;AAEA,SAASuD,OAAOA,CAAA,EAAG;EACjB,OAAOJ,MAAM,CAAC,SAAS,EAAEnD,KAAK,IAAI;IAChC,OAAO,OAAOA,KAAK,KAAK,SAAS;EACrC,CAAG,CAAC;AACJ;AAuFA,SAASwD,OAAOA,CAACC,QAAQ,EAAE;EACzB,MAAMC,WAAW,GAAG9C,KAAK,CAAC6C,QAAQ,CAAC;EACnC,MAAMpB,CAAC,GAAG,OAAOoB,QAAQ;EACzB,OAAO,IAAIhB,MAAM,CAAC;IAChBxC,IAAI,EAAE,SAAS;IACf6B,MAAM,EAAEO,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,SAAS,GAAGoB,QAAQ,GAAG,IAAI;IAE7EzB,SAASA,CAAChC,KAAK,EAAE;MACf,OAAOA,KAAK,KAAKyD,QAAQ,IAAI,wBAAwB,GAAGC,WAAW,GAAG,mBAAmB,GAAG9C,KAAK,CAACZ,KAAK,CAAC;IAC9G;EAEA,CAAG,CAAC;AACJ;AAgCA;AACA;AACA;;AAEA,SAAS2D,QAAQA,CAACnH,MAAM,EAAE;EACxB,OAAO,IAAIiG,MAAM,CAAC;IAAE,GAAGjG,MAAM;IAC3BwF,SAAS,EAAEA,CAAChC,KAAK,EAAE4B,GAAG,KAAK5B,KAAK,KAAK,IAAI,IAAIxD,MAAM,CAACwF,SAAS,CAAChC,KAAK,EAAE4B,GAAG,CAAC;IACzEY,OAAO,EAAEA,CAACxC,KAAK,EAAE4B,GAAG,KAAK5B,KAAK,KAAK,IAAI,IAAIxD,MAAM,CAACgG,OAAO,CAACxC,KAAK,EAAE4B,GAAG;EACxE,CAAG,CAAC;AACJ;AACA;AACA;AACA;;AAEA,SAASgC,MAAMA,CAAA,EAAG;EAChB,OAAOT,MAAM,CAAC,QAAQ,EAAEnD,KAAK,IAAI;IAC/B,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAAC6D,KAAK,CAAC7D,KAAK,CAAC,IAAI,mCAAmC,GAAGY,KAAK,CAACZ,KAAK,CAAC;EAC3G,CAAG,CAAC;AACJ;AAkCA;AACA;AACA;;AAEA,SAAS8D,QAAQA,CAACtH,MAAM,EAAE;EACxB,OAAO,IAAIiG,MAAM,CAAC;IAAE,GAAGjG,MAAM;IAC3BwF,SAAS,EAAEA,CAAChC,KAAK,EAAE4B,GAAG,KAAK5B,KAAK,KAAKkB,SAAS,IAAI1E,MAAM,CAACwF,SAAS,CAAChC,KAAK,EAAE4B,GAAG,CAAC;IAC9EY,OAAO,EAAEA,CAACxC,KAAK,EAAE4B,GAAG,KAAK5B,KAAK,KAAKkB,SAAS,IAAI1E,MAAM,CAACgG,OAAO,CAACxC,KAAK,EAAE4B,GAAG;EAC7E,CAAG,CAAC;AACJ;AAgEA;AACA;AACA;;AAEA,SAASmC,MAAMA,CAAA,EAAG;EAChB,OAAOZ,MAAM,CAAC,QAAQ,EAAEnD,KAAK,IAAI;IAC/B,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAI,mCAAmC,GAAGY,KAAK,CAACZ,KAAK,CAAC;EAC1F,CAAG,CAAC;AACJ;AA4BA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,IAAIA,CAAC6B,MAAM,EAAE;EACpB,MAAMkC,IAAI,GAAG5D,MAAM,CAAC4D,IAAI,CAAClC,MAAM,CAAC;EAChC,OAAO,IAAIW,MAAM,CAAC;IAChBxC,IAAI,EAAE,MAAM;IACZ6B,MAAM;IAEN,CAACK,OAAOA,CAACnC,KAAK,EAAE;MACd,IAAIS,QAAQ,CAACT,KAAK,CAAC,EAAE;QACnB,KAAK,MAAMiC,CAAC,IAAI+B,IAAI,EAAE;UACpB,MAAM,CAAC/B,CAAC,EAAEjC,KAAK,CAACiC,CAAC,CAAC,EAAEH,MAAM,CAACG,CAAC,CAAC,CAAC;QACxC;MACA;IACA,CAAK;IAEDD,SAASA,CAAChC,KAAK,EAAE;MACf,OAAOS,QAAQ,CAACT,KAAK,CAAC,IAAI,oCAAoC,GAAGY,KAAK,CAACZ,KAAK,CAAC;IACnF;EAEA,CAAG,CAAC;AACJ;AACA;AACA;AACA;;AAEA,SAASiE,OAAKC,CAACC,OAAO,EAAE;EACtB,MAAMT,WAAW,GAAGS,OAAO,CAACvK,GAAG,CAACoD,CAAC,IAAIA,CAAC,CAACiD,IAAI,CAAC,CAAC9C,IAAI,CAAC,KAAK,CAAC;EACxD,OAAO,IAAIsF,MAAM,CAAC;IAChBxC,IAAI,EAAE,OAAO;IACb6B,MAAM,EAAE,IAAI;IAEZD,OAAOA,CAAC7B,KAAK,EAAE4B,GAAG,EAAE;MAClB,MAAMwC,UAAU,GAAGD,OAAO,CAACE,IAAI,CAACrH,CAAC,IAAI;QACnC,MAAM,CAACqB,CAAC,CAAC,GAAGrB,CAAC,CAAC+F,QAAQ,CAAC/C,KAAK,EAAE;UAC5B0B,MAAM,EAAE;QAClB,CAAS,CAAC;QACF,OAAO,CAACrD,CAAC;MACjB,CAAO,CAAC,IAAIiG,OAAO,EAAE;MACf,OAAOF,UAAU,CAACvC,OAAO,CAAC7B,KAAK,EAAE4B,GAAG,CAAC;IAC3C,CAAK;IAEDI,SAASA,CAAChC,KAAK,EAAE4B,GAAG,EAAE;MACpB,MAAMjC,QAAQ,GAAG,EAAE;MAEnB,KAAK,MAAM4E,CAAC,IAAIJ,OAAO,EAAE;QACvB,MAAM,CAAC,GAAGnB,MAAM,CAAC,GAAGxB,GAAG,CAACxB,KAAK,EAAEuE,CAAC,EAAE3C,GAAG,CAAC;QACtC,MAAM,CAAC4C,KAAK,CAAC,GAAGxB,MAAM;QAEtB,IAAI,CAACwB,KAAK,CAAC,CAAC,CAAC,EAAE;UACb,OAAO,EAAE;QACnB,CAAS,MAAM;UACL,KAAK,MAAM,CAAC9E,OAAO,CAAC,IAAIsD,MAAM,EAAE;YAC9B,IAAItD,OAAO,EAAE;cACXC,QAAQ,CAAC8E,IAAI,CAAC/E,OAAO,CAAC;YACpC;UACA;QACA;MACA;MAEM,OAAO,CAAC,4CAA4C,GAAGgE,WAAW,GAAG,mBAAmB,GAAG9C,KAAK,CAACZ,KAAK,CAAC,EAAE,GAAGL,QAAQ,CAAC;IAC3H;EAEA,CAAG,CAAC;AACJ;AACA;AACA;AACA;;AAEA,SAAS2E,OAAOA,CAAA,EAAG;EACjB,OAAOnB,MAAM,CAAC,SAAS,EAAE,MAAM,IAAI,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASzB,MAAMA,CAAClF,MAAM,EAAEkI,SAAS,EAAE7C,OAAO,EAAE;EAC1C,OAAO,IAAIY,MAAM,CAAC;IAAE,GAAGjG,MAAM;IAC3BqF,OAAO,EAAEA,CAAC7B,KAAK,EAAE4B,GAAG,KAAK;MACvB,OAAOkB,EAAE,CAAC9C,KAAK,EAAE0E,SAAS,CAAC,GAAGlI,MAAM,CAACqF,OAAO,CAACA,OAAO,CAAC7B,KAAK,EAAE4B,GAAG,CAAC,EAAEA,GAAG,CAAC,GAAGpF,MAAM,CAACqF,OAAO,CAAC7B,KAAK,EAAE4B,GAAG,CAAC;IACzG;EACA,CAAG,CAAC;AACJ;;AC/9BA;;;AAGG;AACI,eAAe+C,MAAMA,CAC1B3I,SAAkB,EAClBmD,QAA6B,EAC7B/E,IAAa,EACbwK,QAAmB;EAEnB5I,SAAS,GAAGqD,gBAAgB,CAACrD,SAAS,CAAC;EACvC,IAAI,CAAC4I,QAAQ,EAAE;IACbA,QAAQ,GAAGC,WAAW,EAAE;;EAG1B,MAAM5K,EAAE,GAAG,IAAI6K,WAAW,EAAE;EAC5B7K,EAAE,CAACsI,GAAG,CACJ,IAAIwC,sBAAsB,CAAC;IACzB/I,SAAS;IACTgI,IAAI,EAAE7E,QAAQ,aAARA,QAAQ,KAAR,SAAAA,QAAQ,GAAI,EAAE;IACpB/E;EACD,EAAC,CACH;EAED,IAAIwK,QAAQ,CAACI,cAAc,KAAK9D,SAAS,EAAE;IACzC,MAAM,IAAIrC,KAAK,CACb,qEAAqE,CACtE;;EAGH,OAAO,MAAM+F,QAAQ,CAACI,cAAc,CAAC/K,EAAE,EAAE,EAAE,CAAC;AAC9C;AAEA,MAAMgL,2BAA2B,GAAW,EAAE;AAEvC,eAAeC,mBAAmBA,CACvCC,UAAsB,EACtBC,UAAuB,EACvBC,UAAuB;EAIvB,MAAMC,OAAO,GAAG,MAAMC,6BAA6B,CACjDJ,UAAU,EACVC,UAAU,EACVC,UAAU,CACX;EACD,OAAOC,OAAO,CAAC1L,GAAG,CAAEwH,MAAM,IAAI;IAC5B,OAAOA,MAAM,GACT;MAAE3E,SAAS,EAAE2E,MAAM,CAAC3E,SAAS;MAAE+I,OAAO,EAAEpE,MAAM,CAACoE;IAAO,CAAE,GACxD,IAAI;EACV,CAAC,CAAC;AACJ;AAEO,eAAeD,6BAA6BA,CACjDJ,UAAsB,EACtBC,UAAuB,EACvBC,UAAuB;EAQvB,IAAID,UAAU,CAACzL,MAAM,IAAIsL,2BAA2B,EAAE;IACpD,OAAO,MAAMQ,iCAAiC,CAC5CN,UAAU,EACVC,UAAU,EACVC,UAAU,CACX;GACF,MAAM;IACL,MAAMK,OAAO,GAAGtM,MAAM,CAACgM,UAAU,EAAEH,2BAA2B,CAAC;IAC/D,MAAMK,OAAO,GAAG,MAAMK,OAAO,CAACC,GAAG,CAO/BF,OAAO,CAAC9L,GAAG,CAAEiM,KAAK,IAChBJ,iCAAiC,CAACN,UAAU,EAAEU,KAAK,EAAER,UAAU,CAAC,CACjE,CACF;IACD,OAAOC,OAAO,CAACQ,IAAI,EAAE;;AAEzB;AAEA,eAAeL,iCAAiCA,CAC9CN,UAAsB,EACtBC,UAAuB,EACvBW,kBAA+B;EAQ/B,MAAMV,UAAU,GAAGU,kBAAkB,KAAlB,QAAAA,kBAAkB,KAAlB,SAAAA,kBAAkB,GAAIZ,UAAU,CAACE,UAAU;EAC9D,MAAM;IAAErF,KAAK,EAAEgG,YAAY;IAAE3E;EAAO,CAAE,GACpC,MAAM8D,UAAU,CAACc,iCAAiC,CAACb,UAAU,EAAEC,UAAU,CAAC;EAC5E,MAAMlG,QAAQ,GAAG6G,YAAY,CAACpM,GAAG,CAAC,CAAC4L,OAAO,EAAEzG,GAAG,KAAI;IACjD,IAAIyG,OAAO,KAAK,IAAI,EAAE;MACpB,OAAO,IAAI;;IAEb,OAAO;MACL/I,SAAS,EAAE2I,UAAU,CAACrG,GAAG,CAAC;MAC1ByG,OAAO;MACPnE;KACD;EACH,CAAC,CAAC;EAEF,OAAOlC,QAAQ;AACjB;AAEA;AACO,eAAe+G,mBAAmBA,CACvCf,UAAsB,EACtBgB,WAAwB,EACxBC,OAAuB,EACvBf,UAAuB,EACvBgB,eAA4C;;EAE5C,IAAID,OAAO,IAAIA,OAAO,CAACzM,MAAM,GAAG,CAAC,EAAE;IACjCwM,WAAW,CAACG,IAAI,CAAC,GAAGF,OAAO,CAAC;;;EAI9B,MAAMvG,OAAO,GAAGsG,WAAW,CAACI,QAAQ,EAAE;EACtC,MAAMC,QAAQ,GAAG3G,OAAO,CAAC4G,SAAS,EAAE;;EAEpC,MAAMC,eAAe,GAAGP,WAAW,CAACQ,UAAU,CAACH,QAAQ,CAAC;EACxD,MAAMI,kBAAkB,GAAGF,eAAe,CAAClM,QAAQ,CAAC,QAAQ,CAAC;EAC7D,MAAMqM,MAAM,GAAQ;IAClBC,QAAQ,EAAE,QAAQ;IAClBzB,UAAU,EAAEA,UAAU,KAAV,QAAAA,UAAU,cAAVA,UAAU,GAAIF,UAAU,CAACE;GACtC;EAED,IAAIgB,eAAe,EAAE;IACnB,MAAMU,SAAS,GAAG,CAChBxN,KAAK,CAACiE,OAAO,CAAC6I,eAAe,CAAC,GAAGA,eAAe,GAAGxG,OAAO,CAACmH,aAAa,EAAE,EAC1EpN,GAAG,CAAEkB,GAAG,IAAKA,GAAG,CAACmM,QAAQ,EAAE,CAAC;IAE9BJ,MAAM,CAAC,UAAU,CAAC,GAAG;MACnBC,QAAQ,EAAE,QAAQ;MAClBC;KACD;;EAGH,IAAIX,OAAO,IAAIA,OAAO,CAACzM,MAAM,GAAG,CAAC,EAAE;IACjCkN,MAAM,CAACK,SAAS,GAAG,IAAI;;EAGzB,MAAMtI,IAAI,GAAG,CAACgI,kBAAkB,EAAEC,MAAM,CAAC;;EAEzC,MAAMM,SAAS,GAAG,MAAMhC,UAAU,CAACiC,WAAW,CAAC,qBAAqB,EAAExI,IAAI,CAAC;EAC3E,MAAMyI,GAAG,GAAGxE,MAAM,CAACsE,SAAS,EAAEG,kCAAkC,CAAC;EACjE,IAAI,OAAO,IAAID,GAAG,EAAE;IAClB,IAAIE,IAAI;IACR,IAAI,MAAM,IAAIF,GAAG,CAACnE,KAAK,EAAE;MACvBqE,IAAI,GAAG,CAAAhJ,EAAA,GAAA8I,GAAG,CAACnE,KAAK,CAAC9I,IAAI,MAAE,QAAAmE,EAAA,uBAAAA,EAAA,CAAAgJ,IAAI;MAC3B,IAAIA,IAAI,IAAIhO,KAAK,CAACiE,OAAO,CAAC+J,IAAI,CAAC,EAAE;QAC/B,MAAMC,WAAW,GAAG,QAAQ;QAC5B,MAAMC,QAAQ,GAAGD,WAAW,GAAGD,IAAI,CAACpK,IAAI,CAACqK,WAAW,CAAC;QACrDE,OAAO,CAACxE,KAAK,CAACmE,GAAG,CAACnE,KAAK,CAACrD,OAAO,EAAE4H,QAAQ,CAAC;;;IAG9C,MAAM,IAAIE,oBAAoB,CAC5B,kCAAkC,GAAGN,GAAG,CAACnE,KAAK,CAACrD,OAAO,EACtD0H,IAAI,CACL;;EAEH,OAAOF,GAAG,CAACjG,MAAM;AACnB;AAEA;AACA,SAASwG,aAAaA,CAAO9F,MAAoB;EAC/C,OAAOJ,MAAM,CAACmG,eAAe,CAAC/F,MAAM,CAAC,EAAEgG,gBAAgB,EAAG9H,KAAK,IAAI;IACjE,IAAI,OAAO,IAAIA,KAAK,EAAE;MACpB,OAAOA,KAAK;KACb,MAAM;MACL,OAAO;QACL,GAAGA,KAAK;QACRoB,MAAM,EAAEyB,MAAM,CAAC7C,KAAK,CAACoB,MAAM,EAAEU,MAAM;OACpC;;EAEL,CAAC,CAAC;AACJ;AAEA;AACA,MAAMgG,gBAAgB,GAAGD,eAAe,CAACvD,OAAO,EAAE,CAAC;AAEnD;AACA,SAASuD,eAAeA,CAAOzG,MAAoB;EACjD,OAAO6C,OAAK,CAAC,CACXhE,IAAI,CAAC;IACH8H,OAAO,EAAEvE,OAAO,CAAC,KAAK,CAAC;IACvBwE,EAAE,EAAEjE,MAAM,EAAE;IACZ3C;GACD,CAAC,EACFnB,IAAI,CAAC;IACH8H,OAAO,EAAEvE,OAAO,CAAC,KAAK,CAAC;IACvBwE,EAAE,EAAEjE,MAAM,EAAE;IACZb,KAAK,EAAEjD,IAAI,CAAC;MACVxB,IAAI,EAAE6F,OAAO,EAAE;MACfzE,OAAO,EAAEkE,MAAM,EAAE;MACjB3J,IAAI,EAAE0J,QAAQ,CAACV,GAAG,EAAE;KACrB;GACF,CAAC,CACH,CAAC;AACJ;AAEA;AACA,SAAS6E,uBAAuBA,CAAOjI,KAAmB;EACxD,OAAO4H,aAAa,CAClB3H,IAAI,CAAC;IACHoB,OAAO,EAAEpB,IAAI,CAAC;MACZiI,IAAI,EAAEtE,MAAM;KACb,CAAC;IACF5D;EACD,EAAC,CACH;AACH;AAEA;AACA,MAAMsH,kCAAkC,GAAGW,uBAAuB,CAChEhI,IAAI,CAAC;EACHkI,GAAG,EAAExE,QAAQ,CAACM,OAAK,CAAC,CAAChE,IAAI,CAAC,EAAE,CAAC,EAAE8D,MAAM,EAAE,CAAC,CAAC,CAAC;EAC1CwD,IAAI,EAAE5D,QAAQ,CAACtK,KAAK,CAAC0K,MAAM,EAAE,CAAC,CAAC;EAC/B5E,QAAQ,EAAE2E,QAAQ,CAChBH,QAAQ,CACNtK,KAAK,CACHsK,QAAQ,CACN1D,IAAI,CAAC;IACHmI,UAAU,EAAE7E,OAAO,EAAE;IACrB8E,KAAK,EAAEtE,MAAM,EAAE;IACfuE,QAAQ,EAAE1E,MAAM,EAAE;IAClBxJ,IAAI,EAAEf,KAAK,CAAC0K,MAAM,EAAE,CAAC;IACrBwE,SAAS,EAAEzE,QAAQ,CAACF,MAAM,EAAE;GAC7B,CAAC,CACH,CACF,CACF,CACF;EACD4E,aAAa,EAAE1E,QAAQ,CAACF,MAAM,EAAE;AACjC,EAAC,CACH;;;;;;;;;ACrOD;;;AAGG;MACU6E,cAAc;EAGzB;;;;AAIG;EACHhJ,WACWA,CAAA0F,UAAsB,EACtBuD,MAAc,EACdC,IAAA,GAAuBF,cAAc,CAACG,cAAc,EAAE;IAFtD,IAAU,CAAAzD,UAAA,GAAVA,UAAU;IACV,IAAM,CAAAuD,MAAA,GAANA,MAAM;IACN,IAAI,CAAAC,IAAA,GAAJA,IAAI;IAEb,IAAI,CAAClM,SAAS,GAAGiM,MAAM,aAANA,MAAM,KAAN,kBAAAA,MAAM,CAAEjM,SAAS;;EAGpC,OAAOmM,cAAcA,CAAA;IACnB,OAAO;MACLC,mBAAmB,EAAE,WAAW;MAChCxD,UAAU,EAAE;KACb;;EAGH;;;;;;;AAOG;EACH,OAAOyD,KAAKA,CACVC,GAAY,EACZJ,IAAuB,GAAAF,cAAc,CAACG,cAAc,EAAE;IAEvC;MACb,MAAM,IAAI/J,KAAK,CAAC,6CAA6C,CAAC;;;EAYlE;;;;;AAKG;EACH,OAAOmK,GAAGA,CAAA;IACO;MACb,MAAM,IAAInK,KAAK,CAAC,2CAA2C,CAAC;;;EAgBhE;;;;;;AAMG;EACH,MAAMmG,cAAcA,CAClB/K,EAAsC,EACtCmM,OAAkB,EAClBuC,IAAkC;;IAElC,IAAIA,IAAI,KAAKzH,SAAS,EAAE;MACtByH,IAAI,GAAG,IAAI,CAACA,IAAI;;IAGlB,IAAI3O,sBAAsB,CAACC,EAAE,CAAC,EAAE;MAC9B,IAAImM,OAAO,EAAE;QACXnM,EAAE,CAACqM,IAAI,CAACF,OAAO,CAAC;;KAEnB,MAAM;MACLnM,EAAE,CAACgP,QAAQ,GAAG,CAAA1K,EAAA,GAAAtE,EAAE,CAACgP,QAAQ,cAAA1K,EAAA,cAAAA,EAAA,GAAI,IAAI,CAACmK,MAAM,CAACjM,SAAS;MAClDxC,EAAE,CAACiP,eAAe,GAAG,CACnB,MAAM,IAAI,CAAC/D,UAAU,CAACgE,kBAAkB,CAACR,IAAI,CAACE,mBAAmB,CAAC,EAClEO,SAAS;MAEX,IAAIhD,OAAO,EAAE;QACX,KAAK,MAAMiD,MAAM,IAAIjD,OAAO,EAAE;UAC5BnM,EAAE,CAACqP,WAAW,CAACD,MAAM,CAAC;;;;IAI5BpP,EAAE,GAAG,MAAM,IAAI,CAACyO,MAAM,CAACa,eAAe,CAACtP,EAAE,CAAC;IAC1C,MAAMuP,KAAK,GAAGvP,EAAE,CAACwM,SAAS,EAAE;IAE5B,IAAI;MACF,OAAO,MAAMgD,4BAA4B,CAAC,IAAI,CAACtE,UAAU,EAAEqE,KAAK,EAAEb,IAAI,CAAC;KACxE,CAAC,OAAOR,GAAG,EAAE;;;MAGZ,IAAIA,GAAG,YAAYuB,YAAY,EAAE;;;;;QAK/B,MAAMC,KAAK,GAAGjO,QAAW,CACvB1B,sBAAsB,CAACC,EAAE,CAAC,GACtB,EAAA2P,EAAA,GAAA3P,EAAE,CAAC4P,UAAU,MAAG,QAAAD,EAAA,uBAAAA,EAAA,EAAC,CAAC,KAAI,IAAIE,UAAU,EAAE,GACtC,CAAAC,EAAA,GAAA9P,EAAE,CAAC+P,SAAS,cAAAD,EAAA,cAAAA,EAAA,GAAI,IAAID,UAAU,EAAE,CACrC;QACD,MAAMG,MAAM,GAAGjQ,sBAAsB,CAACC,EAAE,CAAC,GAAG,CAAC,GAAGiH,SAAS;QACzD,MAAMgJ,QAAQ,GAAG,MAAM,IAAI,CAAC/E,UAAU,CAACgF,cAAc,CAACR,KAAK,EAAE;UAC3DtE,UAAU,EAAE,WAAW;UACvB+E,8BAA8B,EAAEH;QACjC,EAAC;QACF,IAAI,CAACC,QAAQ,EAAE;UACb,MAAM/B,GAAG;SACV,MAAM;UACL,MAAMZ,IAAI,GAAG,CAAA8C,EAAA,GAAAH,QAAQ,CAACI,IAAI,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,WAAW;UACvC,MAAM,CAAChD,IAAI,GAAGY,GAAG,GAAG,IAAIR,oBAAoB,CAACQ,GAAG,CAACtI,OAAO,EAAE0H,IAAI,CAAC;;OAElE,MAAM;QACL,MAAMY,GAAG;;;;EAKf;;;;;;AAMG;EACH,MAAMqC,OAAOA,CACXC,aAGG,EACH9B,IAAqB;;IAErB,IAAIA,IAAI,KAAKzH,SAAS,EAAE;MACtByH,IAAI,GAAG,IAAI,CAACA,IAAI;;IAElB,MAAMO,eAAe,GAAG,CACtB,MAAM,IAAI,CAAC/D,UAAU,CAACgE,kBAAkB,CAACR,IAAI,CAACE,mBAAmB,CAAC,EAClEO,SAAS;IAEX,IAAIsB,GAAG,GAAGD,aAAa,CAAC7Q,GAAG,CAAE2H,CAAC,IAAI;;MAChC,IAAIvH,sBAAsB,CAACuH,CAAC,CAACtH,EAAE,CAAC,EAAE;QAChC,IAAIA,EAAE,GAAyBsH,CAAC,CAACtH,EAAE;QACnC,IAAIsH,CAAC,CAAC6E,OAAO,EAAE;UACbnM,EAAE,CAACqM,IAAI,CAAC/E,CAAC,CAAC6E,OAAO,CAAC;;QAEpB,OAAOnM,EAAE;OACV,MAAM;QACL,IAAIA,EAAE,GAAgBsH,CAAC,CAACtH,EAAE;QAC1B,IAAImM,OAAO,GAAG,CAAA7H,EAAA,GAAAgD,CAAC,CAAC6E,OAAO,cAAA7H,EAAA,cAAAA,EAAA,GAAI,EAAE;QAE7BtE,EAAE,CAACgP,QAAQ,GAAG,CAAAW,EAAA,GAAA3P,EAAE,CAACgP,QAAQ,cAAAW,EAAA,cAAAA,EAAA,GAAI,IAAI,CAAClB,MAAM,CAACjM,SAAS;QAClDxC,EAAE,CAACiP,eAAe,GAAGA,eAAe;QAEpC9C,OAAO,CAAChI,OAAO,CAAEuM,EAAE,IAAI;UACrB1Q,EAAE,CAACqP,WAAW,CAACqB,EAAE,CAAC;QACpB,CAAC,CAAC;QACF,OAAO1Q,EAAE;;IAEb,CAAC,CAAC;IAEF,MAAM2Q,SAAS,GAAG,MAAM,IAAI,CAAClC,MAAM,CAACmC,mBAAmB,CAACH,GAAG,CAAC;IAE5D,MAAMI,IAAI,GAA2B,EAAE;IAEvC,KAAK,IAAI7I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyI,GAAG,CAAC/Q,MAAM,EAAEsI,CAAC,IAAI,CAAC,EAAE;MACtC,MAAMhI,EAAE,GAAG2Q,SAAS,CAAC3I,CAAC,CAAC;MACvB,MAAMuH,KAAK,GAAGvP,EAAE,CAACwM,SAAS,EAAE;MAE5B,IAAI;QACFqE,IAAI,CAACrG,IAAI,CACP,MAAMgF,4BAA4B,CAAC,IAAI,CAACtE,UAAU,EAAEqE,KAAK,EAAEb,IAAI,CAAC,CACjE;OACF,CAAC,OAAOR,GAAG,EAAE;;;QAGZ,IAAIA,GAAG,YAAYuB,YAAY,EAAE;;;;;UAK/B,MAAMC,KAAK,GAAGjO,QAAW,CACvB1B,sBAAsB,CAACC,EAAE,CAAC,GACtB,EAAAsE,EAAA,GAAAtE,EAAE,CAAC4P,UAAU,MAAG,QAAAtL,EAAA,uBAAAA,EAAA,EAAC,CAAC,KAAI,IAAIuL,UAAU,EAAE,GACtC,CAAAF,EAAA,GAAA3P,EAAE,CAAC+P,SAAS,cAAAJ,EAAA,cAAAA,EAAA,GAAI,IAAIE,UAAU,EAAE,CACrC;UACD,MAAMG,MAAM,GAAGjQ,sBAAsB,CAACC,EAAE,CAAC,GAAG,CAAC,GAAGiH,SAAS;UACzD,MAAMgJ,QAAQ,GAAG,MAAM,IAAI,CAAC/E,UAAU,CAACgF,cAAc,CAACR,KAAK,EAAE;YAC3DtE,UAAU,EAAE,WAAW;YACvB+E,8BAA8B,EAAEH;UACjC,EAAC;UACF,IAAI,CAACC,QAAQ,EAAE;YACb,MAAM/B,GAAG;WACV,MAAM;YACL,MAAMZ,IAAI,GAAG,CAAAwC,EAAA,GAAAG,QAAQ,CAACI,IAAI,cAAAP,EAAA,uBAAAA,EAAA,CAAEQ,WAAW;YACvC,MAAM,CAAChD,IAAI,GAAGY,GAAG,GAAG,IAAIR,oBAAoB,CAACQ,GAAG,CAACtI,OAAO,EAAE0H,IAAI,CAAC;;SAElE,MAAM;UACL,MAAMY,GAAG;;;;IAKf,OAAO2C,IAAI;;EAGb;;;;;;;;;AASG;EACH,MAAMC,QAAQA,CACZ9Q,EAAsC,EACtCmM,OAAkB,EAClBf,UAAuB,EACvBgB,eAAuC;IAEvC,IAAI6C,eAAe,GAAG,CACpB,MAAM,IAAI,CAAC/D,UAAU,CAACgE,kBAAkB,CACtC9D,UAAU,aAAVA,UAAU,KAAV,SAAAA,UAAU,GAAI,IAAI,CAACF,UAAU,CAACE,UAAU,CACzC,EACD+D,SAAS;IAEX,IAAIhI,MAA2D;IAC/D,IAAIpH,sBAAsB,CAACC,EAAE,CAAC,EAAE;MAC9B,IAAImM,OAAO,IAAIA,OAAO,CAACzM,MAAM,GAAG,CAAC,EAAE;QACjCM,EAAE,CAACqM,IAAI,CAACF,OAAO,CAAC;QAChBnM,EAAE,GAAG,MAAM,IAAI,CAACyO,MAAM,CAACa,eAAe,CAACtP,EAAE,CAAC;;;;MAK5CmH,MAAM,GAAG,MAAM,IAAI,CAAC+D,UAAU,CAACe,mBAAmB,CAACjM,EAAE,EAAE;QAAEoL;MAAU,CAAE,CAAC;KACvE,MAAM;MACLpL,EAAE,CAACgP,QAAQ,GAAGhP,EAAE,CAACgP,QAAQ,IAAI,IAAI,CAACP,MAAM,CAACjM,SAAS;MAClDxC,EAAE,CAACiP,eAAe,GAAGA,eAAe;MAEpC,IAAI9C,OAAO,IAAIA,OAAO,CAACzM,MAAM,GAAG,CAAC,EAAE;QACjCM,EAAE,GAAG,MAAM,IAAI,CAACyO,MAAM,CAACa,eAAe,CAACtP,EAAE,CAAC;;MAE5CmH,MAAM,GAAG,MAAM8E,mBAAmB,CAChC,IAAI,CAACf,UAAU,EACflL,EAAE,EACFmM,OAAO,EACPf,UAAU,EACVgB,eAAe,CAChB;;IAGH,IAAIjF,MAAM,CAACpB,KAAK,CAACmI,GAAG,EAAE;MACpB,MAAM,IAAI6C,aAAa,CAAC5J,MAAM,CAACpB,KAAK,CAAC;;IAGvC,OAAOoB,MAAM,CAACpB,KAAK;;AAEtB;AAED,MAAMgL,aAAc,SAAQnM,KAAK;EAC/BY,WACWA,CAAAwL,kBAAgD,EACzDpL,OAAgB;IAEhB,KAAK,CAACA,OAAO,CAAC;IAHL,IAAkB,CAAAoL,kBAAA,GAAlBA,kBAAkB;;AAK9B;AA2BD;AACA;AACA,eAAexB,4BAA4BA,CACzCtE,UAAsB,EACtB+F,cAAmC,EACnCzJ,OAAqC;EAErC,MAAM0J,WAAW,GAAgB1J,OAAO,GACpC;IACE2J,aAAa,EAAE3J,OAAO,CAAC2J,aAAa;IACpCvC,mBAAmB,EAAEpH,OAAO,CAACoH,mBAAmB,IAAIpH,OAAO,CAAC4D,UAAU;IACtEgG,UAAU,EAAE5J,OAAO,CAAC4J,UAAU;IAC9BC,cAAc,EAAE7J,OAAO,CAAC6J;EACzB,IACD,EAAE;EAEN,IAAIC,MAAuB;EAE3B,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;EAC5B,OAAOD,IAAI,CAACC,GAAG,EAAE,GAAGF,SAAS,GAAG,KAAM,EAAE;IACtC,IAAI;MACF,MAAMxB,SAAS,GAAG,MAAM7E,UAAU,CAACwG,kBAAkB,CACnDT,cAAc,EACdC,WAAW,CACZ;MAED,IAAI1J,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE2H,SAAS,EAAE;QACtB,IAAI+B,WAAW,CAACE,UAAU,KAAK,CAAC,EAAE;UAChC,MAAMO,WAAW,GAAGC,WAAW,CAACC,OAAO,CAAC,KAAM,CAAC;UAC/CP,MAAM,GAAG,CACP,MAAMpG,UAAU,CAAC4G,kBAAkB,CACjC;YAAEH,WAAW;YAAE5B,SAAS;YAAE,GAAGvI,OAAO,CAAC2H;UAAS,CAAE,EAChD3H,OAAO,IAAIA,OAAO,CAAC4D,UAAU,CAC9B,EACDrF,KAAK;SACR,MAAM;UACLuL,MAAM,GAAG,CACP,MAAMpG,UAAU,CAAC4G,kBAAkB,CACjC;YAAE/B,SAAS;YAAE,GAAGvI,OAAO,CAAC2H;UAAS,CAAE,EACnC3H,OAAO,IAAIA,OAAO,CAAC4D,UAAU,CAC9B,EACDrF,KAAK;;OAEV,MAAM;QACLuL,MAAM,GAAG,CACP,MAAMpG,UAAU,CAAC4G,kBAAkB,CACjC/B,SAAS,EACTvI,OAAO,IAAIA,OAAO,CAAC4D,UAAU,CAC9B,EACDrF,KAAK;;MAGT,IAAIuL,MAAM,CAACpD,GAAG,EAAE;QACd,MAAM,IAAIuB,YAAY,CACpB,mBAAmBM,SAAS,YAAYnJ,IAAI,CAACC,SAAS,CAACyK,MAAM,CAAC,GAAG,CAClE;;MAGH,OAAOvB,SAAS;KACjB,CAAC,OAAO7B,GAAG,EAAE;MACZ,IAAIA,GAAG,CAACnK,IAAI,KAAK,cAAc,EAAE;QAC/B;;MAEF,MAAMmK,GAAG;;;EAIb,MAAMtJ,KAAK,CAAC,sCAAsC,CAAC;AACrD;AAEA,MAAM6K,YAAa,SAAQ7K,KAAK;EAC9BY,YAAYI,OAAgB;IAC1B,KAAK,CAACA,OAAO,CAAC;;AAEjB;AAED;;AAEG;AACG,SAAUmM,WAAWA,CAACpH,QAAkB;EAC5CqH,SAAS,GAAGrH,QAAQ;AACtB;AAEA;;AAEG;SACaC,WAAWA,CAAA;EACzB,IAAIoH,SAAS,KAAK,IAAI,EAAE;IACtB,OAAOxD,cAAc,CAACK,KAAK,EAAE;;EAE/B,OAAOmD,SAAS;AAClB;AAEA;AACA,IAAIA,SAAS,GAAoB,IAAI;;;;;;;ACndrC;AACA7L,MAAM,CAAC8L,cAAc,CAACC,IAAO,EAAE,YAAY,EAAE;EAAEnM,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7D,IAAyCoM,iCAAA,GAAAD,IAAA,CAAAC,iCAAA,GAAGC,8BAAA,GAAAF,IAAA,CAAAE,8BAAsC,GAAGC,gEAAA,GAAAH,IAAA,CAAAG,gEAAwE,GAAGC,+DAAuE,GAAAJ,IAAA,CAAAI,+DAAA,GAAGC,qDAA6D,GAAAL,IAAA,CAAAK,qDAAA,GAAGC,mEAA2E,GAAAN,IAAA,CAAAM,mEAAA,GAAGC,0DAAA,GAAAP,IAAA,CAAAO,0DAAkE,GAAGC,iEAAA,GAAAR,IAAA,CAAAQ,iEAAyE,GAAGC,uDAA+D,GAAAT,IAAA,CAAAS,uDAAA,GAAGC,yEAAA,GAAAV,IAAA,CAAAU,yEAAiF,GAAGC,kEAAA,GAAAX,IAAA,CAAAW,kEAA0E,GAAGC,wDAAA,GAAAZ,IAAA,CAAAY,wDAAgE,GAAGC,2EAAA,GAAAb,IAAA,CAAAa,2EAAmF,GAAGC,sEAA8E,GAAAd,IAAA,CAAAc,sEAAA,GAAGC,4DAAA,GAAAf,IAAA,CAAAe,4DAAoE,GAAGC,mEAAA,GAAAhB,IAAA,CAAAgB,mEAA2E,GAAGC,+DAAuE,GAAAjB,IAAA,CAAAiB,+DAAA,GAAGC,qDAA6D,GAAAlB,IAAA,CAAAkB,qDAAA,GAAGC,uDAA+D,GAAAnB,IAAA,CAAAmB,uDAAA,GAAGC,2CAAA,GAAApB,IAAA,CAAAoB,2CAAmD,GAAGC,4CAAA,GAAArB,IAAA,CAAAqB,4CAAoD,GAAGC,wCAAgD,GAAAtB,IAAA,CAAAsB,wCAAA,GAAGC,8BAAA,GAAAvB,IAAA,CAAAuB,8BAAsC,GAAGC,sCAAA,GAAAxB,IAAA,CAAAwB,sCAA8C,GAAGC,8CAAA,GAAAzB,IAAA,CAAAyB,8CAAsD,GAAGC,4CAAA,GAAA1B,IAAA,CAAA0B,4CAAoD,GAAGC,oCAA4C,GAAA3B,IAAA,CAAA2B,oCAAA,GAAGC,mCAAA,GAAA5B,IAAA,CAAA4B,mCAA2C,GAAGC,6BAAA,GAAA7B,IAAA,CAAA6B,6BAAqC,GAAGC,gCAAwC,GAAA9B,IAAA,CAAA8B,gCAAA,GAAGC,8BAAsC,GAAA/B,IAAA,CAAA+B,8BAAA,GAAGC,wCAAgD,GAAAhC,IAAA,CAAAgC,wCAAA,GAAGC,mCAAA,GAAAjC,IAAA,CAAAiC,mCAA2C,GAAGC,8BAAA,GAAAlC,IAAA,CAAAkC,8BAAsC,GAAGC,mCAA2C,GAAAnC,IAAA,CAAAmC,mCAAA,GAAGC,8BAAA,GAAApC,IAAA,CAAAoC,8BAAsC,GAAGC,oCAAA,GAAArC,IAAA,CAAAqC,oCAA4C,GAAGC,8BAAA,GAAAtC,IAAA,CAAAsC,8BAAsC,GAAGC,4BAAA,GAAAvC,IAAA,CAAAuC,4BAAoC,GAAGC,+BAAuC,GAAAxC,IAAA,CAAAwC,+BAAA,GAAGC,gCAAA,GAAAzC,IAAA,CAAAyC,gCAAwC,GAAGC,4BAAA,GAAA1C,IAAA,CAAA0C,4BAAoC,GAAGC,oCAA4C,GAAA3C,IAAA,CAAA2C,oCAAA,GAAGC,mCAA2C,GAAA5C,IAAA,CAAA4C,mCAAA,GAAGC,6CAAqD,GAAA7C,IAAA,CAAA6C,6CAAA,GAAGC,kCAAA,GAAA9C,IAAA,CAAA8C,kCAA0C,GAAGC,2CAAA,GAAA/C,IAAA,CAAA+C,2CAAmD,GAAGC,6CAAA,GAAAhD,IAAA,CAAAgD,6CAAqD,GAAGC,4CAAA,GAAAjD,IAAA,CAAAiD,4CAAoD,GAAGC,iCAAyC,GAAAlD,IAAA,CAAAkD,iCAAA,GAAG,KAAK,CAAC;AAC/uF,IAAgCC,wBAAA,GAAAnD,IAAA,CAAAmD,wBAAA,GAAGC,wCAAgD,GAAApD,IAAA,CAAAoD,wCAAA,GAAGC,qDAA6D,GAAArD,IAAA,CAAAqD,qDAAA,GAAGC,0CAAA,GAAAtD,IAAA,CAAAsD,0CAAkD,GAAGC,wCAAA,GAAAvD,IAAA,CAAAuD,wCAAgD,GAAGC,2CAAA,GAAAxD,IAAA,CAAAwD,2CAAmD,GAAGC,qCAAA,GAAAzD,IAAA,CAAAyD,qCAA6C,GAAGC,kDAA0D,GAAA1D,IAAA,CAAA0D,kDAAA,GAAGC,sCAA8C,GAAA3D,IAAA,CAAA2D,sCAAA,GAAGC,qCAA6C,GAAA5D,IAAA,CAAA4D,qCAAA,GAAGC,sCAA8C,GAAA7D,IAAA,CAAA6D,sCAAA,GAAGC,gCAAwC,GAAA9D,IAAA,CAAA8D,gCAAA,GAAGC,wCAAgD,GAAA/D,IAAA,CAAA+D,wCAAA,GAAGC,gCAAwC,GAAAhE,IAAA,CAAAgE,gCAAA,GAAGC,4CAAA,GAAAjE,IAAA,CAAAiE,4CAAoD,GAAGC,iCAAA,GAAAlE,IAAA,CAAAkE,iCAAyC,GAAGC,qCAAA,GAAAnE,IAAA,CAAAmE,qCAA6C,GAAGC,uCAAA,GAAApE,IAAA,CAAAoE,uCAA+C,GAAGC,yCAAA,GAAArE,IAAA,CAAAqE,yCAAiD,GAAGC,4CAAA,GAAAtE,IAAA,CAAAsE,4CAAoD,GAAGC,6CAAA,GAAAvE,IAAA,CAAAuE,6CAAqD,GAAGC,+CAAA,GAAAxE,IAAA,CAAAwE,+CAAuD,GAAGC,kCAA0C,GAAAzE,IAAA,CAAAyE,kCAAA,GAAGC,iCAAyC,GAAA1E,IAAA,CAAA0E,iCAAA,GAAGC,uCAA+C,GAAA3E,IAAA,CAAA2E,uCAAA,GAAGC,kCAA0C,GAAA5E,IAAA,CAAA4E,kCAAA,GAAGC,sCAA8C,GAAA7E,IAAA,CAAA6E,sCAAA,GAAG,KAAK,CAAC;AAC70C;AACA,IAAyC3B,iCAAA,GAAAlD,IAAA,CAAAkD,iCAAA,GAAG,GAAG;AAC/C;AACA,IAAoDD,4CAAA,GAAAjD,IAAA,CAAAiD,4CAAA,GAAG,GAAG;AAC1D;AACA,IAAqDD,6CAAA,GAAAhD,IAAA,CAAAgD,6CAAA,GAAG,GAAG;AAC3D;AACA,IAAmDD,2CAAA,GAAA/C,IAAA,CAAA+C,2CAAA,GAAG,GAAG;AACzD;AACA;AACA,IAA0CD,kCAAA,GAAA9C,IAAA,CAAA8C,kCAAA,GAAG,IAAI;AACjD;AACA,IAAqDD,6CAAA,GAAA7C,IAAA,CAAA6C,6CAAA,GAAG,IAAI;AAC5D;AACA,IAA2CD,mCAAA,GAAA5C,IAAA,CAAA4C,mCAAA,GAAG,IAAI;AAClD;AACA;AACA,IAA4CD,oCAAA,GAAA3C,IAAA,CAAA2C,oCAAA,GAAG,IAAI;AACnD;AACA;AACA,IAAoCD,4BAAA,GAAA1C,IAAA,CAAA0C,4BAAA,GAAG,IAAI;AAC3C;AACA,IAAwCD,gCAAA,GAAAzC,IAAA,CAAAyC,gCAAA,GAAG,IAAI;AAC/C;AACA,IAAuCD,+BAAA,GAAAxC,IAAA,CAAAwC,+BAAA,GAAG,IAAI;AAC9C;AACA,IAAoCD,4BAAA,GAAAvC,IAAA,CAAAuC,4BAAA,GAAG,IAAI;AAC3C;AACA,IAAsCD,8BAAA,GAAAtC,IAAA,CAAAsC,8BAAA,GAAG,IAAI;AAC7C;AACA,IAA4CD,oCAAA,GAAArC,IAAA,CAAAqC,oCAAA,GAAG,IAAI;AACnD;AACA,IAAsCD,8BAAA,GAAApC,IAAA,CAAAoC,8BAAA,GAAG,IAAI;AAC7C;AACA,IAA2CD,mCAAA,GAAAnC,IAAA,CAAAmC,mCAAA,GAAG,IAAI;AAClD;AACA,IAAsCD,8BAAA,GAAAlC,IAAA,CAAAkC,8BAAA,GAAG,IAAI;AAC7C;AACA,IAA2CD,mCAAA,GAAAjC,IAAA,CAAAiC,mCAAA,GAAG,IAAI;AAClD;AACA,IAAgDD,wCAAA,GAAAhC,IAAA,CAAAgC,wCAAA,GAAG,IAAI;AACvD;AACA,IAAsCD,8BAAA,GAAA/B,IAAA,CAAA+B,8BAAA,GAAG,IAAI;AAC7C;AACA,IAAwCD,gCAAA,GAAA9B,IAAA,CAAA8B,gCAAA,GAAG,IAAI;AAC/C;AACA,IAAqCD,6BAAA,GAAA7B,IAAA,CAAA6B,6BAAA,GAAG,IAAI;AAC5C;AACA,IAA2CD,mCAAA,GAAA5B,IAAA,CAAA4B,mCAAA,GAAG,IAAI;AAClD;AACA,IAA4CD,oCAAA,GAAA3B,IAAA,CAAA2B,oCAAA,GAAG,IAAI;AACnD;AACA,IAAoDD,4CAAA,GAAA1B,IAAA,CAAA0B,4CAAA,GAAG,IAAI;AAC3D;AACA,IAAsDD,8CAAA,GAAAzB,IAAA,CAAAyB,8CAAA,GAAG,IAAI;AAC7D;AACA,IAA8CD,sCAAA,GAAAxB,IAAA,CAAAwB,sCAAA,GAAG,IAAI;AACrD;AACA,IAAsCD,8BAAA,GAAAvB,IAAA,CAAAuB,8BAAA,GAAG,IAAI;AAC7C;AACA,IAAgDD,wCAAA,GAAAtB,IAAA,CAAAsB,wCAAA,GAAG,IAAI;AACvD;AACA,IAAoDD,4CAAA,GAAArB,IAAA,CAAAqB,4CAAA,GAAG,IAAI;AAC3D;AACA,IAAmDD,2CAAA,GAAApB,IAAA,CAAAoB,2CAAA,GAAG,IAAI;AAC1D;AACA,IAA+DD,uDAAA,GAAAnB,IAAA,CAAAmB,uDAAA,GAAG,IAAI;AACtE;AACA,IAA6DD,qDAAA,GAAAlB,IAAA,CAAAkB,qDAAA,GAAG,IAAI;AACpE;AACA,IAAuED,+DAAA,GAAAjB,IAAA,CAAAiB,+DAAA,GAAG,IAAI;AAC9E;AACA,IAA2ED,mEAAA,GAAAhB,IAAA,CAAAgB,mEAAA,GAAG,IAAI;AAClF;AACA,IAAoED,4DAAA,GAAAf,IAAA,CAAAe,4DAAA,GAAG,IAAI;AAC3E;AACA,IAA8ED,sEAAA,GAAAd,IAAA,CAAAc,sEAAA,GAAG,IAAI;AACrF;AACA,IAAmFD,2EAAA,GAAAb,IAAA,CAAAa,2EAAA,GAAG,IAAI;AAC1F;AACA,IAAgED,wDAAA,GAAAZ,IAAA,CAAAY,wDAAA,GAAG,IAAI;AACvE;AACA,IAA0ED,kEAAA,GAAAX,IAAA,CAAAW,kEAAA,GAAG,IAAI;AACjF;AACA,IAAiFD,yEAAA,GAAAV,IAAA,CAAAU,yEAAA,GAAG,IAAI;AACxF;AACA,IAA+DD,uDAAA,GAAAT,IAAA,CAAAS,uDAAA,GAAG,IAAI;AACtE;AACA,IAAyED,iEAAA,GAAAR,IAAA,CAAAQ,iEAAA,GAAG,IAAI;AAChF;AACA,IAAkED,0DAAA,GAAAP,IAAA,CAAAO,0DAAA,GAAG,IAAI;AACzE;AACA,IAA2ED,mEAAA,GAAAN,IAAA,CAAAM,mEAAA,GAAG,IAAI;AAClF;AACA,IAA6DD,qDAAA,GAAAL,IAAA,CAAAK,qDAAA,GAAG,IAAI;AACpE;AACA,IAAuED,+DAAA,GAAAJ,IAAA,CAAAI,+DAAA,GAAG,IAAI;AAC9E;AACA,IAAwED,gEAAA,GAAAH,IAAA,CAAAG,gEAAA,GAAG,IAAI;AAC/E;AACA;AACA,IAAsCD,8BAAA,GAAAF,IAAA,CAAAE,8BAAA,GAAG,IAAI;AAC7C;AACAD,iCAAyC,GAAAD,IAAA,CAAAC,iCAAA,GAAG,IAAI;AAChD;AACA,IAA8C4E,sCAAA,GAAA7E,IAAA,CAAA6E,sCAAA,GAAG,IAAI;AACrD;AACA,IAA0CD,kCAAA,GAAA5E,IAAA,CAAA4E,kCAAA,GAAG,IAAI;AACjD;AACA,IAA+CD,uCAAA,GAAA3E,IAAA,CAAA2E,uCAAA,GAAG,IAAI;AACtD;AACA,IAAyCD,iCAAA,GAAA1E,IAAA,CAAA0E,iCAAA,GAAG,IAAI;AAChD;AACA,IAA0CD,kCAAA,GAAAzE,IAAA,CAAAyE,kCAAA,GAAG,IAAI;AACjD;AACA;AACA,IAAuDD,+CAAA,GAAAxE,IAAA,CAAAwE,+CAAA,GAAG,IAAI;AAC9D;AACA,IAAqDD,6CAAA,GAAAvE,IAAA,CAAAuE,6CAAA,GAAG,IAAI;AAC5D;AACA,IAAoDD,4CAAA,GAAAtE,IAAA,CAAAsE,4CAAA,GAAG,IAAI;AAC3D;AACA,IAAiDD,yCAAA,GAAArE,IAAA,CAAAqE,yCAAA,GAAG,IAAI;AACxD;AACA,IAA+CD,uCAAA,GAAApE,IAAA,CAAAoE,uCAAA,GAAG,IAAI;AACtD;AACA,IAA6CD,qCAAA,GAAAnE,IAAA,CAAAmE,qCAAA,GAAG,IAAI;AACpD;AACA,IAAyCD,iCAAA,GAAAlE,IAAA,CAAAkE,iCAAA,GAAG,IAAI;AAChD;AACA,IAAoDD,4CAAA,GAAAjE,IAAA,CAAAiE,4CAAA,GAAG,IAAI;AAC3D;AACA,IAAwCD,gCAAA,GAAAhE,IAAA,CAAAgE,gCAAA,GAAG,IAAI;AAC/C;AACA,IAAgDD,wCAAA,GAAA/D,IAAA,CAAA+D,wCAAA,GAAG,IAAI;AACvD;AACA,IAAwCD,gCAAA,GAAA9D,IAAA,CAAA8D,gCAAA,GAAG,IAAI;AAC/C;AACA,IAA8CD,sCAAA,GAAA7D,IAAA,CAAA6D,sCAAA,GAAG,IAAI;AACrD;AACA,IAA6CD,qCAAA,GAAA5D,IAAA,CAAA4D,qCAAA,GAAG,IAAI;AACpD;AACA,IAA8CD,sCAAA,GAAA3D,IAAA,CAAA2D,sCAAA,GAAG,IAAI;AACrD;AACA,IAA0DD,kDAAA,GAAA1D,IAAA,CAAA0D,kDAAA,GAAG,IAAI;AACjE;AACA,IAA6CD,qCAAA,GAAAzD,IAAA,CAAAyD,qCAAA,GAAG,IAAI;AACpD;AACA,IAAmDD,2CAAA,GAAAxD,IAAA,CAAAwD,2CAAA,GAAG,IAAI;AAC1D;AACA,IAAgDD,wCAAA,GAAAvD,IAAA,CAAAuD,wCAAA,GAAG,IAAI;AACvD;AACA;AACA,IAAkDD,0CAAA,GAAAtD,IAAA,CAAAsD,0CAAA,GAAG,IAAI;AACzD;AACA,IAA6DD,qDAAA,GAAArD,IAAA,CAAAqD,qDAAA,GAAG,IAAI;AACpE;AACA,IAAgDD,wCAAA,GAAApD,IAAA,CAAAoD,wCAAA,GAAG,IAAI;AACvD;AACA;AACAD,wBAAgC,GAAAnD,IAAA,CAAAmD,wBAAA,GAAG,IAAI;ACrKvC,MAAM2B,mBAAmB,GAAG,IAAI3O,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;AAEnD,MAAM4O,SAAS,GAAG,IAAI/S,GAAG,EAAE;AAErB,SAAUK,GAAGA,CAAC1D,GAAW;EAC7B,IAAI,CAACmW,mBAAmB,CAACE,GAAG,CAACrW,GAAG,CAAC,EAAE;IACjC,MAAM,IAAI+D,KAAK,CAAC,iBAAiB,CAAC;;EAEpCqS,SAAS,CAAC1S,GAAG,CAAC1D,GAAG,EAAE,IAAI,CAAC;AAC1B;AAEM,SAAUsW,KAAKA,CAACtW,GAAW;EAC/B,OAAOoW,SAAS,CAACG,GAAG,CAACvW,GAAG,CAAC,KAAKoG,SAAS;AACzC;;;;;;ACTM,MAAOoQ,QAAS,SAAQzS,KAAK;EACjCY,YAAYI,OAAe;IACzB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAAC7B,IAAI,GAAG,UAAU;;AAEzB;MAiBYuT,iBAAiB;EAC5B9R,YAAqB+R,KAAkB;IAAlB,IAAK,CAAAA,KAAA,GAALA,KAAK;;EAEnB,OAAOC,KAAKA,CAAClK,IAAc;;IAChC,MAAMmK,eAAe,GAAG,uBAAuB;IAC/C,MAAMC,YAAY,GAAG,sBAAsB;IAE3C,MAAMC,YAAY,GAAgB,EAAE;IACpC,KAAK,IAAItO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiE,IAAI,CAAC5N,MAAM,EAAE2J,CAAC,EAAE,EAAE;MACpC,IAAIqO,YAAY,CAACE,IAAI,CAACtK,IAAI,CAACjE,CAAC,CAAC,CAAC,EAAE;QAC9BsO,YAAY,CAACE,GAAG,EAAE;QAClB;;MAGF,MAAMC,UAAU,GAAG,CAAAxT,EAAA,GAAAmT,eAAe,CAACG,IAAI,CAACtK,IAAI,CAACjE,CAAC,CAAC,CAAC,MAAG,QAAA/E,EAAA,uBAAAA,EAAA,EAAC,CAAC;MACrD,IAAI,CAACwT,UAAU,EAAE;QACf;;MAEFH,YAAY,CAACnN,IAAI,CAAC,IAAIvI,SAAS,CAAC6V,UAAU,CAAC,CAAC;;IAE9C,OAAO,IAAIR,iBAAiB,CAACK,YAAY,CAAC;;AAE7C;AAEK,MAAOI,WAAY,SAAQnT,KAAK;EASpCY,WACEA,CAAAwS,SAAoB,EACpBC,YAAoB,EACXC,SAAmB,EACnB5K,IAAc,EACvB6K,MAAe,EACfC,cAA+B;IAE/B,KAAK,CAACF,SAAS,CAAChV,IAAI,CAAC,IAAI,CAAC,CAACmV,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;IAL/C,IAAS,CAAAH,SAAA,GAATA,SAAS;IACT,IAAI,CAAA5K,IAAA,GAAJA,IAAI;IAKb,IAAI,CAACrE,KAAK,GAAG;MAAE+O,SAAS;MAAEC,YAAY;MAAEG,cAAc;MAAED;IAAM,CAAE;IAChE,IAAI,CAACG,kBAAkB,GAAGhB,iBAAiB,CAACE,KAAK,CAAClK,IAAI,CAAC;;EAGlD,OAAOkK,KAAKA,CAAClK,IAAc;IAChC,IAAI,CAACA,IAAI,EAAE;MACT,OAAO,IAAI;;IAGb,MAAMiL,mBAAmB,GAAGjL,IAAI,CAACkL,SAAS,CAAEC,GAAG,IAC7CA,GAAG,CAACC,UAAU,CAAC,0BAA0B,CAAC,CAC3C;IACD,IAAIH,mBAAmB,KAAK,CAAC,CAAC,EAAE;MAC9B,OAAO,IAAI;;IAEb,MAAMI,cAAc,GAAGrL,IAAI,CAACiL,mBAAmB,CAAC;IAChD,MAAML,SAAS,GAAG,CAACS,cAAc,CAAC;IAClC,IAAIP,cAA0C;IAC9C,IAAIG,mBAAmB,GAAG,CAAC,GAAGjL,IAAI,CAAC5N,MAAM,EAAE;;;;;;;MAOzC,IAAI4N,IAAI,CAACiL,mBAAmB,GAAG,CAAC,CAAC,KAAK,oBAAoB,EAAE;QAC1D,MAAMK,WAAW,GAAG,qBAAqB;QACzC,MAAMC,UAAU,GAAGD,WAAW,CAAChB,IAAI,CAACtK,IAAI,CAACiL,mBAAmB,GAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;QACtE,MAAMO,WAAW,GAAGF,WAAW,CAAChB,IAAI,CAACtK,IAAI,CAACiL,mBAAmB,GAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;QACvEH,cAAc,GAAG,CACf,IAAInW,SAAS,CAAC4W,UAAU,CAAC,EACzB,IAAI5W,SAAS,CAAC6W,WAAW,CAAC,CAC3B;QACDZ,SAAS,CAAC1N,IAAI,CACZ,GAAG8C,IAAI,CAACxN,KAAK,CAACyY,mBAAmB,GAAG,CAAC,EAAEA,mBAAmB,GAAG,CAAC,CAAC,CAChE;;;;;;WAME,IAAIjL,IAAI,CAACiL,mBAAmB,GAAG,CAAC,CAAC,CAACG,UAAU,CAAC,oBAAoB,CAAC,EAAE;QACvE,MAAMK,UAAU,GAAG,mCAAmC;QACtD,MAAMC,SAAS,GAAGD,UAAU,CAACnB,IAAI,CAACtK,IAAI,CAACiL,mBAAmB,GAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;QACpE,MAAMU,UAAU,GAAGF,UAAU,CAACnB,IAAI,CAACtK,IAAI,CAACiL,mBAAmB,GAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;QACrEL,SAAS,CAAC1N,IAAI,CACZ,GAAG8C,IAAI,CAACxN,KAAK,CAACyY,mBAAmB,GAAG,CAAC,EAAEA,mBAAmB,GAAG,CAAC,CAAC,CAChE;QACDH,cAAc,GAAG,CAACY,SAAS,EAAEC,UAAU,CAAC;;;IAG5C,MAAMC,WAAW,GACf,qGAAqG;IACvG,MAAMC,oBAAoB,GAAGD,WAAW,CAACtB,IAAI,CAACe,cAAc,CAAC;IAC7D,MAAMS,aAAa,GACjB,iHAAiH;IACnH,MAAMC,sBAAsB,GAAGD,aAAa,CAACxB,IAAI,CAACe,cAAc,CAAC;IACjE,MAAMW,gBAAgB,GACpB,oHAAoH;IACtH,MAAMC,yBAAyB,GAAGD,gBAAgB,CAAC1B,IAAI,CAACe,cAAc,CAAC;IACvE,IAAIQ,oBAAoB,EAAE;MACxB,MAAM,CAACK,eAAe,EAAEC,WAAW,EAAExB,YAAY,CAAC,GAChDkB,oBAAoB,CAACrZ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAClC,MAAMkY,SAAS,GAAG;QAChBxT,IAAI,EAAEgV,eAAe;QACrB7P,MAAM,EAAE1I,QAAQ,CAACwY,WAAW;OAC7B;MACD,OAAO,IAAI1B,WAAW,CACpBC,SAAS,EACTC,YAAY,EACZC,SAAS,EACT5K,IAAI,EACJrG,SAAS,EACTmR,cAAc,CACf;KACF,MAAM,IAAIiB,sBAAsB,EAAE;MACjC,MAAM,CAACK,IAAI,EAAEC,IAAI,EAAEH,eAAe,EAAEC,WAAW,EAAExB,YAAY,CAAC,GAC5DoB,sBAAsB,CAACvZ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACpC,MAAMkY,SAAS,GAAG;QAChBxT,IAAI,EAAEgV,eAAe;QACrB7P,MAAM,EAAE1I,QAAQ,CAACwY,WAAW;OAC7B;MACD,MAAMG,QAAQ,GAAG;QAAEF,IAAI;QAAEC,IAAI,EAAE1Y,QAAQ,CAAC0Y,IAAI;MAAC,CAAE;MAC/C,OAAO,IAAI5B,WAAW,CACpBC,SAAS,EACTC,YAAY,EACZC,SAAS,EACT5K,IAAI,EACJsM,QAAQ,EACRxB,cAAc,CACf;KACF,MAAM,IAAImB,yBAAyB,EAAE;MACpC,MAAM,CAACM,WAAW,EAAEL,eAAe,EAAEC,WAAW,EAAExB,YAAY,CAAC,GAC7DsB,yBAAyB,CAACzZ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACvC,MAAMqY,MAAM,GAAG0B,WAAW;MAC1B,MAAM7B,SAAS,GAAG;QAChBxT,IAAI,EAAEgV,eAAe;QACrB7P,MAAM,EAAE1I,QAAQ,CAACwY,WAAW;OAC7B;MACD,OAAO,IAAI1B,WAAW,CACpBC,SAAS,EACTC,YAAY,EACZC,SAAS,EACT5K,IAAI,EACJ6K,MAAM,EACNC,cAAc,CACf;KACF,MAAM;MACL,OAAO,IAAI;;;EAIf,IAAI0B,OAAOA,CAAA;IACT,OAAO,IAAI,CAACxB,kBAAkB,CAACf,KAAK,CAClC,IAAI,CAACe,kBAAkB,CAACf,KAAK,CAAC7X,MAAM,GAAG,CAAC,CACzC;;EAGH,IAAIqa,iBAAiBA,CAAA;IACnB,OAAO,IAAI,CAACzB,kBAAkB,CAACf,KAAK;;EAG/BhX,QAAQA,CAAA;IACb,OAAO,IAAI,CAACqF,OAAO;;AAEtB;AAED;AACM,MAAOoU,YAAa,SAAQpV,KAAK;EAGrCY,YACWhB,IAAY,EACZH,GAAW,EACXiJ,IAAe;IAExB,KAAK,EAAE;IAJE,IAAI,CAAA9I,IAAA,GAAJA,IAAI;IACJ,IAAG,CAAAH,GAAA,GAAHA,GAAG;IACH,IAAI,CAAAiJ,IAAA,GAAJA,IAAI;IAGb,IAAIA,IAAI,EAAE;MACR,IAAI,CAACgL,kBAAkB,GAAGhB,iBAAiB,CAACE,KAAK,CAAClK,IAAI,CAAC;;;EAIpD,OAAOkK,KAAKA,CACjBtJ,GAAQ,EACR+L,SAA8B;IAE9B,MAAMC,SAAS,GAAWhM,GAAG,CAAC3N,QAAQ,EAAE;;;IAGxC,IAAI4Z,iBAAyB;IAC7B,IAAID,SAAS,CAAC5W,QAAQ,CAAC,uBAAuB,CAAC,EAAE;MAC/C,IAAI8W,UAAU,GAAGF,SAAS,CAAClX,KAAK,CAAC,wBAAwB,CAAC;MAC1D,IAAIoX,UAAU,CAAC1a,MAAM,KAAK,CAAC,EAAE;QAC3B,OAAO,IAAI;OACZ,MAAM;QACLya,iBAAiB,GAAGC,UAAU,CAAC,CAAC,CAAC;;KAEpC,MAAM;MACL,MAAMC,OAAO,GAAGH,SAAS,CAACpZ,KAAK,CAAC,qBAAqB,CAAC;MACtD,IAAI,CAACuZ,OAAO,IAAIA,OAAO,CAAC3a,MAAM,GAAG,CAAC,EAAE;QAClC,OAAO,IAAI;;MAEbya,iBAAiB,GAAGE,OAAO,CAAC,CAAC,CAAC,CAACvZ,KAAK,CAAC,WAAW,CAAE,CAAC,CAAC,CAAC;;IAGvD,IAAIkX,SAAiB;IACrB,IAAI;MACFA,SAAS,GAAG/W,QAAQ,CAACkZ,iBAAiB,CAAC;KACxC,CAAC,OAAOG,QAAQ,EAAE;MACjB,OAAO,IAAI;;;IAIb,IAAIC,QAAQ,GAAGN,SAAS,CAAC7C,GAAG,CAACY,SAAS,CAAC;IACvC,IAAIuC,QAAQ,KAAKtT,SAAS,EAAE;MAC1B,OAAO,IAAI+S,YAAY,CAAChC,SAAS,EAAEuC,QAAQ,EAAErM,GAAG,CAACZ,IAAI,CAAC;;;IAIxDiN,QAAQ,GAAGC,gBAAgB,CAACpD,GAAG,CAACY,SAAS,CAAC;IAC1C,IAAIuC,QAAQ,KAAKtT,SAAS,EAAE;MAC1B,OAAO,IAAI+S,YAAY,CAAChC,SAAS,EAAEuC,QAAQ,EAAErM,GAAG,CAACZ,IAAI,CAAC;;;IAIxD,OAAO,IAAI;;EAGb,IAAIwM,OAAOA,CAAA;;IACT,OAAO,CAAAxV,EAAA,OAAI,CAACgU,kBAAkB,cAAAhU,EAAA,uBAAAA,EAAA,CAAEiT,KAAK,CACnC,IAAI,CAACe,kBAAkB,CAACf,KAAK,CAAC7X,MAAM,GAAG,CAAC,CACzC;;EAGH,IAAIqa,iBAAiBA,CAAA;;IACnB,OAAO,CAAAzV,EAAA,OAAI,CAACgU,kBAAkB,cAAAhU,EAAA,uBAAAA,EAAA,CAAEiT,KAAK;;EAGhChX,QAAQA,CAAA;IACb,OAAO,IAAI,CAAC8D,GAAG;;AAElB;AAEe,SAAAoW,cAAcA,CAACvM,GAAQ,EAAE+L,SAA8B;EACrE,IAAI9C,KAAc,CAAC,YAAY,CAAC,EAAE;IAChC1J,OAAO,CAACgL,GAAG,CAAC,oBAAoB,EAAEvK,GAAG,CAAC;;EAGxC,MAAMwM,WAAW,GAAG3C,WAAW,CAACP,KAAK,CAACtJ,GAAG,CAACZ,IAAI,CAAC;EAC/C,IAAIoN,WAAW,EAAE;IACf,OAAOA,WAAW;;EAGpB,MAAMC,YAAY,GAAGX,YAAY,CAACxC,KAAK,CAACtJ,GAAG,EAAE+L,SAAS,CAAC;EACvD,IAAIU,YAAY,EAAE;IAChB,OAAOA,YAAY;;EAErB,IAAIzM,GAAG,CAACZ,IAAI,EAAE;IACZ,MAAMsN,OAAO,GAAG;MACdxD,GAAG,EAAE,SAAAA,CAAUyD,MAAM,EAAEC,IAAI;QACzB,IAAIA,IAAI,KAAK,mBAAmB,EAAE;UAChC,OAAOD,MAAM,CAACd,iBAAiB,CAACxC,KAAK;SACtC,MAAM,IAAIuD,IAAI,KAAK,SAAS,EAAE;UAC7B,OAAOD,MAAM,CAACd,iBAAiB,CAACxC,KAAK,CACnCrJ,GAAG,CAAC6L,iBAAiB,CAACxC,KAAK,CAAC7X,MAAM,GAAG,CAAC,CACvC;SACF,MAAM;;;;UAIL,OAAOqb,OAAO,CAAC3D,GAAG,CAAC,GAAG4D,SAAS,CAAC;;;KAGrC;IACD9M,GAAG,CAAC6L,iBAAiB,GAAGzC,iBAAiB,CAACE,KAAK,CAACtJ,GAAG,CAACZ,IAAI,CAAC;IACzD,OAAO,IAAI2N,KAAK,CAAC/M,GAAG,EAAE0M,OAAO,CAAC;;EAEhC,OAAO1M,GAAG;AACZ;AAEa,MAAAgN,aAAa,GAAG;;EAE3BC,kBAAkB,EAAE/F,iCAAwC;EAC5DgG,2BAA2B,EACzBjG,4CAAmD;EACrDkG,4BAA4B,EAC1BnG,6CAAoD;EACtDoG,0BAA0B,EACxBrG,2CAAkD;;EAGpDsG,kBAAkB,EAAEvG,kCAAyC;EAC7DwG,4BAA4B,EAC1BzG,6CAAoD;EACtD0G,kBAAkB,EAAE3G,mCAA0C;;EAG9D4G,oBAAoB,EAAE7G,oCAA2C;;EAGjE8G,aAAa,EAAE/G,4BAAmC;EAClDgH,gBAAgB,EAAEjH,gCAAuC;EACzDkH,gBAAgB,EAAEnH,+BAAsC;EACxDoH,aAAa,EAAErH,4BAAmC;EAClDsH,eAAe,EAAEvH,8BAAqC;EACtDwH,oBAAoB,EAAEzH,oCAA2C;EACjE0H,eAAe,EAAE3H,8BAAqC;EACtD4H,oBAAoB,EAAE7H,mCAA0C;EAChE8H,eAAe,EAAE/H,8BAAqC;EACtDgI,oBAAoB,EAAEjI,mCAA0C;EAChEkI,wBAAwB,EAAEnI,wCAA+C;EACzEoI,eAAe,EAAErI,8BAAqC;EACtDsI,iBAAiB,EAAEvI,gCAAuC;EAC1DwI,cAAc,EAAEzI,6BAAoC;EACpD0I,mBAAmB,EAAE3I,mCAA0C;EAC/D4I,oBAAoB,EAAE7I,oCAA2C;EACjE8I,2BAA2B,EACzB/I,4CAAmD;EACrDgJ,6BAA6B,EAC3BjJ,8CAAqD;EACvDkJ,sBAAsB,EAAEnJ,sCAA6C;EACrEoJ,eAAe,EAAErJ,8BAAqC;EACtDsJ,uBAAuB,EAAEvJ,wCAA+C;EACxEwJ,2BAA2B,EACzBzJ,4CAAmD;EACrD0J,0BAA0B,EACxB3J,2CAAkD;EACpD4J,qCAAqC,EACnC7J,uDAA8D;EAChE8J,mCAAmC,EACjC/J,qDAA4D;EAC9DgK,4CAA4C,EAC1CjK,+DAAsE;EACxEkK,+CAA+C,EAC7CnK,mEAA0E;EAC5EoK,yCAAyC,EACvCrK,4DAAmE;EACrEsK,kDAAkD,EAChDvK,sEAA6E;EAC/EwK,sDAAsD,EACpDzK,2EAAkF;EACpF0K,sCAAsC,EACpC3K,wDAA+D;EACjE4K,+CAA+C,EAC7C7K,kEAAyE;EAC3E8K,qDAAqD,EACnD/K,yEAAgF;EAClFgL,qCAAqC,EACnCjL,uDAA8D;EAChEkL,8CAA8C,EAC5CnL,iEAAwE;EAC1EoL,wCAAwC,EACtCrL,0DAAiE;EACnEsL,gDAAgD,EAC9CvL,mEAA0E;EAC5EwL,mCAAmC,EACjCzL,qDAA4D;EAC9D0L,4CAA4C,EAC1C3L,+DAAsE;EACxE4L,4CAA4C,EAC1C7L,gEAAuE;;EAGzE8L,eAAe,EAAE/L,8BAAqC;EACtDgM,iBAAiB,EAAEjM,iCAAwC;EAC3DkM,qBAAqB,EAAEtH,sCAA6C;EACpEuH,kBAAkB,EAAExH,kCAAyC;EAC7DyH,sBAAsB,EAAE1H,uCAA8C;EACtE2H,iBAAiB,EAAE5H,iCAAwC;EAC3D6H,kBAAkB,EAAE9H,kCAAyC;;EAG7D+H,8BAA8B,EAC5BhI,+CAAsD;EACxDiI,4BAA4B,EAC1BlI,6CAAoD;EACtDmI,4BAA4B,EAC1BpI,4CAAmD;EACrDqI,wBAAwB,EAAEtI,yCAAgD;EAC1EuI,sBAAsB,EAAExI,uCAA8C;EACtEyI,oBAAoB,EAAE1I,qCAA4C;EAClE2I,iBAAiB,EAAE5I,iCAAwC;EAC3D6I,0BAA0B,EACxB9I,4CAAmD;EACrD+I,gBAAgB,EAAEhJ,gCAAuC;EACzDiJ,wBAAwB,EAAElJ,wCAA+C;EACzEmJ,gBAAgB,EAAEpJ,gCAAuC;EACzDqJ,qBAAqB,EAAEtJ,sCAA6C;EACpEuJ,qBAAqB,EAAExJ,qCAA4C;EACnEyJ,qBAAqB,EAAE1J,sCAA6C;EACpE2J,gCAAgC,EAC9B5J,kDAAyD;EAC3D6J,qBAAqB,EAAE9J,qCAA4C;EACnE+J,0BAA0B,EACxBhK,2CAAkD;EACpDiK,wBAAwB,EAAElK,wCAA+C;;EAGzEmK,yBAAyB,EAAEpK,0CAAiD;EAC5EqK,iCAAiC,EAC/BtK,qDAA4D;EAC9DuK,wBAAwB,EAAExK,wCAA+C;;EAGzEyK,UAAU,EAAE1K;;AAGD,MAAAmF,gBAAgB,GAAG,IAAItW,GAAG,CAAiB;;AAEtD,CAACgX,aAAa,CAACC,kBAAkB,EAAE,wCAAwC,CAAC,EAC5E,CACED,aAAa,CAACE,2BAA2B,EACzC,sCAAsC,CACvC,EACD,CACEF,aAAa,CAACG,4BAA4B,EAC1C,yDAAyD,CAC1D,EACD,CACEH,aAAa,CAACI,0BAA0B,EACxC,uDAAuD,CACxD;;AAGD,CACEJ,aAAa,CAACK,kBAAkB,EAChC,mDAAmD,CACpD,EACD,CACEL,aAAa,CAACM,4BAA4B,EAC1C,sEAAsE,CACvE,EACD,CACEN,aAAa,CAACO,kBAAkB,EAChC,iEAAiE,CAClE;;AAGD,CACEP,aAAa,CAACQ,oBAAoB,EAClC,sDAAsD,CACvD;;AAGD,CAACR,aAAa,CAACS,aAAa,EAAE,+BAA+B,CAAC,EAC9D,CAACT,aAAa,CAACU,gBAAgB,EAAE,mCAAmC,CAAC,EACrE,CAACV,aAAa,CAACW,gBAAgB,EAAE,kCAAkC,CAAC,EACpE,CAACX,aAAa,CAACY,aAAa,EAAE,+BAA+B,CAAC,EAC9D,CAACZ,aAAa,CAACa,eAAe,EAAE,kCAAkC,CAAC,EACnE,CACEb,aAAa,CAACc,oBAAoB,EAClC,0CAA0C,CAC3C,EACD,CAACd,aAAa,CAACe,eAAe,EAAE,iCAAiC,CAAC,EAClE,CAACf,aAAa,CAACgB,oBAAoB,EAAE,uCAAuC,CAAC,EAC7E,CACEhB,aAAa,CAACiB,eAAe,EAC7B,4DAA4D,CAC7D,EACD,CAACjB,aAAa,CAACkB,oBAAoB,EAAE,uCAAuC,CAAC,EAC7E,CACElB,aAAa,CAACmB,wBAAwB,EACtC,4CAA4C,CAC7C,EACD,CAACnB,aAAa,CAACoB,eAAe,EAAE,iCAAiC,CAAC,EAClE,CAACpB,aAAa,CAACqB,iBAAiB,EAAE,oCAAoC,CAAC,EACvE,CAACrB,aAAa,CAACsB,cAAc,EAAE,oCAAoC,CAAC,EACpE,CAACtB,aAAa,CAACuB,mBAAmB,EAAE,sCAAsC,CAAC,EAC3E,CAACvB,aAAa,CAACwB,oBAAoB,EAAE,uCAAuC,CAAC,EAC7E,CACExB,aAAa,CAACyB,2BAA2B,EACzC,+CAA+C,CAChD,EACD,CACEzB,aAAa,CAAC0B,6BAA6B,EAC3C,iDAAiD,CAClD,EACD,CACE1B,aAAa,CAAC2B,sBAAsB,EACpC,yCAAyC,CAC1C,EACD,CAAC3B,aAAa,CAAC4B,eAAe,EAAE,iCAAiC,CAAC,EAClE,CACE5B,aAAa,CAAC6B,uBAAuB,EACrC,+CAA+C,CAChD,EACD,CACE7B,aAAa,CAAC8B,2BAA2B,EACzC,uDAAuD,CACxD,EACD,CACE9B,aAAa,CAAC+B,0BAA0B,EACxC,8CAA8C,CAC/C,EACD,CACE/B,aAAa,CAACgC,qCAAqC,EACnD,mEAAmE,CACpE,EACD,CACEhC,aAAa,CAACiC,mCAAmC,EACjD,mDAAmD,CACpD,EACD,CACEjC,aAAa,CAACkC,4CAA4C,EAC1D,6DAA6D,CAC9D,EACD,CACElC,aAAa,CAACmC,+CAA+C,EAC7D,iEAAiE,CAClE,EACD,CACEnC,aAAa,CAACoC,yCAAyC,EACvD,0DAA0D,CAC3D,EACD,CACEpC,aAAa,CAACqC,kDAAkD,EAChE,oEAAoE,CACrE,EACD,CACErC,aAAa,CAACsC,sDAAsD,EACpE,wEAAwE,CACzE,EACD,CACEtC,aAAa,CAACuC,sCAAsC,EACpD,sDAAsD,CACvD,EACD,CACEvC,aAAa,CAACwC,+CAA+C,EAC7D,gEAAgE,CACjE,EACD,CACExC,aAAa,CAACyC,qDAAqD,EACnE,uEAAuE,CACxE,EACD,CACEzC,aAAa,CAAC0C,qCAAqC,EACnD,2CAA2C,CAC5C,EACD,CACE1C,aAAa,CAAC2C,8CAA8C,EAC5D,+DAA+D,CAChE,EACD,CACE3C,aAAa,CAAC4C,wCAAwC,EACtD,wDAAwD,CACzD,EACD,CACE5C,aAAa,CAAC6C,gDAAgD,EAC9D,iEAAiE,CAClE,EACD,CACE7C,aAAa,CAAC8C,mCAAmC,EACjD,mDAAmD,CACpD,EACD,CACE9C,aAAa,CAAC+C,4CAA4C,EAC1D,6DAA6D,CAC9D,EACD,CACE/C,aAAa,CAACgD,4CAA4C,EAC1D,4EAA4E,CAC7E;;AAGD,CAAChD,aAAa,CAACiD,eAAe,EAAE,mCAAmC,CAAC,EACpE,CAACjD,aAAa,CAACkD,iBAAiB,EAAE,sCAAsC,CAAC,EACzE,CACElD,aAAa,CAACmD,qBAAqB,EACnC,2CAA2C,CAC5C,EACD,CAACnD,aAAa,CAACoD,kBAAkB,EAAE,uCAAuC,CAAC,EAC3E,CACEpD,aAAa,CAACqD,sBAAsB,EACpC,4CAA4C,CAC7C,EACD,CAACrD,aAAa,CAACsD,iBAAiB,EAAE,sCAAsC,CAAC,EACzE,CAACtD,aAAa,CAACuD,kBAAkB,EAAE,uCAAuC,CAAC;;AAG3E,CACEvD,aAAa,CAACwD,8BAA8B,EAC5C,2DAA2D,CAC5D,EACD,CACExD,aAAa,CAACyD,4BAA4B,EAC1C,2CAA2C,CAC5C,EACD,CACEzD,aAAa,CAAC0D,4BAA4B,EAC1C,uDAAuD,CACxD,EACD,CAAC1D,aAAa,CAAC2D,wBAAwB,EAAE,mCAAmC,CAAC,EAC7E,CAAC3D,aAAa,CAAC4D,sBAAsB,EAAE,iCAAiC,CAAC,EACzE,CACE5D,aAAa,CAAC6D,oBAAoB,EAClC,kDAAkD,CACnD,EACD,CAAC7D,aAAa,CAAC8D,iBAAiB,EAAE,kCAAkC,CAAC,EACrE,CACE9D,aAAa,CAAC+D,0BAA0B,EACxC,iEAAiE,CAClE,EACD,CAAC/D,aAAa,CAACgE,gBAAgB,EAAE,gCAAgC,CAAC,EAClE,CAAChE,aAAa,CAACiE,wBAAwB,EAAE,mCAAmC,CAAC,EAC7E,CAACjE,aAAa,CAACkE,gBAAgB,EAAE,gCAAgC,CAAC,EAClE,CACElE,aAAa,CAACmE,qBAAqB,EACnC,sDAAsD,CACvD,EACD,CACEnE,aAAa,CAACoE,qBAAqB,EACnC,6DAA6D,CAC9D,EACD,CACEpE,aAAa,CAACqE,qBAAqB,EACnC,iDAAiD,CAClD,EACD,CACErE,aAAa,CAACsE,gCAAgC,EAC9C,uDAAuD,CACxD,EACD,CACEtE,aAAa,CAACuE,qBAAqB,EACnC,yDAAyD,CAC1D,EACD,CACEvE,aAAa,CAACwE,0BAA0B,EACxC,wEAAwE,CACzE,EACD,CACExE,aAAa,CAACyE,wBAAwB,EACtC,2DAA2D,CAC5D;;AAGD,CACEzE,aAAa,CAAC0E,yBAAyB,EACvC,8DAA8D,CAC/D,EACD,CACE1E,aAAa,CAAC2E,iCAAiC,EAC/C,yEAAyE,CAC1E,EACD,CACE3E,aAAa,CAAC4E,wBAAwB,EACtC,uGAAuG,CACxG;;AAGD,CACE5E,aAAa,CAAC6E,UAAU,EACxB,+DAA+D,CAChE,CACF;MC1pBYC,QAAQ;EACZ,OAAOC,WAAWA,CACvBC,KAAmB,EACnBC,KAAsB,KAAE,EACxBC,WAAoC;IAEpC,MAAMC,SAAS,GAAGH,KAAK,CAACnc,IAAI;IAC5B,QAAQmc,KAAK,CAACla,IAAI;MAChB,KAAK,MAAM;QAAE;UACX,OAAO1D,KAAK,CAACge,IAAI,CAACD,SAAS,CAAC;;MAE9B,KAAK,IAAI;QAAE;UACT,OAAO/d,KAAK,CAACie,EAAE,CAACF,SAAS,CAAC;;MAE5B,KAAK,IAAI;QAAE;UACT,OAAO/d,KAAK,CAACke,EAAE,CAACH,SAAS,CAAC;;MAE5B,KAAK,KAAK;QAAE;UACV,OAAO/d,KAAK,CAACme,GAAG,CAACJ,SAAS,CAAC;;MAE7B,KAAK,KAAK;QAAE;UACV,OAAO/d,KAAK,CAACoe,GAAG,CAACL,SAAS,CAAC;;MAE7B,KAAK,KAAK;QAAE;UACV,OAAO/d,KAAK,CAACqe,GAAG,CAACN,SAAS,CAAC;;MAE7B,KAAK,KAAK;QAAE;UACV,OAAO/d,KAAK,CAACse,GAAG,CAACP,SAAS,CAAC;;MAE7B,KAAK,KAAK;QAAE;UACV,OAAO/d,KAAK,CAACue,GAAG,CAACR,SAAS,CAAC;;MAE7B,KAAK,KAAK;QAAE;UACV,OAAO/d,KAAK,CAACwe,GAAG,CAACT,SAAS,CAAC;;MAE7B,KAAK,KAAK;QAAE;UACV,OAAO/d,KAAK,CAACye,GAAG,CAACV,SAAS,CAAC;;MAE7B,KAAK,KAAK;QAAE;UACV,OAAO/d,KAAK,CAAC0e,GAAG,CAACX,SAAS,CAAC;;MAE7B,KAAK,MAAM;QAAE;UACX,OAAO/d,KAAK,CAAC2e,IAAI,CAACZ,SAAS,CAAC;;MAE9B,KAAK,MAAM;QAAE;UACX,OAAO/d,KAAK,CAAC4e,IAAI,CAACb,SAAS,CAAC;;MAE9B,KAAK,MAAM;QAAE;UACX,OAAO/d,KAAK,CAAC6e,IAAI,CAACd,SAAS,CAAC;;MAE9B,KAAK,MAAM;QAAE;UACX,OAAO/d,KAAK,CAAC8e,IAAI,CAACf,SAAS,CAAC;;MAE9B,KAAK,OAAO;QAAE;UACZ,OAAO/d,KAAK,CAACG,KAAK,CAAC4d,SAAS,CAAC;;MAE/B,KAAK,QAAQ;QAAE;UACb,OAAO/d,KAAK,CAACjC,GAAG,CAACggB,SAAS,CAAC;;MAE7B,KAAK,QAAQ;QAAE;UACb,OAAO/d,KAAK,CAACE,SAAS,CAAC6d,SAAS,CAAC;;MAEnC;QAAS;UACP,IAAI,QAAQ,IAAIH,KAAK,CAACla,IAAI,EAAE;YAC1B,OAAO1D,KAAK,CAAC+e,MAAM,CACjBrB,QAAQ,CAACC,WAAW,CAClB;cAAEja,IAAI,EAAEka,KAAK,CAACla,IAAI,CAACqb;YAAM,CAAE,EAC3BlB,KAAK,EACLC,WAAW,CACZ,EACDC,SAAS,CACV;;UAEH,IAAI,KAAK,IAAIH,KAAK,CAACla,IAAI,EAAE;YACvB,OAAO1D,KAAK,CAACgf,GAAG,CACdtB,QAAQ,CAACC,WAAW,CAAC;cAAEja,IAAI,EAAEka,KAAK,CAACla,IAAI,CAACsb;YAAG,CAAE,EAAEnB,KAAK,EAAEC,WAAW,CAAC,EAClEC,SAAS,CACV;;UAEH,IAAI,OAAO,IAAIH,KAAK,CAACla,IAAI,EAAE;YACzB,IAAI,CAACA,IAAI,EAAEub,GAAG,CAAC,GAAGrB,KAAK,CAACla,IAAI,CAAC5G,KAAK;YAClCmiB,GAAG,GAAGvB,QAAQ,CAACwB,eAAe,CAACD,GAAG,EAAEnB,WAAW,CAAC;YAEhD,OAAO9d,KAAK,CAAClD,KAAK,CAChB4gB,QAAQ,CAACC,WAAW,CAAC;cAAEja;YAAI,CAAE,EAAEma,KAAK,EAAEC,WAAW,CAAC,EAClDmB,GAAG,EACHlB,SAAS,CACV;;UAEH,IAAI,SAAS,IAAIH,KAAK,CAACla,IAAI,EAAE;YAC3B,IAAI,CAACma,KAAK,EAAE;cACV,MAAM,IAAI9I,QAAQ,CAAC,iCAAiC,CAAC;;YAGvD,MAAMoK,WAAW,GAAGvB,KAAK,CAACla,IAAI,CAAC0b,OAAO,CAAC3d,IAAI;YAC3C,MAAM4d,OAAO,GAAGxB,KAAK,CAAC/V,IAAI,CAAEhC,CAAC,IAAKA,CAAC,CAACrE,IAAI,KAAK0d,WAAW,CAAC;YACzD,IAAI,CAACE,OAAO,EAAE;cACZ,MAAM,IAAItK,QAAQ,CAAC,mBAAmB6I,KAAK,CAACnc,IAAI,EAAE,CAAC;;YAGrD,OAAOic,QAAQ,CAAC4B,aAAa,CAAC;cAC5BD,OAAO;cACPxB,KAAK;cACLC,WAAW,EAAEA,WAAW,KAAX,QAAAA,WAAW,KAAX,SAAAA,WAAW,GAAIF,KAAK,CAACla,IAAI,CAAC0b,OAAO,CAACG,QAAQ;cACvD9d,IAAI,EAAEsc;YACP,EAAC;;UAEJ,IAAI,SAAS,IAAIH,KAAK,CAACla,IAAI,EAAE;YAC3B,MAAM8b,UAAU,GAAG1B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE2B,EAAE,CAAC,CAAC,CAAC;YACrC,IAAI,CAAAD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,IAAI,MAAK,MAAM,EAAE;cAC/B,MAAM,IAAI3K,QAAQ,CAAC,0BAA0B6I,KAAK,CAACnc,IAAI,EAAE,CAAC;;YAG5D,OAAOic,QAAQ,CAACC,WAAW,CACzB;cAAE,GAAGC,KAAK;cAAEla,IAAI,EAAE8b,UAAU,CAAC9b;YAAI,CAAE,EACnCma,KAAK,CACN;;UAGH,MAAM,IAAI9I,QAAQ,CAChB,wBAAwBzQ,IAAI,CAACC,SAAS,CAACqZ,KAAK,CAACla,IAAI,CAAC,EAAE,CACrD;;;;EAKP;;AAEG;EACI,OAAO4b,aAAaA,CAAC;IAC1BD,OAAO;IACPxB,KAAK;IACLpc,IAAI;IACJqc;EAAW,CAMZ;IACC,QAAQuB,OAAO,CAAC3b,IAAI,CAACgc,IAAI;MACvB,KAAK,QAAQ;QAAE;UACb,MAAMC,YAAY,GAAGve,mBAAmB,CACtCie,OAAO,CAAC3b,IAAI,CAACrC,MAAM,EACnB,MAAM,EAAE,EACPA,MAAM,IACLA,MAAM,CAAChE,GAAG,CAAEuiB,CAAC,IAAI;YACf,MAAMC,OAAO,GAAG/B,WAAW,GACvBJ,QAAQ,CAACoC,kBAAkB,CAAC;cAC1Bpc,IAAI,EAAEkc,CAAC,CAAClc,IAAI;cACZ2b,OAAO;cACPvB;aACD,CAAC,GACFA,WAAW;YACf,OAAOJ,QAAQ,CAACC,WAAW,CAACiC,CAAC,EAAE/B,KAAK,EAAEgC,OAAO,CAAC;UAChD,CAAC,CAAC,EACHxe,MAAM,IACLA,MAAM,CAAChE,GAAG,CAAC,CAACuiB,CAAC,EAAE7Y,CAAC,KAAI;YAClB,MAAM8Y,OAAO,GAAG/B,WAAW,GACvBJ,QAAQ,CAACoC,kBAAkB,CAAC;cAC1Bpc,IAAI,EAAEkc,CAAC;cACPP,OAAO;cACPvB;aACD,CAAC,GACFA,WAAW;YACf,OAAOJ,QAAQ,CAACC,WAAW,CACzB;cAAElc,IAAI,EAAEsF,CAAC,CAAC9I,QAAQ,EAAE;cAAEyF,IAAI,EAAEkc;YAAC,CAAE,EAC/B/B,KAAK,EACLgC,OAAO,CACR;WACF,CAAC,CACL;UAED,OAAO7f,KAAK,CAACC,MAAM,CAAC0f,YAAY,EAAEle,IAAI,CAAC;;MAGzC,KAAK,MAAM;QAAE;UACX,MAAMse,QAAQ,GAAGV,OAAO,CAAC3b,IAAI,CAACqc,QAAQ,CAAC1iB,GAAG,CAAE2iB,OAAO,IAAI;YACrD,MAAML,YAAY,GAAGve,mBAAmB,CACtC4e,OAAO,CAAC3e,MAAM,EACd,MAAM,EAAE,EACPA,MAAM,IACLA,MAAM,CAAChE,GAAG,CAAEuiB,CAAC,IAAI;cACf,MAAMC,OAAO,GAAG/B,WAAW,GACvBJ,QAAQ,CAACoC,kBAAkB,CAAC;gBAC1Bpc,IAAI,EAAEkc,CAAC,CAAClc,IAAI;gBACZ2b,OAAO;gBACPvB;eACD,CAAC,GACFA,WAAW;cACf,OAAOJ,QAAQ,CAACC,WAAW,CAACiC,CAAC,EAAE/B,KAAK,EAAEgC,OAAO,CAAC;YAChD,CAAC,CAAC,EACHxe,MAAM,IACLA,MAAM,CAAChE,GAAG,CAAC,CAACuiB,CAAC,EAAE7Y,CAAC,KAAI;cAClB,MAAM8Y,OAAO,GAAG/B,WAAW,GACvBJ,QAAQ,CAACoC,kBAAkB,CAAC;gBAC1Bpc,IAAI,EAAEkc,CAAC;gBACPP,OAAO;gBACPvB;eACD,CAAC,GACFA,WAAW;cACf,OAAOJ,QAAQ,CAACC,WAAW,CACzB;gBAAElc,IAAI,EAAEsF,CAAC,CAAC9I,QAAQ,EAAE;gBAAEyF,IAAI,EAAEkc;cAAC,CAAE,EAC/B/B,KAAK,EACLgC,OAAO,CACR;aACF,CAAC,CACL;YAED,OAAO7f,KAAK,CAACC,MAAM,CAAC0f,YAAY,EAAEK,OAAO,CAACve,IAAI,CAAC;UACjD,CAAC,CAAC;UAEF,IAAIA,IAAI,KAAKkD,SAAS,EAAE;;;YAGtB,OAAO3E,KAAK,CAACigB,QAAQ,CAACF,QAAQ,CAAC,CAACG,SAAS,CAACze,IAAI,CAAC;;UAGjD,OAAOzB,KAAK,CAACigB,QAAQ,CAACF,QAAQ,EAAEte,IAAI,CAAC;;MAGvC,KAAK,MAAM;QAAE;UACX,OAAOic,QAAQ,CAACC,WAAW,CAAC;YAAEja,IAAI,EAAE2b,OAAO,CAAC3b,IAAI,CAACyc,KAAK;YAAE1e;UAAI,CAAE,EAAEoc,KAAK,CAAC;;;;EAK5E;;AAEG;EACI,OAAOuC,QAAQA,CACpBC,EAAW,EACX/f,GAAQ,EACRwd,WAAoC;;IAEpC,QAAQuC,EAAE;MACR,KAAK,MAAM;QACT,OAAO,CAAC;MACV,KAAK,IAAI;QACP,OAAO,CAAC;MACV,KAAK,IAAI;QACP,OAAO,CAAC;MACV,KAAK,KAAK;QACR,OAAO,CAAC;MACV,KAAK,KAAK;QACR,OAAO,CAAC;MACV,KAAK,KAAK;QACR,OAAO,CAAC;MACV,KAAK,KAAK;QACR,OAAO,CAAC;MACV,KAAK,KAAK;QACR,OAAO,CAAC;MACV,KAAK,KAAK;QACR,OAAO,CAAC;MACV,KAAK,KAAK;QACR,OAAO,CAAC;MACV,KAAK,KAAK;QACR,OAAO,CAAC;MACV,KAAK,MAAM;QACT,OAAO,EAAE;MACX,KAAK,MAAM;QACT,OAAO,EAAE;MACX,KAAK,MAAM;QACT,OAAO,EAAE;MACX,KAAK,MAAM;QACT,OAAO,EAAE;MACX,KAAK,OAAO;QACV,OAAO,CAAC;MACV,KAAK,QAAQ;QACX,OAAO,CAAC;MACV,KAAK,QAAQ;QACX,OAAO,EAAE;MACX;QACE,IAAI,QAAQ,IAAIA,EAAE,EAAE;UAClB,OAAO,CAAC,GAAG3C,QAAQ,CAAC0C,QAAQ,CAACC,EAAE,CAACtB,MAAM,EAAEze,GAAG,EAAEwd,WAAW,CAAC;;QAE3D,IAAI,SAAS,IAAIuC,EAAE,EAAE;UACnB,OAAO,CAAC,GAAG3C,QAAQ,CAAC0C,QAAQ,CAACC,EAAE,CAACC,OAAO,EAAEhgB,GAAG,EAAEwd,WAAW,CAAC;;QAE5D,IAAI,KAAK,IAAIuC,EAAE,EAAE;UACf,OAAO,CAAC;;QAEV,IAAI,OAAO,IAAIA,EAAE,EAAE;UACjB,IAAI,CAAC3c,IAAI,EAAEub,GAAG,CAAC,GAAGoB,EAAE,CAACvjB,KAAK;UAC1BmiB,GAAG,GAAGvB,QAAQ,CAACwB,eAAe,CAACD,GAAG,EAAEnB,WAAW,CAAC;UAChD,OAAOJ,QAAQ,CAAC0C,QAAQ,CAAC1c,IAAI,EAAEpD,GAAG,EAAEwd,WAAW,CAAC,GAAGmB,GAAG;;QAExD,IAAI,SAAS,IAAIoB,EAAE,EAAE;UACnB,MAAMhB,OAAO,GAAG,CAAArd,EAAA,GAAA1B,GAAG,CAACud,KAAK,MAAE,QAAA7b,EAAA,uBAAAA,EAAA,CAAA8F,IAAI,CAAEhC,CAAC,IAAKA,CAAC,CAACrE,IAAI,KAAK4e,EAAE,CAACjB,OAAO,CAAC3d,IAAI,CAAC;UAClE,IAAI,CAAC4d,OAAO,EAAE;YACZ,MAAM,IAAItK,QAAQ,CAAC,mBAAmBzQ,IAAI,CAACC,SAAS,CAAC8b,EAAE,CAAC,EAAE,CAAC;;UAG7D,MAAMD,QAAQ,GAAI1c,IAAa,IAAI;YACjC,MAAMmc,OAAO,GAAG/B,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAIuC,EAAE,CAACjB,OAAO,CAACG,QAAQ;YAClD,MAAMld,IAAI,GAAGwd,OAAO,GAChBnC,QAAQ,CAACoC,kBAAkB,CAAC;cAC1Bpc,IAAI;cACJ2b,OAAO;cACPvB,WAAW,EAAE+B;aACd,CAAC,GACFA,OAAO;YAEX,OAAOnC,QAAQ,CAAC0C,QAAQ,CAAC1c,IAAI,EAAEpD,GAAG,EAAE+B,IAAI,CAAC;UAC3C,CAAC;UAED,QAAQgd,OAAO,CAAC3b,IAAI,CAACgc,IAAI;YACvB,KAAK,QAAQ;cAAE;gBACb,OAAOte,mBAAmB,CACxBie,OAAO,CAAC3b,IAAI,CAACrC,MAAM,EACnB,MAAM,CAAC,CAAC,CAAC,EACRA,MAAM,IAAKA,MAAM,CAAChE,GAAG,CAAEuiB,CAAC,IAAKQ,QAAQ,CAACR,CAAC,CAAClc,IAAI,CAAC,CAAC,EAC9CrC,MAAM,IAAKA,MAAM,CAAChE,GAAG,CAAEuiB,CAAC,IAAKQ,QAAQ,CAACR,CAAC,CAAC,CAAC,CAC3C,CAAC9hB,MAAM,CAAC,CAAC+E,GAAG,EAAE9F,IAAI,KAAK8F,GAAG,GAAG9F,IAAI,EAAE,CAAC,CAAC;;YAGxC,KAAK,MAAM;cAAE;gBACX,MAAMwjB,YAAY,GAAGlB,OAAO,CAAC3b,IAAI,CAACqc,QAAQ,CAAC1iB,GAAG,CAAE2iB,OAAO,IAAI;kBACzD,OAAO5e,mBAAmB,CACxB4e,OAAO,CAAC3e,MAAM,EACd,MAAM,CAAC,CAAC,CAAC,EACRA,MAAM,IAAKA,MAAM,CAAChE,GAAG,CAAEuiB,CAAC,IAAKQ,QAAQ,CAACR,CAAC,CAAClc,IAAI,CAAC,CAAC,EAC9CrC,MAAM,IAAKA,MAAM,CAAChE,GAAG,CAAEuiB,CAAC,IAAKQ,QAAQ,CAACR,CAAC,CAAC,CAAC,CAC3C,CAAC9hB,MAAM,CAAC,CAAC+E,GAAG,EAAE9F,IAAI,KAAK8F,GAAG,GAAG9F,IAAI,EAAE,CAAC,CAAC;gBACxC,CAAC,CAAC;gBAEF,OAAOG,IAAI,CAACsjB,GAAG,CAAC,GAAGD,YAAY,CAAC,GAAG,CAAC;;YAGtC,KAAK,MAAM;cAAE;gBACX,OAAO7C,QAAQ,CAAC0C,QAAQ,CAACf,OAAO,CAAC3b,IAAI,CAACyc,KAAK,EAAE7f,GAAG,EAAEwd,WAAW,CAAC;;;;QAIpE,IAAI,SAAS,IAAIuC,EAAE,EAAE;UACnB,MAAMb,UAAU,GAAG1B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE2B,EAAE,CAAC,CAAC,CAAC;UACrC,IAAI,CAAAD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,IAAI,MAAK,MAAM,EAAE;YAC/B,MAAM,IAAI3K,QAAQ,CAAC,oBAAoBsL,EAAE,CAACI,OAAO,EAAE,CAAC;;UAGtD,OAAO/C,QAAQ,CAAC0C,QAAQ,CAACZ,UAAU,CAAC9b,IAAI,EAAEpD,GAAG,EAAEwd,WAAW,CAAC;;QAG7D,MAAM,IAAIxb,KAAK,CAAC,gBAAgBgC,IAAI,CAACC,SAAS,CAAC8b,EAAE,CAAC,EAAE,CAAC;;;EAI3D;;AAEG;EACK,OAAOnB,eAAeA,CAC5BD,GAAgB,EAChBnB,WAAoC;IAEpC,IAAI,OAAOmB,GAAG,KAAK,QAAQ,EAAE,OAAOA,GAAG;IAEvC,IAAInB,WAAW,EAAE;MACf,MAAM4C,UAAU,GAAG5C,WAAW,CAAChW,IAAI,CAAE6Y,CAAC,IAAKA,CAAC,CAACjB,IAAI,KAAK,OAAO,CAAC;MAC9D,IAAI,CAAAgB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEhB,IAAI,MAAK,OAAO,EAAE;QAChCT,GAAG,GAAG,CAACyB,UAAU,CAACjd,KAAK;;;IAI3B,IAAI,OAAOwb,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIlK,QAAQ,CAAC,sCAAsC,CAAC;;IAG5D,OAAOkK,GAAG;;EAGZ;;;AAGG;EACK,OAAOa,kBAAkBA,CAAC;IAChCpc,IAAI;IACJ2b,OAAO;IACPvB,WAAW;IACX8C;EAAS,CAMV;IACC,IAAI,OAAOld,IAAI,KAAK,QAAQ,EAAE,OAAO,IAAI;IAEzC,KAAK,MAAMnG,KAAK,IAAI8hB,OAAO,CAACE,QAAQ,EAAE;MACpC,MAAMsB,UAAU,GAAGxB,OAAO,CAACE,QAAQ,CAAChiB,KAAK,CAAC;MAE1C,IAAI,SAAS,IAAImG,IAAI,IAAImd,UAAU,CAACpf,IAAI,KAAKiC,IAAI,CAAC+c,OAAO,EAAE;QACzD,OAAO,CAAC3C,WAAW,CAACvgB,KAAK,CAAC,CAAC;;MAG7B,IAAI,QAAQ,IAAImG,IAAI,EAAE;QACpB,MAAMrB,IAAI,GAAGqb,QAAQ,CAACoC,kBAAkB,CAAC;UACvCpc,IAAI,EAAEA,IAAI,CAACqb,MAAM;UACjBM,OAAO;UACPvB,WAAW;UACX8C;QACD,EAAC;QACF,IAAI,CAACve,IAAI,IAAI,CAACue,SAAS,EAAE,OAAOve,IAAI;QAEpC,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACqd,IAAI,KAAK,MAAM,EAAE;UAC3B,OAAO,CACL;YACEA,IAAI,EAAE,MAAM;YACZhc,IAAI,EAAE;cAAEqb,MAAM,EAAE1c,IAAI,CAAC,CAAC,CAAC,CAACqB;YAAI;UAC7B,EACF;;;MAIL,IAAI,KAAK,IAAIA,IAAI,EAAE;QACjB,MAAMrB,IAAI,GAAGqb,QAAQ,CAACoC,kBAAkB,CAAC;UACvCpc,IAAI,EAAEA,IAAI,CAACsb,GAAG;UACdK,OAAO;UACPvB,WAAW;UACX8C;QACD,EAAC;QACF,IAAI,CAACve,IAAI,IAAI,CAACue,SAAS,EAAE,OAAOve,IAAI;QAEpC,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACqd,IAAI,KAAK,MAAM,EAAE;UAC3B,OAAO,CACL;YACEA,IAAI,EAAE,MAAM;YACZhc,IAAI,EAAE;cAAEsb,GAAG,EAAE3c,IAAI,CAAC,CAAC,CAAC,CAACqB;YAAI;UAC1B,EACF;;;MAIL,IAAI,OAAO,IAAIA,IAAI,EAAE;QACnB,MAAM,CAACod,IAAI,EAAE7B,GAAG,CAAC,GAAGvb,IAAI,CAAC5G,KAAK;QAC9B,MAAMikB,YAAY,GAAG,OAAO9B,GAAG,KAAK,QAAQ;QAE5C,MAAM5c,IAAI,GAAGqb,QAAQ,CAACoC,kBAAkB,CAAC;UACvCpc,IAAI,EAAEod,IAAI;UACVzB,OAAO;UACPvB,WAAW;UACX8C;QACD,EAAC;QACF,IAAIve,IAAI,EAAE;;UAER,KAAK,MAAM0E,CAAC,IAAIsY,OAAO,CAACE,QAAQ,CAAC/hB,KAAK,CAAC,CAACD,KAAK,CAAC,EAAE;YAC9C,MAAMyjB,QAAQ,GAAG,CAACzjB,KAAK,GAAG,CAACwJ,CAAC;YAC5B,IACEga,YAAY,IACZ1B,OAAO,CAACE,QAAQ,CAACyB,QAAQ,CAAC,CAACvf,IAAI,KAAKwd,GAAG,CAACwB,OAAO,EAC/C;cACApe,IAAI,CAAC6F,IAAI,CAAC4V,WAAW,CAACkD,QAAQ,CAAC,CAAC;;;UAIpC,IAAI,CAACJ,SAAS,EAAE,OAAOve,IAAI;UAE3B,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACqd,IAAI,KAAK,MAAM,IAAIrd,IAAI,CAAC,CAAC,CAAC,CAACqd,IAAI,KAAK,OAAO,EAAE;YACvD,OAAO,CACL;cACEA,IAAI,EAAE,MAAM;cACZhc,IAAI,EAAE;gBAAE5G,KAAK,EAAE,CAACuF,IAAI,CAAC,CAAC,CAAC,CAACqB,IAAI,EAAE,CAACrB,IAAI,CAAC,CAAC,CAAC,CAACoB,KAAK;cAAC;YAC9C,EACF;;;;QAKL,IAAIsd,YAAY,IAAIF,UAAU,CAACpf,IAAI,KAAKwd,GAAG,CAACwB,OAAO,EAAE;UACnD,MAAMQ,GAAG,GAAGnD,WAAW,CAACvgB,KAAK,CAAC;UAC9B,IAAI,CAACqjB,SAAS,EAAE,OAAO,CAACK,GAAG,CAAC;UAE5B,OAAO,CACL;YACEvB,IAAI,EAAE,MAAM;YACZhc,IAAI,EAAE;cAAE5G,KAAK,EAAE,CAACgkB,IAAI,EAAE,CAACG,GAAG,CAACxd,KAAK;YAAC;UAClC,EACF;;;QAIH,OAAO,IAAI;;MAGb,IAAI,SAAS,IAAIC,IAAI,EAAE;QACrB,IAAI,CAACA,IAAI,CAAC0b,OAAO,CAACG,QAAQ,EAAE,OAAO,IAAI;QAEvC,OAAO7b,IAAI,CAAC0b,OAAO,CAACG,QAAQ,CACzB2B,OAAO,CAAEP,CAAC,IAAI;UACb,QAAQA,CAAC,CAACjB,IAAI;YACZ,KAAK,MAAM;cACT,OAAOhC,QAAQ,CAACoC,kBAAkB,CAAC;gBACjCpc,IAAI,EAAEid,CAAC,CAACjd,IAAI;gBACZ2b,OAAO;gBACPvB,WAAW;gBACX8C,SAAS,EAAE;cACZ,EAAC;YACJ,KAAK,OAAO;cACV,OAAO,CAACD,CAAC,CAAC;;QAEhB,CAAC,CAAC,CACDQ,MAAM,CAAER,CAAC,IAAKA,CAAC,KAAK,IAAI,CAAoB;;;IAInD,OAAO,IAAI;;AAEd;;ACrfD;;AAEG;MACUS,qBAAqB;EAOhCle,YAA2B5C,GAAQ;IAAR,IAAG,CAAAA,GAAA,GAAHA,GAAG;IAC5B,MAAM+gB,SAAS,GAAG/gB,GAAG,CAACghB,YAAY,CAACjkB,GAAG,CAAEkF,EAAE,IAAI;MAC5C,MAAMd,IAAI,GAAGc,EAAE,CAACd,IAAI;MACpB,MAAMke,YAAY,GAAGpd,EAAE,CAACF,IAAI,CAAChF,GAAG,CAAE4jB,GAAG,IACnCvD,QAAQ,CAACC,WAAW,CAACsD,GAAG,EAAE3gB,GAAG,CAACud,KAAK,CAAC,CACrC;MACD,MAAM0D,MAAM,GAAGvhB,KAAK,CAACC,MAAM,CAAC0f,YAAY,EAAEle,IAAI,CAAC;MAC/C,OAAO,CAACA,IAAI,EAAE;QAAE+f,aAAa,EAAEjf,EAAE,CAACif,aAAa;QAAED;MAAM,CAAE,CAAU;IACrE,CAAC,CAAC;IACF,IAAI,CAACF,SAAS,GAAG,IAAIzf,GAAG,CAACyf,SAAS,CAAC;;EAGrC;;AAEG;EACIzjB,MAAMA,CAAC6jB,MAAc,EAAElf,EAAO;IACnC,MAAMmf,MAAM,GAAGjjB,QAAM,CAACkjB,KAAK,CAAC,IAAI,CAAC,CAAC;IAClC,MAAM1iB,OAAO,GAAG,IAAI,CAACoiB,SAAS,CAACvM,GAAG,CAAC2M,MAAM,CAAC;IAC1C,IAAI,CAACxiB,OAAO,EAAE;MACZ,MAAM,IAAIqD,KAAK,CAAC,mBAAmBmf,MAAM,EAAE,CAAC;;IAG9C,MAAMxC,GAAG,GAAGhgB,OAAO,CAACsiB,MAAM,CAAC3jB,MAAM,CAAC2E,EAAE,EAAEmf,MAAM,CAAC;IAC7C,MAAM7jB,IAAI,GAAG6jB,MAAM,CAAClkB,KAAK,CAAC,CAAC,EAAEyhB,GAAG,CAAC;IAEjC,OAAOxgB,QAAM,CAACmjB,MAAM,CAAC,CAACnjB,QAAM,CAACC,IAAI,CAACO,OAAO,CAACuiB,aAAa,CAAC,EAAE3jB,IAAI,CAAC,CAAC;;EAGlE;;AAEG;EACIO,MAAMA,CACXmE,EAAmB,EACnBgI,QAAA,GAA6B,KAAK;IAElC,IAAI,OAAOhI,EAAE,KAAK,QAAQ,EAAE;MAC1BA,EAAE,GAAGgI,QAAQ,KAAK,KAAK,GAAG9L,QAAM,CAACC,IAAI,CAAC6D,EAAE,EAAE,KAAK,CAAC,GAAGnD,MAAI,CAAChB,MAAM,CAACmE,EAAE,CAAC;;IAGpE,KAAK,MAAM,CAACd,IAAI,EAAE8f,MAAM,CAAC,IAAI,IAAI,CAACF,SAAS,EAAE;MAC3C,MAAMQ,SAAS,GAAGtf,EAAE,CAACuf,QAAQ,CAAC,CAAC,EAAEP,MAAM,CAACC,aAAa,CAACpkB,MAAM,CAAC;MAC7D,MAAM2a,OAAO,GAAG8J,SAAS,CAACE,MAAM,CAACtjB,QAAM,CAACC,IAAI,CAAC6iB,MAAM,CAACC,aAAa,CAAC,CAAC;MACnE,IAAIzJ,OAAO,EAAE;QACX,OAAO;UACLtW,IAAI;UACJ5D,IAAI,EAAE0jB,MAAM,CAACA,MAAM,CAACnjB,MAAM,CAACmE,EAAE,CAACuf,QAAQ,CAACD,SAAS,CAACzkB,MAAM,CAAC;SACzD;;;IAIL,OAAO,IAAI;;EAGb;;AAEG;EACI4kB,MAAMA,CACXzf,EAAe,EACf0f,YAA2B;IAE3B,OAAOC,oBAAoB,CAACF,MAAM,CAACzf,EAAE,EAAE0f,YAAY,EAAE,IAAI,CAAC3hB,GAAG,CAAC;;AAEjE;AAiBD,MAAM4hB,oBAAoB;EACjB,OAAOF,MAAMA,CAClBzf,EAAe,EACf0f,YAA2B,EAC3B3hB,GAAQ;IAER,MAAM8B,KAAK,GAAG9B,GAAG,CAACghB,YAAY,CAACxZ,IAAI,CAAEf,CAAC,IAAKxE,EAAE,CAACd,IAAI,KAAKsF,CAAC,CAACtF,IAAI,CAAC;IAC9D,IAAI,CAACW,KAAK,EAAE;MACV+I,OAAO,CAACxE,KAAK,CAAC,2BAA2B,CAAC;MAC1C,OAAO,IAAI;;IAGb,MAAMtE,IAAI,GAAGD,KAAK,CAACC,IAAI,CAAChF,GAAG,CAAE8kB,QAAQ,IAAI;MACvC,OAAO;QACL1gB,IAAI,EAAE0gB,QAAQ,CAAC1gB,IAAI;QACnBiC,IAAI,EAAEwe,oBAAoB,CAACE,aAAa,CAACD,QAAQ,CAACze,IAAI,CAAC;QACvD7F,IAAI,EAAEqkB,oBAAoB,CAACG,aAAa,CACtCF,QAAQ,EACR5f,EAAE,CAAC1E,IAAI,CAACskB,QAAQ,CAAC1gB,IAAI,CAAC,EACtBnB,GAAG,CAACud,KAAK;OAEZ;IACH,CAAC,CAAC;IAEF,MAAMyE,eAAe,GAAGJ,oBAAoB,CAACK,kBAAkB,CAC7DngB,KAAK,CAACQ,QAAQ,CACf;IAED,MAAMA,QAAQ,GAAGqf,YAAY,CAAC5kB,GAAG,CAAC,CAAC0Q,IAAI,EAAEvL,GAAG,KAAI;MAC9C,IAAIA,GAAG,GAAG8f,eAAe,CAACllB,MAAM,EAAE;QAChC,OAAO;UACLqE,IAAI,EAAE6gB,eAAe,CAAC9f,GAAG,CAAC,CAACf,IAAI;UAC/B,GAAGsM;SACJ;;;WAGE;QACH,OAAO;UACLtM,IAAI,EAAEkD,SAAS;UACf,GAAGoJ;SACJ;;IAEL,CAAC,CAAC;IAEF,OAAO;MACL1L,IAAI;MACJO;KACD;;EAGK,OAAOwf,aAAaA,CAACI,OAAgB;IAC3C,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC/B,OAAOA,OAAO;;IAGhB,IAAI,QAAQ,IAAIA,OAAO,EAAE;MACvB,OAAO,UAAU,IAAI,CAACJ,aAAa,CAACI,OAAO,CAACzD,MAAM,CAAC,GAAG;;IAExD,IAAI,SAAS,IAAIyD,OAAO,EAAE;MACxB,OAAO,WAAW,IAAI,CAACJ,aAAa,CAACI,OAAO,CAAClC,OAAO,CAAC,GAAG;;IAE1D,IAAI,KAAK,IAAIkC,OAAO,EAAE;MACpB,OAAO,OAAO,IAAI,CAACJ,aAAa,CAACI,OAAO,CAACxD,GAAG,CAAC,GAAG;;IAElD,IAAI,OAAO,IAAIwD,OAAO,EAAE;MACtB,OAAO,SAASA,OAAO,CAAC1lB,KAAK,CAAC,CAAC,CAAC,KAAK0lB,OAAO,CAAC1lB,KAAK,CAAC,CAAC,CAAC,GAAG;;IAE1D,IAAI,SAAS,IAAI0lB,OAAO,EAAE;MACxB,MAAM/gB,IAAI,GAAG+gB,OAAO,CAACpD,OAAO,CAAC3d,IAAI;MACjC,IAAI+gB,OAAO,CAACpD,OAAO,CAACG,QAAQ,EAAE;QAC5B,MAAMA,QAAQ,GAAGiD,OAAO,CAACpD,OAAO,CAACG,QAAQ,CACtCliB,GAAG,CAAEsjB,CAAC,IAAI;UACT,QAAQA,CAAC,CAACjB,IAAI;YACZ,KAAK,MAAM;cACT,OAAOwC,oBAAoB,CAACE,aAAa,CAACzB,CAAC,CAACjd,IAAI,CAAC;YACnD,KAAK,OAAO;cACV,OAAOid,CAAC,CAACld,KAAK;;QAEpB,CAAC,CAAC,CACD7C,IAAI,CAAC,IAAI,CAAC;QAEb,OAAO,GAAGa,IAAI,IAAI8d,QAAQ,GAAG;;MAG/B,OAAO9d,IAAI;;IAGb,MAAM,IAAIa,KAAK,CAAC,qBAAqBkgB,OAAO,EAAE,CAAC;;EAGzC,OAAOH,aAAaA,CAC1BF,QAAkB,EAClBtkB,IAAY,EACZggB,KAAoB;IAEpB,IAAI,OAAOsE,QAAQ,CAACze,IAAI,KAAK,QAAQ,EAAE;MACrC,OAAO7F,IAAI,CAACI,QAAQ,EAAE;;IAExB,IAAI,KAAK,IAAIkkB,QAAQ,CAACze,IAAI,EAAE;MAC1B,OACE,GAAG,GACe7F,IAAK,CACpBR,GAAG,CAAEolB,CAAC,IACL,IAAI,CAACJ,aAAa,CAChB;QAAE5gB,IAAI,EAAE,EAAE;QAAEiC,IAAI,EAAeye,QAAQ,CAACze,IAAK,CAACsb;MAAG,CAAE,EACnDyD,CAAC,EACD5E,KAAK,CACN,CACF,CACAjd,IAAI,CAAC,IAAI,CAAC,GACb,GAAG;;IAGP,IAAI,QAAQ,IAAIuhB,QAAQ,CAACze,IAAI,EAAE;MAC7B,OAAO7F,IAAI,KAAK,IAAI,GAChB,MAAM,GACN,IAAI,CAACwkB,aAAa,CAChB;QAAE5gB,IAAI,EAAE,EAAE;QAAEiC,IAAI,EAAEye,QAAQ,CAACze,IAAI,CAACqb;MAAM,CAAE,EACxClhB,IAAI,EACJggB,KAAK,CACN;;IAEP,IAAI,SAAS,IAAIsE,QAAQ,CAACze,IAAI,EAAE;MAC9B,IAAI,CAACma,KAAK,EAAE;QACV,MAAM,IAAIvb,KAAK,CAAC,iCAAiC,CAAC;;MAGpD,MAAM6c,WAAW,GAAGgD,QAAQ,CAACze,IAAI,CAAC0b,OAAO,CAAC3d,IAAI;MAC9C,MAAM4d,OAAO,GAAGxB,KAAK,CAAC/V,IAAI,CAAEhC,CAAC,IAAKA,CAAC,CAACrE,IAAI,KAAK0d,WAAW,CAAC;MACzD,IAAI,CAACE,OAAO,EAAE;QACZ,MAAM,IAAI/c,KAAK,CAAC,mBAAmB6c,WAAW,EAAE,CAAC;;MAGnD,OAAO+C,oBAAoB,CAACQ,oBAAoB,CAACrD,OAAO,EAAExhB,IAAI,EAAEggB,KAAK,CAAC;;IAGxE,OAAO,SAAS;;EAGV,OAAO6E,oBAAoBA,CACjCrD,OAAmB,EACnBxhB,IAAY,EACZggB,KAAmB;IAEnB,QAAQwB,OAAO,CAAC3b,IAAI,CAACgc,IAAI;MACvB,KAAK,QAAQ;QAAE;UACb,OACE,IAAI,GACJte,mBAAmB,CACjBie,OAAO,CAAC3b,IAAI,CAACrC,MAAM,EACnB,MAAM,EAAE,EACPA,MAAM,IAAI;YACT,OAAOwC,MAAM,CAAC+B,OAAO,CAAC/H,IAAI,CAAC,CACxBR,GAAG,CAAC,CAAC,CAACkB,GAAG,EAAEwC,GAAG,CAAC,KAAI;cAClB,MAAM6c,KAAK,GAAGvc,MAAM,CAACyG,IAAI,CAAE8X,CAAC,IAAKA,CAAC,CAACne,IAAI,KAAKlD,GAAG,CAAC;cAChD,IAAI,CAACqf,KAAK,EAAE;gBACV,MAAM,IAAItb,KAAK,CAAC,oBAAoB/D,GAAG,EAAE,CAAC;;cAE5C,OACEA,GAAG,GACH,IAAI,GACJ2jB,oBAAoB,CAACG,aAAa,CAACzE,KAAK,EAAE7c,GAAG,EAAE8c,KAAK,CAAC;YAEzD,CAAC,CAAC,CACDjd,IAAI,CAAC,IAAI,CAAC;UACf,CAAC,EACAS,MAAM,IAAI;YACT,OAAOwC,MAAM,CAAC+B,OAAO,CAAC/H,IAAI,CAAC,CACxBR,GAAG,CAAC,CAAC,CAACkB,GAAG,EAAEwC,GAAG,CAAC,KAAI;cAClB,OACExC,GAAG,GACH,IAAI,GACJ2jB,oBAAoB,CAACG,aAAa,CAChC;gBAAE5gB,IAAI,EAAE,EAAE;gBAAEiC,IAAI,EAAErC,MAAM,CAAC9C,GAAG;cAAC,CAAE,EAC/BwC,GAAG,EACH8c,KAAK,CACN;YAEL,CAAC,CAAC,CACDjd,IAAI,CAAC,IAAI,CAAC;UACf,CAAC,CACF,GACD,IAAI;;MAIR,KAAK,MAAM;QAAE;UACX,MAAM+hB,WAAW,GAAG9e,MAAM,CAAC4D,IAAI,CAAC5J,IAAI,CAAC,CAAC,CAAC,CAAC;UACxC,MAAMmiB,OAAO,GAAGX,OAAO,CAAC3b,IAAI,CAACqc,QAAQ,CAACjY,IAAI,CACvCnC,CAAC,IAAKA,CAAC,CAAClE,IAAI,KAAKkhB,WAAW,CAC9B;UACD,IAAI,CAAC3C,OAAO,EAAE;YACZ,MAAM,IAAI1d,KAAK,CAAC,2BAA2BqgB,WAAW,EAAE,CAAC;;UAG3D,MAAMC,SAAS,GAAG/kB,IAAI,CAAC8kB,WAAW,CAAC;UACnC,OAAOvhB,mBAAmB,CACxB4e,OAAO,CAAC3e,MAAM,EACd,MAAMshB,WAAW,EAChBthB,MAAM,IAAI;YACT,MAAMwhB,WAAW,GAAGhf,MAAM,CAAC4D,IAAI,CAACmb,SAAS,CAAC,CACvCvlB,GAAG,CAAEuiB,CAAC,IAAI;cACT,MAAMkD,SAAS,GAAGF,SAAS,CAAChD,CAAC,CAAC;cAC9B,MAAMuC,QAAQ,GAAG9gB,MAAM,CAACyG,IAAI,CAAEnC,CAAC,IAAKA,CAAC,CAAClE,IAAI,KAAKme,CAAC,CAAC;cACjD,IAAI,CAACuC,QAAQ,EAAE;gBACb,MAAM,IAAI7f,KAAK,CAAC,oBAAoBsd,CAAC,EAAE,CAAC;;cAG1C,OACEA,CAAC,GACD,IAAI,GACJsC,oBAAoB,CAACG,aAAa,CAACF,QAAQ,EAAEW,SAAS,EAAEjF,KAAK,CAAC;YAElE,CAAC,CAAC,CACDjd,IAAI,CAAC,IAAI,CAAC;YAEb,OAAO,GAAG+hB,WAAW,MAAME,WAAW,IAAI;UAC5C,CAAC,EACAxhB,MAAM,IAAI;YACT,MAAM0hB,WAAW,GAAGlf,MAAM,CAAC+B,OAAO,CAACgd,SAAS,CAAC,CAC1CvlB,GAAG,CAAC,CAAC,CAACkB,GAAG,EAAEwC,GAAG,CAAC,KAAI;cAClB,OACExC,GAAG,GACH,IAAI,GACJ2jB,oBAAoB,CAACG,aAAa,CAChC;gBAAE5gB,IAAI,EAAE,EAAE;gBAAEiC,IAAI,EAAErC,MAAM,CAAC9C,GAAG;cAAC,CAAE,EAC/BwC,GAAU,EACV8c,KAAK,CACN;YAEL,CAAC,CAAC,CACDjd,IAAI,CAAC,IAAI,CAAC;YAEb,OAAO,GAAG+hB,WAAW,MAAMI,WAAW,IAAI;UAC5C,CAAC,CACF;;MAGH,KAAK,MAAM;QAAE;UACX,OAAOb,oBAAoB,CAACE,aAAa,CAAC/C,OAAO,CAAC3b,IAAI,CAACyc,KAAK,CAAC;;;;EAK3D,OAAOoC,kBAAkBA,CAC/B3f,QAAqC,EACrCogB,MAAe;IAEf,OAAOpgB,QAAQ,CACZvF,GAAG,CAAE4L,OAAO,IAAI;MACf,MAAMga,OAAO,GAAGC,YAAY,CAACja,OAAO,CAACxH,IAAI,CAAC;MAC1C,IAAIwH,OAAO,CAACka,cAAc,CAAC,UAAU,CAAC,EAAE;QACtC,MAAMC,SAAS,GAAGJ,MAAM,GAAG,GAAGA,MAAM,MAAMC,OAAO,EAAE,GAAGA,OAAO;QAC7D,OAAOf,oBAAoB,CAACK,kBAAkB,CACnBtZ,OAAQ,CAACrG,QAAQ,EAC1CwgB,SAAS,CACV;OACF,MAAM;QACL,OAAO;UACL,GAAgBna,OAAQ;UACxBxH,IAAI,EAAEuhB,MAAM,GAAG,GAAGA,MAAM,MAAMC,OAAO,EAAE,GAAGA;SAC3C;;IAEL,CAAC,CAAC,CACD1Z,IAAI,EAAE;;AAEZ;AAED,SAAS2Z,YAAYA,CAACtF,KAAa;EACjC,MAAM/Y,MAAM,GAAG+Y,KAAK,CAAC7H,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC;EAC/C,OAAOlR,MAAM,CAACwe,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGze,MAAM,CAACrH,KAAK,CAAC,CAAC,CAAC;AACzD;;ACrXA;;AAEG;MACU+lB,kBAAkB;EAW7BrgB,YAA2B5C,GAAQ;IAAR,IAAG,CAAAA,GAAA,GAAHA,GAAG;IAC5B,IAAI,CAACA,GAAG,CAACsC,QAAQ,EAAE;MACjB,IAAI,CAAC4gB,cAAc,GAAG,IAAI5hB,GAAG,EAAE;MAC/B;;IAGF,MAAMic,KAAK,GAAGvd,GAAG,CAACud,KAAK;IACvB,IAAI,CAACA,KAAK,EAAE;MACV,MAAM,IAAIvb,KAAK,CAAC,8BAA8B,CAAC;;IAGjD,MAAMmhB,OAAO,GAAGnjB,GAAG,CAACsC,QAAQ,CAACvF,GAAG,CAAEwF,GAAG,IAAI;MACvC,MAAMwc,OAAO,GAAGxB,KAAK,CAAC/V,IAAI,CAAEuY,EAAE,IAAKA,EAAE,CAAC5e,IAAI,KAAKoB,GAAG,CAACpB,IAAI,CAAC;MACxD,IAAI,CAAC4d,OAAO,EAAE;QACZ,MAAM,IAAI/c,KAAK,CAAC,sBAAsBO,GAAG,CAACpB,IAAI,EAAE,CAAC;;MAEnD,OAAO,CACLoB,GAAG,CAACpB,IAAS,EACb;QACE+f,aAAa,EAAE3e,GAAG,CAAC2e,aAAa;QAChCD,MAAM,EAAE7D,QAAQ,CAAC4B,aAAa,CAAC;UAAED,OAAO;UAAExB;QAAK,CAAE;MAClD,EACO;IACZ,CAAC,CAAC;IAEF,IAAI,CAAC2F,cAAc,GAAG,IAAI5hB,GAAG,CAAC6hB,OAAO,CAAC;;EAGjC,MAAM7lB,MAAMA,CAAU2Z,WAAc,EAAEtO,OAAU;IACrD,MAAMyY,MAAM,GAAGjjB,QAAM,CAACkjB,KAAK,CAAC,IAAI,CAAC,CAAC;IAClC,MAAMJ,MAAM,GAAG,IAAI,CAACiC,cAAc,CAAC1O,GAAG,CAACyC,WAAW,CAAC;IACnD,IAAI,CAACgK,MAAM,EAAE;MACX,MAAM,IAAIjf,KAAK,CAAC,oBAAoBiV,WAAW,EAAE,CAAC;;IAEpD,MAAM0H,GAAG,GAAGsC,MAAM,CAACA,MAAM,CAAC3jB,MAAM,CAACqL,OAAO,EAAEyY,MAAM,CAAC;IACjD,MAAMgC,WAAW,GAAGhC,MAAM,CAAClkB,KAAK,CAAC,CAAC,EAAEyhB,GAAG,CAAC;IACxC,MAAMuC,aAAa,GAAG,IAAI,CAACmC,oBAAoB,CAACpM,WAAW,CAAC;IAC5D,OAAO9Y,QAAM,CAACmjB,MAAM,CAAC,CAACJ,aAAa,EAAEkC,WAAW,CAAC,CAAC;;EAG7CtlB,MAAMA,CAAUmZ,WAAc,EAAE1Z,IAAY;;IAEjD,MAAM2jB,aAAa,GAAG,IAAI,CAACmC,oBAAoB,CAACpM,WAAW,CAAC;IAC5D,IAAIiK,aAAa,CAACoC,OAAO,CAAC/lB,IAAI,CAACL,KAAK,CAAC,CAAC,EAAEgkB,aAAa,CAACpkB,MAAM,CAAC,CAAC,EAAE;MAC9D,MAAM,IAAIkF,KAAK,CAAC,+BAA+B,CAAC;;IAElD,OAAO,IAAI,CAACuhB,eAAe,CAACtM,WAAW,EAAE1Z,IAAI,CAAC;;EAGzCimB,SAASA,CAAUjmB,IAAY;IACpC,KAAK,MAAM,CAAC4D,IAAI,EAAE8f,MAAM,CAAC,IAAI,IAAI,CAACiC,cAAc,EAAE;MAChD,MAAM3B,SAAS,GAAGhkB,IAAI,CAACikB,QAAQ,CAAC,CAAC,EAAEP,MAAM,CAACC,aAAa,CAACpkB,MAAM,CAAC;MAC/D,MAAM2a,OAAO,GAAG8J,SAAS,CAACE,MAAM,CAACtjB,QAAM,CAACC,IAAI,CAAC6iB,MAAM,CAACC,aAAa,CAAC,CAAC;MACnE,IAAIzJ,OAAO,EAAE,OAAO,IAAI,CAAC8L,eAAe,CAACpiB,IAAI,EAAE5D,IAAI,CAAC;;IAGtD,MAAM,IAAIyE,KAAK,CAAC,mBAAmB,CAAC;;EAG/BuhB,eAAeA,CAAUtM,WAAc,EAAE1U,GAAW;;IAEzD,MAAM2e,aAAa,GAAG,IAAI,CAACmC,oBAAoB,CAACpM,WAAW,CAAC;IAC5D,MAAM1Z,IAAI,GAAGgF,GAAG,CAACif,QAAQ,CAACN,aAAa,CAACpkB,MAAM,CAAC;IAC/C,MAAMmkB,MAAM,GAAG,IAAI,CAACiC,cAAc,CAAC1O,GAAG,CAACyC,WAAW,CAAC;IACnD,IAAI,CAACgK,MAAM,EAAE;MACX,MAAM,IAAIjf,KAAK,CAAC,oBAAoBiV,WAAW,EAAE,CAAC;;IAEpD,OAAOgK,MAAM,CAACA,MAAM,CAACnjB,MAAM,CAACP,IAAI,CAAC;;EAG5BkmB,MAAMA,CAACxM,WAAc,EAAEyM,UAAmB;IAC/C,MAAMxC,aAAa,GAAG,IAAI,CAACmC,oBAAoB,CAACpM,WAAW,CAAC;IAC5D,OAAO;MACL0M,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE9kB,MAAI,CAACxB,MAAM,CAChBomB,UAAU,GAAGvlB,QAAM,CAACmjB,MAAM,CAAC,CAACJ,aAAa,EAAEwC,UAAU,CAAC,CAAC,GAAGxC,aAAa;KAE1E;;EAGIzkB,IAAIA,CAACwa,WAAc;IACxB,OACE,IAAI,CAACoM,oBAAoB,CAACpM,WAAW,CAAC,CAACna,MAAM,GAC7CsgB,QAAQ,CAAC0C,QAAQ,CAAC;MAAEhB,OAAO,EAAE;QAAE3d,IAAI,EAAE8V;MAAW;IAAE,CAAE,EAAE,IAAI,CAACjX,GAAG,CAAC;;EAInE;;;;AAIG;EACIqjB,oBAAoBA,CAACliB,IAAY;;IACtC,MAAMwH,OAAO,GAAG,CAAAjH,EAAA,OAAI,CAAC1B,GAAG,CAACsC,QAAQ,cAAAZ,EAAA,uBAAAA,EAAA,CAAE8F,IAAI,CAAEjF,GAAG,IAAKA,GAAG,CAACpB,IAAI,KAAKA,IAAI,CAAC;IACnE,IAAI,CAACwH,OAAO,EAAE;MACZ,MAAM,IAAI3G,KAAK,CAAC,sBAAsBb,IAAI,EAAE,CAAC;;IAG/C,OAAOhD,QAAM,CAACC,IAAI,CAACuK,OAAO,CAACuY,aAAa,CAAC;;AAE5C;MClHY2C,eAAe;EAS1BjhB,YAAmB5C,GAAQ;IACzB,IAAI,CAACA,GAAG,CAAC8jB,MAAM,EAAE;MACf,IAAI,CAACX,OAAO,GAAG,IAAI7hB,GAAG,EAAE;MACxB;;IAGF,MAAMic,KAAK,GAAGvd,GAAG,CAACud,KAAK;IACvB,IAAI,CAACA,KAAK,EAAE;MACV,MAAM,IAAIvb,KAAK,CAAC,4BAA4B,CAAC;;IAG/C,MAAMmhB,OAAO,GAAGnjB,GAAG,CAAC8jB,MAAM,CAAC/mB,GAAG,CAAEgnB,EAAE,IAAI;MACpC,MAAMhF,OAAO,GAAGxB,KAAK,CAAC/V,IAAI,CAAEuY,EAAE,IAAKA,EAAE,CAAC5e,IAAI,KAAK4iB,EAAE,CAAC5iB,IAAI,CAAC;MACvD,IAAI,CAAC4d,OAAO,EAAE;QACZ,MAAM,IAAI/c,KAAK,CAAC,oBAAoB+hB,EAAE,CAAC5iB,IAAI,EAAE,CAAC;;MAEhD,OAAO,CACL4iB,EAAE,CAAC5iB,IAAI,EACP;QACE+f,aAAa,EAAE6C,EAAE,CAAC7C,aAAa;QAC/BD,MAAM,EAAE7D,QAAQ,CAAC4B,aAAa,CAAC;UAAED,OAAO;UAAExB;QAAK,CAAE;MAClD,EACO;IACZ,CAAC,CAAC;IACF,IAAI,CAAC4F,OAAO,GAAG,IAAI7hB,GAAG,CAAC6hB,OAAO,CAAC;;EAG1BrlB,MAAMA,CAAC+X,GAAW;IAIvB,IAAImO,MAAc;;IAElB,IAAI;MACFA,MAAM,GAAGlmB,MAAa,CAAC+X,GAAG,CAAC;KAC5B,CAAC,OAAOrU,CAAC,EAAE;MACV,OAAO,IAAI;;IAGb,KAAK,MAAM,CAACL,IAAI,EAAE8f,MAAM,CAAC,IAAI,IAAI,CAACkC,OAAO,EAAE;MACzC,MAAM5B,SAAS,GAAGyC,MAAM,CAACxC,QAAQ,CAAC,CAAC,EAAEP,MAAM,CAACC,aAAa,CAACpkB,MAAM,CAAC;MACjE,MAAM2a,OAAO,GAAG8J,SAAS,CAACE,MAAM,CAACtjB,QAAM,CAACC,IAAI,CAAC6iB,MAAM,CAACC,aAAa,CAAC,CAAC;MACnE,IAAIzJ,OAAO,EAAE;QACX,OAAO;UACLtW,IAAI;UACJ5D,IAAI,EAAE0jB,MAAM,CAACA,MAAM,CAACnjB,MAAM,CAACkmB,MAAM,CAACxC,QAAQ,CAACD,SAAS,CAACzkB,MAAM,CAAC;SAC7D;;;IAIL,OAAO,IAAI;;AAEd;;AC9DD;;AAEG;MACUmnB,eAAe;EAM1BrhB,YAAmB5C,GAAQ;IACzB,MAAMud,KAAK,GAAGvd,GAAG,CAACud,KAAK;IACvB,IAAI,CAACA,KAAK,EAAE;MACV,IAAI,CAAC2G,WAAW,GAAG,IAAI5iB,GAAG,EAAE;MAC5B;;IAGF,MAAM6hB,OAAO,GAAkB5F,KAAK,CACjCsD,MAAM,CAAEd,EAAE,IAAK,CAACA,EAAE,CAACd,QAAQ,CAAC,CAC5BliB,GAAG,CAAEgjB,EAAE,IAAK,CACXA,EAAE,CAAC5e,IAAS,EACZic,QAAQ,CAAC4B,aAAa,CAAC;MAAED,OAAO,EAAEgB,EAAE;MAAExC;IAAK,CAAE,CAAC,CAC/C,CAAC;IACJ,IAAI,CAAC2G,WAAW,GAAG,IAAI5iB,GAAG,CAAC6hB,OAAO,CAAC;;EAG9B7lB,MAAMA,CAAU6D,IAAO,EAAEiC,IAAO;IACrC,MAAMge,MAAM,GAAGjjB,QAAM,CAACkjB,KAAK,CAAC,IAAI,CAAC,CAAC;IAClC,MAAMJ,MAAM,GAAG,IAAI,CAACiD,WAAW,CAAC1P,GAAG,CAACrT,IAAI,CAAC;IACzC,IAAI,CAAC8f,MAAM,EAAE;MACX,MAAM,IAAIjf,KAAK,CAAC,iBAAiBb,IAAI,EAAE,CAAC;;IAE1C,MAAMwd,GAAG,GAAGsC,MAAM,CAAC3jB,MAAM,CAAC8F,IAAI,EAAEge,MAAM,CAAC;IAEvC,OAAOA,MAAM,CAAClkB,KAAK,CAAC,CAAC,EAAEyhB,GAAG,CAAC;;EAGtB7gB,MAAMA,CAAUqD,IAAO,EAAE5D,IAAY;IAC1C,MAAM0jB,MAAM,GAAG,IAAI,CAACiD,WAAW,CAAC1P,GAAG,CAACrT,IAAI,CAAC;IACzC,IAAI,CAAC8f,MAAM,EAAE;MACX,MAAM,IAAIjf,KAAK,CAAC,iBAAiBb,IAAI,EAAE,CAAC;;IAE1C,OAAO8f,MAAM,CAACnjB,MAAM,CAACP,IAAI,CAAC;;AAE7B;;ACtCD;;;AAGG;MACU4mB,UAAU;EAuBrBvhB,YAAY5C,GAAQ;IAClB,IAAI,CAACokB,WAAW,GAAG,IAAItD,qBAAqB,CAAC9gB,GAAG,CAAC;IACjD,IAAI,CAACsC,QAAQ,GAAG,IAAI2gB,kBAAkB,CAACjjB,GAAG,CAAC;IAC3C,IAAI,CAAC8jB,MAAM,GAAG,IAAID,eAAe,CAAC7jB,GAAG,CAAC;IACtC,IAAI,CAACud,KAAK,GAAG,IAAI0G,eAAe,CAACjkB,GAAG,CAAC;;AAExC;;;;;;;;;;;;;;;;;;;;;;;;;AC0FD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMqkB,MAAM,CAAC;EACXzhB,WAAWA,CAAC0hB,IAAI,EAAEC,QAAQ,EAAE;IAC1B,IAAI,CAACC,MAAM,CAACC,SAAS,CAACH,IAAI,CAAC,EAAE;MAC3B,MAAM,IAAI3hB,SAAS,CAAC,yBAAyB,CAAC;IACpD;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAAC2hB,IAAI,GAAGA,IAAI;;IAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,qBAAqBA,CAAA,EAAG;IACtB,OAAO,EAAE;EACb;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE5mB,MAAMA,CAAC6mB,CAAC,EAAEhB,MAAM,EAAE;IAChB,MAAM,IAAI3hB,KAAK,CAAC,oBAAoB,CAAC;EACzC;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE1E,MAAMA,CAACsnB,GAAG,EAAED,CAAC,EAAEhB,MAAM,EAAE;IACrB,MAAM,IAAI3hB,KAAK,CAAC,oBAAoB,CAAC;EACzC;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE6iB,OAAOA,CAACF,CAAC,EAAEhB,MAAM,EAAE;IACjB,IAAI,CAAC,GAAG,IAAI,CAACW,IAAI,EAAE;MACjB,MAAM,IAAIQ,UAAU,CAAC,oBAAoB,CAAC;IAChD;IACI,OAAO,IAAI,CAACR,IAAI;EACpB;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE1E,SAASA,CAAC2E,QAAQ,EAAE;IAClB,MAAMQ,EAAE,GAAGxhB,MAAM,CAACyC,MAAM,CAAC,IAAI,CAACpD,WAAW,CAACoiB,SAAS,CAAC;IACpDzhB,MAAM,CAACC,MAAM,CAACuhB,EAAE,EAAE,IAAI,CAAC;IACvBA,EAAE,CAACR,QAAQ,GAAGA,QAAQ;IACtB,OAAOQ,EAAE;EACb;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,SAASA,CAACC,MAAM,EAAE;IAChB,OAAO7gB,SAAS;EACpB;AACA;AACA,IAAc8gB,QAAA,GAAGd,MAAM;;AAEvB;AACA;AACA;AACA;AACA;AACA,SAASe,gBAAgBA,CAACjkB,IAAI,EAAEkkB,EAAE,EAAE;EAClC,IAAIA,EAAE,CAACd,QAAQ,EAAE;IACf,OAAOpjB,IAAI,GAAG,GAAG,GAAGkkB,EAAE,CAACd,QAAQ,GAAG,GAAG;EACzC;EACE,OAAOpjB,IAAI;AACb;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMmkB,cAAc,SAASjB,MAAM,CAAC;EACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEkB,OAAOA,CAAA,EAAG;IACR,MAAM,IAAIvjB,KAAK,CAAC,4BAA4B,CAAC;EACjD;AACA;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}